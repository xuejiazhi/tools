Index: go.mod
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>module sys_tool\r\n\r\ngo 1.19\r\n\r\nrequire (\r\n\tgithub.com/jedib0t/go-pretty/v6 v6.3.6\r\n\tgithub.com/shirou/gopsutil/v3 v3.22.7\r\n\tgithub.com/spf13/cast v1.5.0\r\n\tgithub.com/spf13/cobra v1.5.0\r\n)\r\n\r\nrequire (\r\n\tgithub.com/go-ole/go-ole v1.2.6 // indirect\r\n\tgithub.com/inconshreveable/mousetrap v1.0.0 // indirect\r\n\tgithub.com/lufia/plan9stats v0.0.0-20220517141722-cf486979b281 // indirect\r\n\tgithub.com/mattn/go-runewidth v0.0.13 // indirect\r\n\tgithub.com/power-devops/perfstat v0.0.0-20220216144756-c35f1ee13d7c // indirect\r\n\tgithub.com/rivo/uniseg v0.3.4 // indirect\r\n\tgithub.com/spf13/pflag v1.0.5 // indirect\r\n\tgithub.com/yusufpapurcu/wmi v1.2.2 // indirect\r\n\tgolang.org/x/sys v0.0.0-20220817070843-5a390386f1f2 // indirect\r\n)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/go.mod b/go.mod
--- a/go.mod	(revision b6c9c1e8efbf197e08bd681060843b1bbd75b58b)
+++ b/go.mod	(date 1660734912690)
@@ -5,7 +5,6 @@
 require (
 	github.com/jedib0t/go-pretty/v6 v6.3.6
 	github.com/shirou/gopsutil/v3 v3.22.7
-	github.com/spf13/cast v1.5.0
 	github.com/spf13/cobra v1.5.0
 )
 
@@ -17,6 +16,8 @@
 	github.com/power-devops/perfstat v0.0.0-20220216144756-c35f1ee13d7c // indirect
 	github.com/rivo/uniseg v0.3.4 // indirect
 	github.com/spf13/pflag v1.0.5 // indirect
+	github.com/tklauser/go-sysconf v0.3.10 // indirect
+	github.com/tklauser/numcpus v0.4.0 // indirect
 	github.com/yusufpapurcu/wmi v1.2.2 // indirect
 	golang.org/x/sys v0.0.0-20220817070843-5a390386f1f2 // indirect
 )
Index: cmd/util/show.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package util\r\n\r\nimport (\r\n\t\"github.com/jedib0t/go-pretty/v6/table\"\r\n\t\"os\"\r\n)\r\n\r\nfunc ShowTable(header []interface{}, data [][]interface{}) {\r\n\tprettyTable := table.NewWriter()\r\n\tprettyTable.SetOutputMirror(os.Stdout)\r\n\t//prettyTable.AppendHeader([]interface{}{\"#\", \"First Name\", \"Last Name\", \"Salary\"})\r\n\tprettyTable.AppendHeader(header)\r\n\tif len(data) > 0 {\r\n\t\tfor _, v := range data {\r\n\t\t\tprettyTable.AppendRow(v)\r\n\t\t}\r\n\t}\r\n\tprettyTable.Render()\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmd/util/show.go b/cmd/util/show.go
--- a/cmd/util/show.go	(revision b6c9c1e8efbf197e08bd681060843b1bbd75b58b)
+++ b/cmd/util/show.go	(date 1660734451572)
@@ -13,6 +13,7 @@
 	if len(data) > 0 {
 		for _, v := range data {
 			prettyTable.AppendRow(v)
+			prettyTable.AppendSeparator()
 		}
 	}
 	prettyTable.Render()
Index: cmd/opt/systeminfo.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package opt\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"github.com/shirou/gopsutil/v3/mem\"\r\n\t\"sys_tool/cmd/util\"\r\n)\r\n\r\ntype SysInfo struct {\r\n}\r\n\r\nfunc (s *SysInfo) ShowMemory(flag string) {\r\n\tfmt.Println(\"#Memory\")\r\n\t//util.ShowTable()\r\n\theaders := []interface{}{\"#\", \"total\", \"used\", \"free\", \"shared\", \"buff\", \"cache\", \"available\"}\r\n\tvar data [][]interface{}\r\n\t//virtual Memory\r\n\tvm, _ := mem.VirtualMemory()\r\n\tvar vmData []interface{}\r\n\tvmData = append(vmData, \"Mem:\")\r\n\tvmData = append(vmData, util.FormatSize(vm.Total, flag))\r\n\tvmData = append(vmData, util.FormatSize(vm.Used, flag))\r\n\tvmData = append(vmData, util.FormatSize(vm.Free, flag))\r\n\tvmData = append(vmData, util.FormatSize(vm.Shared, flag))\r\n\tvmData = append(vmData, util.FormatSize(vm.Buffers, flag))\r\n\tvmData = append(vmData, util.FormatSize(vm.Cached, flag))\r\n\tvmData = append(vmData, util.FormatSize(vm.Available, flag))\r\n\tdata = append(data, vmData)\r\n\t//Swap Memory\r\n\tsm, _ := mem.SwapMemory()\r\n\tvar smData []interface{}\r\n\tsmData = append(smData, \"Swap\")\r\n\tsmData = append(smData, util.FormatSize(sm.Total, flag))\r\n\tsmData = append(smData, util.FormatSize(sm.Used, flag))\r\n\tsmData = append(smData, util.FormatSize(sm.Free, flag))\r\n\t//virtualMemory := mem\r\n\tdata = append(data, smData)\r\n\tutil.ShowTable(headers, data)\r\n}\r\n\r\nfunc (s *SysInfo) ShowCpu() {\r\n\tfmt.Println(\"cpu\")\r\n}\r\n\r\nfunc (s *SysInfo) ShowDisk() {\r\n\tfmt.Println(\"disk\")\r\n}\r\n\r\nfunc (s *SysInfo) ShowAll() {\r\n\tfmt.Println(\"all\")\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/cmd/opt/systeminfo.go b/cmd/opt/systeminfo.go
--- a/cmd/opt/systeminfo.go	(revision b6c9c1e8efbf197e08bd681060843b1bbd75b58b)
+++ b/cmd/opt/systeminfo.go	(date 1660735300949)
@@ -2,6 +2,7 @@
 
 import (
 	"fmt"
+	"github.com/shirou/gopsutil/v3/cpu"
 	"github.com/shirou/gopsutil/v3/mem"
 	"sys_tool/cmd/util"
 )
@@ -10,7 +11,7 @@
 }
 
 func (s *SysInfo) ShowMemory(flag string) {
-	fmt.Println("#Memory")
+	fmt.Println("# Memory")
 	//util.ShowTable()
 	headers := []interface{}{"#", "total", "used", "free", "shared", "buff", "cache", "available"}
 	var data [][]interface{}
@@ -40,6 +41,8 @@
 
 func (s *SysInfo) ShowCpu() {
 	fmt.Println("cpu")
+	info, _ := cpu.Info()
+	fmt.Println("INFO=>", info)
 }
 
 func (s *SysInfo) ShowDisk() {
Index: vendor/github.com/spf13/cast/Makefile
===================================================================
diff --git a/vendor/github.com/spf13/cast/Makefile b/vendor/github.com/spf13/cast/Makefile
deleted file mode 100644
--- a/vendor/github.com/spf13/cast/Makefile	(revision b6c9c1e8efbf197e08bd681060843b1bbd75b58b)
+++ /dev/null	(revision b6c9c1e8efbf197e08bd681060843b1bbd75b58b)
@@ -1,40 +0,0 @@
-GOVERSION := $(shell go version | cut -d ' ' -f 3 | cut -d '.' -f 2)
-
-.PHONY: check fmt lint test test-race vet test-cover-html help
-.DEFAULT_GOAL := help
-
-check: test-race fmt vet lint ## Run tests and linters
-
-test: ## Run tests
-	go test ./...
-
-test-race: ## Run tests with race detector
-	go test -race ./...
-
-fmt: ## Run gofmt linter
-ifeq "$(GOVERSION)" "12"
-	@for d in `go list` ; do \
-		if [ "`gofmt -l -s $$GOPATH/src/$$d | tee /dev/stderr`" ]; then \
-			echo "^ improperly formatted go files" && echo && exit 1; \
-		fi \
-	done
-endif
-
-lint: ## Run golint linter
-	@for d in `go list` ; do \
-		if [ "`golint $$d | tee /dev/stderr`" ]; then \
-			echo "^ golint errors!" && echo && exit 1; \
-		fi \
-	done
-
-vet: ## Run go vet linter
-	@if [ "`go vet | tee /dev/stderr`" ]; then \
-		echo "^ go vet errors!" && echo && exit 1; \
-	fi
-
-test-cover-html: ## Generate test coverage report
-	go test -coverprofile=coverage.out -covermode=count
-	go tool cover -func=coverage.out
-
-help:
-	@grep -E '^[a-zA-Z0-9_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'
Index: vendor/github.com/spf13/cast/README.md
===================================================================
diff --git a/vendor/github.com/spf13/cast/README.md b/vendor/github.com/spf13/cast/README.md
deleted file mode 100644
--- a/vendor/github.com/spf13/cast/README.md	(revision b6c9c1e8efbf197e08bd681060843b1bbd75b58b)
+++ /dev/null	(revision b6c9c1e8efbf197e08bd681060843b1bbd75b58b)
@@ -1,75 +0,0 @@
-cast
-====
-[![GoDoc](https://godoc.org/github.com/spf13/cast?status.svg)](https://godoc.org/github.com/spf13/cast)
-[![Build Status](https://github.com/spf13/cast/actions/workflows/go.yml/badge.svg)](https://github.com/spf13/cast/actions/workflows/go.yml)
-[![Go Report Card](https://goreportcard.com/badge/github.com/spf13/cast)](https://goreportcard.com/report/github.com/spf13/cast)
-
-Easy and safe casting from one type to another in Go
-
-Don’t Panic! ... Cast
-
-## What is Cast?
-
-Cast is a library to convert between different go types in a consistent and easy way.
-
-Cast provides simple functions to easily convert a number to a string, an
-interface into a bool, etc. Cast does this intelligently when an obvious
-conversion is possible. It doesn’t make any attempts to guess what you meant,
-for example you can only convert a string to an int when it is a string
-representation of an int such as “8”. Cast was developed for use in
-[Hugo](http://hugo.spf13.com), a website engine which uses YAML, TOML or JSON
-for meta data.
-
-## Why use Cast?
-
-When working with dynamic data in Go you often need to cast or convert the data
-from one type into another. Cast goes beyond just using type assertion (though
-it uses that when possible) to provide a very straightforward and convenient
-library.
-
-If you are working with interfaces to handle things like dynamic content
-you’ll need an easy way to convert an interface into a given type. This
-is the library for you.
-
-If you are taking in data from YAML, TOML or JSON or other formats which lack
-full types, then Cast is the library for you.
-
-## Usage
-
-Cast provides a handful of To_____ methods. These methods will always return
-the desired type. **If input is provided that will not convert to that type, the
-0 or nil value for that type will be returned**.
-
-Cast also provides identical methods To_____E. These return the same result as
-the To_____ methods, plus an additional error which tells you if it successfully
-converted. Using these methods you can tell the difference between when the
-input matched the zero value or when the conversion failed and the zero value
-was returned.
-
-The following examples are merely a sample of what is available. Please review
-the code for a complete set.
-
-### Example ‘ToString’:
-
-    cast.ToString("mayonegg")         // "mayonegg"
-    cast.ToString(8)                  // "8"
-    cast.ToString(8.31)               // "8.31"
-    cast.ToString([]byte("one time")) // "one time"
-    cast.ToString(nil)                // ""
-
-	var foo interface{} = "one more time"
-    cast.ToString(foo)                // "one more time"
-
-
-### Example ‘ToInt’:
-
-    cast.ToInt(8)                  // 8
-    cast.ToInt(8.31)               // 8
-    cast.ToInt("8")                // 8
-    cast.ToInt(true)               // 1
-    cast.ToInt(false)              // 0
-
-	var eight interface{} = 8
-    cast.ToInt(eight)              // 8
-    cast.ToInt(nil)                // 0
-
Index: vendor/github.com/spf13/cast/timeformattype_string.go
===================================================================
diff --git a/vendor/github.com/spf13/cast/timeformattype_string.go b/vendor/github.com/spf13/cast/timeformattype_string.go
deleted file mode 100644
--- a/vendor/github.com/spf13/cast/timeformattype_string.go	(revision b6c9c1e8efbf197e08bd681060843b1bbd75b58b)
+++ /dev/null	(revision b6c9c1e8efbf197e08bd681060843b1bbd75b58b)
@@ -1,27 +0,0 @@
-// Code generated by "stringer -type timeFormatType"; DO NOT EDIT.
-
-package cast
-
-import "strconv"
-
-func _() {
-	// An "invalid array index" compiler error signifies that the constant values have changed.
-	// Re-run the stringer command to generate them again.
-	var x [1]struct{}
-	_ = x[timeFormatNoTimezone-0]
-	_ = x[timeFormatNamedTimezone-1]
-	_ = x[timeFormatNumericTimezone-2]
-	_ = x[timeFormatNumericAndNamedTimezone-3]
-	_ = x[timeFormatTimeOnly-4]
-}
-
-const _timeFormatType_name = "timeFormatNoTimezonetimeFormatNamedTimezonetimeFormatNumericTimezonetimeFormatNumericAndNamedTimezonetimeFormatTimeOnly"
-
-var _timeFormatType_index = [...]uint8{0, 20, 43, 68, 101, 119}
-
-func (i timeFormatType) String() string {
-	if i < 0 || i >= timeFormatType(len(_timeFormatType_index)-1) {
-		return "timeFormatType(" + strconv.FormatInt(int64(i), 10) + ")"
-	}
-	return _timeFormatType_name[_timeFormatType_index[i]:_timeFormatType_index[i+1]]
-}
Index: vendor/github.com/spf13/cast/.gitignore
===================================================================
diff --git a/vendor/github.com/spf13/cast/.gitignore b/vendor/github.com/spf13/cast/.gitignore
deleted file mode 100644
--- a/vendor/github.com/spf13/cast/.gitignore	(revision b6c9c1e8efbf197e08bd681060843b1bbd75b58b)
+++ /dev/null	(revision b6c9c1e8efbf197e08bd681060843b1bbd75b58b)
@@ -1,25 +0,0 @@
-# Compiled Object files, Static and Dynamic libs (Shared Objects)
-*.o
-*.a
-*.so
-
-# Folders
-_obj
-_test
-
-# Architecture specific extensions/prefixes
-*.[568vq]
-[568vq].out
-
-*.cgo1.go
-*.cgo2.c
-_cgo_defun.c
-_cgo_gotypes.go
-_cgo_export.*
-
-_testmain.go
-
-*.exe
-*.test
-
-*.bench
Index: vendor/github.com/spf13/cast/caste.go
===================================================================
diff --git a/vendor/github.com/spf13/cast/caste.go b/vendor/github.com/spf13/cast/caste.go
deleted file mode 100644
--- a/vendor/github.com/spf13/cast/caste.go	(revision b6c9c1e8efbf197e08bd681060843b1bbd75b58b)
+++ /dev/null	(revision b6c9c1e8efbf197e08bd681060843b1bbd75b58b)
@@ -1,1476 +0,0 @@
-// Copyright © 2014 Steve Francia <spf@spf13.com>.
-//
-// Use of this source code is governed by an MIT-style
-// license that can be found in the LICENSE file.
-
-package cast
-
-import (
-	"encoding/json"
-	"errors"
-	"fmt"
-	"html/template"
-	"reflect"
-	"strconv"
-	"strings"
-	"time"
-)
-
-var errNegativeNotAllowed = errors.New("unable to cast negative value")
-
-// ToTimeE casts an interface to a time.Time type.
-func ToTimeE(i interface{}) (tim time.Time, err error) {
-	return ToTimeInDefaultLocationE(i, time.UTC)
-}
-
-// ToTimeInDefaultLocationE casts an empty interface to time.Time,
-// interpreting inputs without a timezone to be in the given location,
-// or the local timezone if nil.
-func ToTimeInDefaultLocationE(i interface{}, location *time.Location) (tim time.Time, err error) {
-	i = indirect(i)
-
-	switch v := i.(type) {
-	case time.Time:
-		return v, nil
-	case string:
-		return StringToDateInDefaultLocation(v, location)
-	case json.Number:
-		s, err1 := ToInt64E(v)
-		if err1 != nil {
-			return time.Time{}, fmt.Errorf("unable to cast %#v of type %T to Time", i, i)
-		}
-		return time.Unix(s, 0), nil
-	case int:
-		return time.Unix(int64(v), 0), nil
-	case int64:
-		return time.Unix(v, 0), nil
-	case int32:
-		return time.Unix(int64(v), 0), nil
-	case uint:
-		return time.Unix(int64(v), 0), nil
-	case uint64:
-		return time.Unix(int64(v), 0), nil
-	case uint32:
-		return time.Unix(int64(v), 0), nil
-	default:
-		return time.Time{}, fmt.Errorf("unable to cast %#v of type %T to Time", i, i)
-	}
-}
-
-// ToDurationE casts an interface to a time.Duration type.
-func ToDurationE(i interface{}) (d time.Duration, err error) {
-	i = indirect(i)
-
-	switch s := i.(type) {
-	case time.Duration:
-		return s, nil
-	case int, int64, int32, int16, int8, uint, uint64, uint32, uint16, uint8:
-		d = time.Duration(ToInt64(s))
-		return
-	case float32, float64:
-		d = time.Duration(ToFloat64(s))
-		return
-	case string:
-		if strings.ContainsAny(s, "nsuµmh") {
-			d, err = time.ParseDuration(s)
-		} else {
-			d, err = time.ParseDuration(s + "ns")
-		}
-		return
-	case json.Number:
-		var v float64
-		v, err = s.Float64()
-		d = time.Duration(v)
-		return
-	default:
-		err = fmt.Errorf("unable to cast %#v of type %T to Duration", i, i)
-		return
-	}
-}
-
-// ToBoolE casts an interface to a bool type.
-func ToBoolE(i interface{}) (bool, error) {
-	i = indirect(i)
-
-	switch b := i.(type) {
-	case bool:
-		return b, nil
-	case nil:
-		return false, nil
-	case int:
-		if i.(int) != 0 {
-			return true, nil
-		}
-		return false, nil
-	case string:
-		return strconv.ParseBool(i.(string))
-	case json.Number:
-		v, err := ToInt64E(b)
-		if err == nil {
-			return v != 0, nil
-		}
-		return false, fmt.Errorf("unable to cast %#v of type %T to bool", i, i)
-	default:
-		return false, fmt.Errorf("unable to cast %#v of type %T to bool", i, i)
-	}
-}
-
-// ToFloat64E casts an interface to a float64 type.
-func ToFloat64E(i interface{}) (float64, error) {
-	i = indirect(i)
-
-	intv, ok := toInt(i)
-	if ok {
-		return float64(intv), nil
-	}
-
-	switch s := i.(type) {
-	case float64:
-		return s, nil
-	case float32:
-		return float64(s), nil
-	case int64:
-		return float64(s), nil
-	case int32:
-		return float64(s), nil
-	case int16:
-		return float64(s), nil
-	case int8:
-		return float64(s), nil
-	case uint:
-		return float64(s), nil
-	case uint64:
-		return float64(s), nil
-	case uint32:
-		return float64(s), nil
-	case uint16:
-		return float64(s), nil
-	case uint8:
-		return float64(s), nil
-	case string:
-		v, err := strconv.ParseFloat(s, 64)
-		if err == nil {
-			return v, nil
-		}
-		return 0, fmt.Errorf("unable to cast %#v of type %T to float64", i, i)
-	case json.Number:
-		v, err := s.Float64()
-		if err == nil {
-			return v, nil
-		}
-		return 0, fmt.Errorf("unable to cast %#v of type %T to float64", i, i)
-	case bool:
-		if s {
-			return 1, nil
-		}
-		return 0, nil
-	case nil:
-		return 0, nil
-	default:
-		return 0, fmt.Errorf("unable to cast %#v of type %T to float64", i, i)
-	}
-}
-
-// ToFloat32E casts an interface to a float32 type.
-func ToFloat32E(i interface{}) (float32, error) {
-	i = indirect(i)
-
-	intv, ok := toInt(i)
-	if ok {
-		return float32(intv), nil
-	}
-
-	switch s := i.(type) {
-	case float64:
-		return float32(s), nil
-	case float32:
-		return s, nil
-	case int64:
-		return float32(s), nil
-	case int32:
-		return float32(s), nil
-	case int16:
-		return float32(s), nil
-	case int8:
-		return float32(s), nil
-	case uint:
-		return float32(s), nil
-	case uint64:
-		return float32(s), nil
-	case uint32:
-		return float32(s), nil
-	case uint16:
-		return float32(s), nil
-	case uint8:
-		return float32(s), nil
-	case string:
-		v, err := strconv.ParseFloat(s, 32)
-		if err == nil {
-			return float32(v), nil
-		}
-		return 0, fmt.Errorf("unable to cast %#v of type %T to float32", i, i)
-	case json.Number:
-		v, err := s.Float64()
-		if err == nil {
-			return float32(v), nil
-		}
-		return 0, fmt.Errorf("unable to cast %#v of type %T to float32", i, i)
-	case bool:
-		if s {
-			return 1, nil
-		}
-		return 0, nil
-	case nil:
-		return 0, nil
-	default:
-		return 0, fmt.Errorf("unable to cast %#v of type %T to float32", i, i)
-	}
-}
-
-// ToInt64E casts an interface to an int64 type.
-func ToInt64E(i interface{}) (int64, error) {
-	i = indirect(i)
-
-	intv, ok := toInt(i)
-	if ok {
-		return int64(intv), nil
-	}
-
-	switch s := i.(type) {
-	case int64:
-		return s, nil
-	case int32:
-		return int64(s), nil
-	case int16:
-		return int64(s), nil
-	case int8:
-		return int64(s), nil
-	case uint:
-		return int64(s), nil
-	case uint64:
-		return int64(s), nil
-	case uint32:
-		return int64(s), nil
-	case uint16:
-		return int64(s), nil
-	case uint8:
-		return int64(s), nil
-	case float64:
-		return int64(s), nil
-	case float32:
-		return int64(s), nil
-	case string:
-		v, err := strconv.ParseInt(trimZeroDecimal(s), 0, 0)
-		if err == nil {
-			return v, nil
-		}
-		return 0, fmt.Errorf("unable to cast %#v of type %T to int64", i, i)
-	case json.Number:
-		return ToInt64E(string(s))
-	case bool:
-		if s {
-			return 1, nil
-		}
-		return 0, nil
-	case nil:
-		return 0, nil
-	default:
-		return 0, fmt.Errorf("unable to cast %#v of type %T to int64", i, i)
-	}
-}
-
-// ToInt32E casts an interface to an int32 type.
-func ToInt32E(i interface{}) (int32, error) {
-	i = indirect(i)
-
-	intv, ok := toInt(i)
-	if ok {
-		return int32(intv), nil
-	}
-
-	switch s := i.(type) {
-	case int64:
-		return int32(s), nil
-	case int32:
-		return s, nil
-	case int16:
-		return int32(s), nil
-	case int8:
-		return int32(s), nil
-	case uint:
-		return int32(s), nil
-	case uint64:
-		return int32(s), nil
-	case uint32:
-		return int32(s), nil
-	case uint16:
-		return int32(s), nil
-	case uint8:
-		return int32(s), nil
-	case float64:
-		return int32(s), nil
-	case float32:
-		return int32(s), nil
-	case string:
-		v, err := strconv.ParseInt(trimZeroDecimal(s), 0, 0)
-		if err == nil {
-			return int32(v), nil
-		}
-		return 0, fmt.Errorf("unable to cast %#v of type %T to int32", i, i)
-	case json.Number:
-		return ToInt32E(string(s))
-	case bool:
-		if s {
-			return 1, nil
-		}
-		return 0, nil
-	case nil:
-		return 0, nil
-	default:
-		return 0, fmt.Errorf("unable to cast %#v of type %T to int32", i, i)
-	}
-}
-
-// ToInt16E casts an interface to an int16 type.
-func ToInt16E(i interface{}) (int16, error) {
-	i = indirect(i)
-
-	intv, ok := toInt(i)
-	if ok {
-		return int16(intv), nil
-	}
-
-	switch s := i.(type) {
-	case int64:
-		return int16(s), nil
-	case int32:
-		return int16(s), nil
-	case int16:
-		return s, nil
-	case int8:
-		return int16(s), nil
-	case uint:
-		return int16(s), nil
-	case uint64:
-		return int16(s), nil
-	case uint32:
-		return int16(s), nil
-	case uint16:
-		return int16(s), nil
-	case uint8:
-		return int16(s), nil
-	case float64:
-		return int16(s), nil
-	case float32:
-		return int16(s), nil
-	case string:
-		v, err := strconv.ParseInt(trimZeroDecimal(s), 0, 0)
-		if err == nil {
-			return int16(v), nil
-		}
-		return 0, fmt.Errorf("unable to cast %#v of type %T to int16", i, i)
-	case json.Number:
-		return ToInt16E(string(s))
-	case bool:
-		if s {
-			return 1, nil
-		}
-		return 0, nil
-	case nil:
-		return 0, nil
-	default:
-		return 0, fmt.Errorf("unable to cast %#v of type %T to int16", i, i)
-	}
-}
-
-// ToInt8E casts an interface to an int8 type.
-func ToInt8E(i interface{}) (int8, error) {
-	i = indirect(i)
-
-	intv, ok := toInt(i)
-	if ok {
-		return int8(intv), nil
-	}
-
-	switch s := i.(type) {
-	case int64:
-		return int8(s), nil
-	case int32:
-		return int8(s), nil
-	case int16:
-		return int8(s), nil
-	case int8:
-		return s, nil
-	case uint:
-		return int8(s), nil
-	case uint64:
-		return int8(s), nil
-	case uint32:
-		return int8(s), nil
-	case uint16:
-		return int8(s), nil
-	case uint8:
-		return int8(s), nil
-	case float64:
-		return int8(s), nil
-	case float32:
-		return int8(s), nil
-	case string:
-		v, err := strconv.ParseInt(trimZeroDecimal(s), 0, 0)
-		if err == nil {
-			return int8(v), nil
-		}
-		return 0, fmt.Errorf("unable to cast %#v of type %T to int8", i, i)
-	case json.Number:
-		return ToInt8E(string(s))
-	case bool:
-		if s {
-			return 1, nil
-		}
-		return 0, nil
-	case nil:
-		return 0, nil
-	default:
-		return 0, fmt.Errorf("unable to cast %#v of type %T to int8", i, i)
-	}
-}
-
-// ToIntE casts an interface to an int type.
-func ToIntE(i interface{}) (int, error) {
-	i = indirect(i)
-
-	intv, ok := toInt(i)
-	if ok {
-		return intv, nil
-	}
-
-	switch s := i.(type) {
-	case int64:
-		return int(s), nil
-	case int32:
-		return int(s), nil
-	case int16:
-		return int(s), nil
-	case int8:
-		return int(s), nil
-	case uint:
-		return int(s), nil
-	case uint64:
-		return int(s), nil
-	case uint32:
-		return int(s), nil
-	case uint16:
-		return int(s), nil
-	case uint8:
-		return int(s), nil
-	case float64:
-		return int(s), nil
-	case float32:
-		return int(s), nil
-	case string:
-		v, err := strconv.ParseInt(trimZeroDecimal(s), 0, 0)
-		if err == nil {
-			return int(v), nil
-		}
-		return 0, fmt.Errorf("unable to cast %#v of type %T to int64", i, i)
-	case json.Number:
-		return ToIntE(string(s))
-	case bool:
-		if s {
-			return 1, nil
-		}
-		return 0, nil
-	case nil:
-		return 0, nil
-	default:
-		return 0, fmt.Errorf("unable to cast %#v of type %T to int", i, i)
-	}
-}
-
-// ToUintE casts an interface to a uint type.
-func ToUintE(i interface{}) (uint, error) {
-	i = indirect(i)
-
-	intv, ok := toInt(i)
-	if ok {
-		if intv < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint(intv), nil
-	}
-
-	switch s := i.(type) {
-	case string:
-		v, err := strconv.ParseInt(trimZeroDecimal(s), 0, 0)
-		if err == nil {
-			if v < 0 {
-				return 0, errNegativeNotAllowed
-			}
-			return uint(v), nil
-		}
-		return 0, fmt.Errorf("unable to cast %#v of type %T to uint", i, i)
-	case json.Number:
-		return ToUintE(string(s))
-	case int64:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint(s), nil
-	case int32:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint(s), nil
-	case int16:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint(s), nil
-	case int8:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint(s), nil
-	case uint:
-		return s, nil
-	case uint64:
-		return uint(s), nil
-	case uint32:
-		return uint(s), nil
-	case uint16:
-		return uint(s), nil
-	case uint8:
-		return uint(s), nil
-	case float64:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint(s), nil
-	case float32:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint(s), nil
-	case bool:
-		if s {
-			return 1, nil
-		}
-		return 0, nil
-	case nil:
-		return 0, nil
-	default:
-		return 0, fmt.Errorf("unable to cast %#v of type %T to uint", i, i)
-	}
-}
-
-// ToUint64E casts an interface to a uint64 type.
-func ToUint64E(i interface{}) (uint64, error) {
-	i = indirect(i)
-
-	intv, ok := toInt(i)
-	if ok {
-		if intv < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint64(intv), nil
-	}
-
-	switch s := i.(type) {
-	case string:
-		v, err := strconv.ParseInt(trimZeroDecimal(s), 0, 0)
-		if err == nil {
-			if v < 0 {
-				return 0, errNegativeNotAllowed
-			}
-			return uint64(v), nil
-		}
-		return 0, fmt.Errorf("unable to cast %#v of type %T to uint64", i, i)
-	case json.Number:
-		return ToUint64E(string(s))
-	case int64:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint64(s), nil
-	case int32:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint64(s), nil
-	case int16:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint64(s), nil
-	case int8:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint64(s), nil
-	case uint:
-		return uint64(s), nil
-	case uint64:
-		return s, nil
-	case uint32:
-		return uint64(s), nil
-	case uint16:
-		return uint64(s), nil
-	case uint8:
-		return uint64(s), nil
-	case float32:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint64(s), nil
-	case float64:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint64(s), nil
-	case bool:
-		if s {
-			return 1, nil
-		}
-		return 0, nil
-	case nil:
-		return 0, nil
-	default:
-		return 0, fmt.Errorf("unable to cast %#v of type %T to uint64", i, i)
-	}
-}
-
-// ToUint32E casts an interface to a uint32 type.
-func ToUint32E(i interface{}) (uint32, error) {
-	i = indirect(i)
-
-	intv, ok := toInt(i)
-	if ok {
-		if intv < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint32(intv), nil
-	}
-
-	switch s := i.(type) {
-	case string:
-		v, err := strconv.ParseInt(trimZeroDecimal(s), 0, 0)
-		if err == nil {
-			if v < 0 {
-				return 0, errNegativeNotAllowed
-			}
-			return uint32(v), nil
-		}
-		return 0, fmt.Errorf("unable to cast %#v of type %T to uint32", i, i)
-	case json.Number:
-		return ToUint32E(string(s))
-	case int64:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint32(s), nil
-	case int32:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint32(s), nil
-	case int16:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint32(s), nil
-	case int8:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint32(s), nil
-	case uint:
-		return uint32(s), nil
-	case uint64:
-		return uint32(s), nil
-	case uint32:
-		return s, nil
-	case uint16:
-		return uint32(s), nil
-	case uint8:
-		return uint32(s), nil
-	case float64:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint32(s), nil
-	case float32:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint32(s), nil
-	case bool:
-		if s {
-			return 1, nil
-		}
-		return 0, nil
-	case nil:
-		return 0, nil
-	default:
-		return 0, fmt.Errorf("unable to cast %#v of type %T to uint32", i, i)
-	}
-}
-
-// ToUint16E casts an interface to a uint16 type.
-func ToUint16E(i interface{}) (uint16, error) {
-	i = indirect(i)
-
-	intv, ok := toInt(i)
-	if ok {
-		if intv < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint16(intv), nil
-	}
-
-	switch s := i.(type) {
-	case string:
-		v, err := strconv.ParseInt(trimZeroDecimal(s), 0, 0)
-		if err == nil {
-			if v < 0 {
-				return 0, errNegativeNotAllowed
-			}
-			return uint16(v), nil
-		}
-		return 0, fmt.Errorf("unable to cast %#v of type %T to uint16", i, i)
-	case json.Number:
-		return ToUint16E(string(s))
-	case int64:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint16(s), nil
-	case int32:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint16(s), nil
-	case int16:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint16(s), nil
-	case int8:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint16(s), nil
-	case uint:
-		return uint16(s), nil
-	case uint64:
-		return uint16(s), nil
-	case uint32:
-		return uint16(s), nil
-	case uint16:
-		return s, nil
-	case uint8:
-		return uint16(s), nil
-	case float64:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint16(s), nil
-	case float32:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint16(s), nil
-	case bool:
-		if s {
-			return 1, nil
-		}
-		return 0, nil
-	case nil:
-		return 0, nil
-	default:
-		return 0, fmt.Errorf("unable to cast %#v of type %T to uint16", i, i)
-	}
-}
-
-// ToUint8E casts an interface to a uint type.
-func ToUint8E(i interface{}) (uint8, error) {
-	i = indirect(i)
-
-	intv, ok := toInt(i)
-	if ok {
-		if intv < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint8(intv), nil
-	}
-
-	switch s := i.(type) {
-	case string:
-		v, err := strconv.ParseInt(trimZeroDecimal(s), 0, 0)
-		if err == nil {
-			if v < 0 {
-				return 0, errNegativeNotAllowed
-			}
-			return uint8(v), nil
-		}
-		return 0, fmt.Errorf("unable to cast %#v of type %T to uint8", i, i)
-	case json.Number:
-		return ToUint8E(string(s))
-	case int64:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint8(s), nil
-	case int32:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint8(s), nil
-	case int16:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint8(s), nil
-	case int8:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint8(s), nil
-	case uint:
-		return uint8(s), nil
-	case uint64:
-		return uint8(s), nil
-	case uint32:
-		return uint8(s), nil
-	case uint16:
-		return uint8(s), nil
-	case uint8:
-		return s, nil
-	case float64:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint8(s), nil
-	case float32:
-		if s < 0 {
-			return 0, errNegativeNotAllowed
-		}
-		return uint8(s), nil
-	case bool:
-		if s {
-			return 1, nil
-		}
-		return 0, nil
-	case nil:
-		return 0, nil
-	default:
-		return 0, fmt.Errorf("unable to cast %#v of type %T to uint8", i, i)
-	}
-}
-
-// From html/template/content.go
-// Copyright 2011 The Go Authors. All rights reserved.
-// indirect returns the value, after dereferencing as many times
-// as necessary to reach the base type (or nil).
-func indirect(a interface{}) interface{} {
-	if a == nil {
-		return nil
-	}
-	if t := reflect.TypeOf(a); t.Kind() != reflect.Ptr {
-		// Avoid creating a reflect.Value if it's not a pointer.
-		return a
-	}
-	v := reflect.ValueOf(a)
-	for v.Kind() == reflect.Ptr && !v.IsNil() {
-		v = v.Elem()
-	}
-	return v.Interface()
-}
-
-// From html/template/content.go
-// Copyright 2011 The Go Authors. All rights reserved.
-// indirectToStringerOrError returns the value, after dereferencing as many times
-// as necessary to reach the base type (or nil) or an implementation of fmt.Stringer
-// or error,
-func indirectToStringerOrError(a interface{}) interface{} {
-	if a == nil {
-		return nil
-	}
-
-	var errorType = reflect.TypeOf((*error)(nil)).Elem()
-	var fmtStringerType = reflect.TypeOf((*fmt.Stringer)(nil)).Elem()
-
-	v := reflect.ValueOf(a)
-	for !v.Type().Implements(fmtStringerType) && !v.Type().Implements(errorType) && v.Kind() == reflect.Ptr && !v.IsNil() {
-		v = v.Elem()
-	}
-	return v.Interface()
-}
-
-// ToStringE casts an interface to a string type.
-func ToStringE(i interface{}) (string, error) {
-	i = indirectToStringerOrError(i)
-
-	switch s := i.(type) {
-	case string:
-		return s, nil
-	case bool:
-		return strconv.FormatBool(s), nil
-	case float64:
-		return strconv.FormatFloat(s, 'f', -1, 64), nil
-	case float32:
-		return strconv.FormatFloat(float64(s), 'f', -1, 32), nil
-	case int:
-		return strconv.Itoa(s), nil
-	case int64:
-		return strconv.FormatInt(s, 10), nil
-	case int32:
-		return strconv.Itoa(int(s)), nil
-	case int16:
-		return strconv.FormatInt(int64(s), 10), nil
-	case int8:
-		return strconv.FormatInt(int64(s), 10), nil
-	case uint:
-		return strconv.FormatUint(uint64(s), 10), nil
-	case uint64:
-		return strconv.FormatUint(uint64(s), 10), nil
-	case uint32:
-		return strconv.FormatUint(uint64(s), 10), nil
-	case uint16:
-		return strconv.FormatUint(uint64(s), 10), nil
-	case uint8:
-		return strconv.FormatUint(uint64(s), 10), nil
-	case json.Number:
-		return s.String(), nil
-	case []byte:
-		return string(s), nil
-	case template.HTML:
-		return string(s), nil
-	case template.URL:
-		return string(s), nil
-	case template.JS:
-		return string(s), nil
-	case template.CSS:
-		return string(s), nil
-	case template.HTMLAttr:
-		return string(s), nil
-	case nil:
-		return "", nil
-	case fmt.Stringer:
-		return s.String(), nil
-	case error:
-		return s.Error(), nil
-	default:
-		return "", fmt.Errorf("unable to cast %#v of type %T to string", i, i)
-	}
-}
-
-// ToStringMapStringE casts an interface to a map[string]string type.
-func ToStringMapStringE(i interface{}) (map[string]string, error) {
-	var m = map[string]string{}
-
-	switch v := i.(type) {
-	case map[string]string:
-		return v, nil
-	case map[string]interface{}:
-		for k, val := range v {
-			m[ToString(k)] = ToString(val)
-		}
-		return m, nil
-	case map[interface{}]string:
-		for k, val := range v {
-			m[ToString(k)] = ToString(val)
-		}
-		return m, nil
-	case map[interface{}]interface{}:
-		for k, val := range v {
-			m[ToString(k)] = ToString(val)
-		}
-		return m, nil
-	case string:
-		err := jsonStringToObject(v, &m)
-		return m, err
-	default:
-		return m, fmt.Errorf("unable to cast %#v of type %T to map[string]string", i, i)
-	}
-}
-
-// ToStringMapStringSliceE casts an interface to a map[string][]string type.
-func ToStringMapStringSliceE(i interface{}) (map[string][]string, error) {
-	var m = map[string][]string{}
-
-	switch v := i.(type) {
-	case map[string][]string:
-		return v, nil
-	case map[string][]interface{}:
-		for k, val := range v {
-			m[ToString(k)] = ToStringSlice(val)
-		}
-		return m, nil
-	case map[string]string:
-		for k, val := range v {
-			m[ToString(k)] = []string{val}
-		}
-	case map[string]interface{}:
-		for k, val := range v {
-			switch vt := val.(type) {
-			case []interface{}:
-				m[ToString(k)] = ToStringSlice(vt)
-			case []string:
-				m[ToString(k)] = vt
-			default:
-				m[ToString(k)] = []string{ToString(val)}
-			}
-		}
-		return m, nil
-	case map[interface{}][]string:
-		for k, val := range v {
-			m[ToString(k)] = ToStringSlice(val)
-		}
-		return m, nil
-	case map[interface{}]string:
-		for k, val := range v {
-			m[ToString(k)] = ToStringSlice(val)
-		}
-		return m, nil
-	case map[interface{}][]interface{}:
-		for k, val := range v {
-			m[ToString(k)] = ToStringSlice(val)
-		}
-		return m, nil
-	case map[interface{}]interface{}:
-		for k, val := range v {
-			key, err := ToStringE(k)
-			if err != nil {
-				return m, fmt.Errorf("unable to cast %#v of type %T to map[string][]string", i, i)
-			}
-			value, err := ToStringSliceE(val)
-			if err != nil {
-				return m, fmt.Errorf("unable to cast %#v of type %T to map[string][]string", i, i)
-			}
-			m[key] = value
-		}
-	case string:
-		err := jsonStringToObject(v, &m)
-		return m, err
-	default:
-		return m, fmt.Errorf("unable to cast %#v of type %T to map[string][]string", i, i)
-	}
-	return m, nil
-}
-
-// ToStringMapBoolE casts an interface to a map[string]bool type.
-func ToStringMapBoolE(i interface{}) (map[string]bool, error) {
-	var m = map[string]bool{}
-
-	switch v := i.(type) {
-	case map[interface{}]interface{}:
-		for k, val := range v {
-			m[ToString(k)] = ToBool(val)
-		}
-		return m, nil
-	case map[string]interface{}:
-		for k, val := range v {
-			m[ToString(k)] = ToBool(val)
-		}
-		return m, nil
-	case map[string]bool:
-		return v, nil
-	case string:
-		err := jsonStringToObject(v, &m)
-		return m, err
-	default:
-		return m, fmt.Errorf("unable to cast %#v of type %T to map[string]bool", i, i)
-	}
-}
-
-// ToStringMapE casts an interface to a map[string]interface{} type.
-func ToStringMapE(i interface{}) (map[string]interface{}, error) {
-	var m = map[string]interface{}{}
-
-	switch v := i.(type) {
-	case map[interface{}]interface{}:
-		for k, val := range v {
-			m[ToString(k)] = val
-		}
-		return m, nil
-	case map[string]interface{}:
-		return v, nil
-	case string:
-		err := jsonStringToObject(v, &m)
-		return m, err
-	default:
-		return m, fmt.Errorf("unable to cast %#v of type %T to map[string]interface{}", i, i)
-	}
-}
-
-// ToStringMapIntE casts an interface to a map[string]int{} type.
-func ToStringMapIntE(i interface{}) (map[string]int, error) {
-	var m = map[string]int{}
-	if i == nil {
-		return m, fmt.Errorf("unable to cast %#v of type %T to map[string]int", i, i)
-	}
-
-	switch v := i.(type) {
-	case map[interface{}]interface{}:
-		for k, val := range v {
-			m[ToString(k)] = ToInt(val)
-		}
-		return m, nil
-	case map[string]interface{}:
-		for k, val := range v {
-			m[k] = ToInt(val)
-		}
-		return m, nil
-	case map[string]int:
-		return v, nil
-	case string:
-		err := jsonStringToObject(v, &m)
-		return m, err
-	}
-
-	if reflect.TypeOf(i).Kind() != reflect.Map {
-		return m, fmt.Errorf("unable to cast %#v of type %T to map[string]int", i, i)
-	}
-
-	mVal := reflect.ValueOf(m)
-	v := reflect.ValueOf(i)
-	for _, keyVal := range v.MapKeys() {
-		val, err := ToIntE(v.MapIndex(keyVal).Interface())
-		if err != nil {
-			return m, fmt.Errorf("unable to cast %#v of type %T to map[string]int", i, i)
-		}
-		mVal.SetMapIndex(keyVal, reflect.ValueOf(val))
-	}
-	return m, nil
-}
-
-// ToStringMapInt64E casts an interface to a map[string]int64{} type.
-func ToStringMapInt64E(i interface{}) (map[string]int64, error) {
-	var m = map[string]int64{}
-	if i == nil {
-		return m, fmt.Errorf("unable to cast %#v of type %T to map[string]int64", i, i)
-	}
-
-	switch v := i.(type) {
-	case map[interface{}]interface{}:
-		for k, val := range v {
-			m[ToString(k)] = ToInt64(val)
-		}
-		return m, nil
-	case map[string]interface{}:
-		for k, val := range v {
-			m[k] = ToInt64(val)
-		}
-		return m, nil
-	case map[string]int64:
-		return v, nil
-	case string:
-		err := jsonStringToObject(v, &m)
-		return m, err
-	}
-
-	if reflect.TypeOf(i).Kind() != reflect.Map {
-		return m, fmt.Errorf("unable to cast %#v of type %T to map[string]int64", i, i)
-	}
-	mVal := reflect.ValueOf(m)
-	v := reflect.ValueOf(i)
-	for _, keyVal := range v.MapKeys() {
-		val, err := ToInt64E(v.MapIndex(keyVal).Interface())
-		if err != nil {
-			return m, fmt.Errorf("unable to cast %#v of type %T to map[string]int64", i, i)
-		}
-		mVal.SetMapIndex(keyVal, reflect.ValueOf(val))
-	}
-	return m, nil
-}
-
-// ToSliceE casts an interface to a []interface{} type.
-func ToSliceE(i interface{}) ([]interface{}, error) {
-	var s []interface{}
-
-	switch v := i.(type) {
-	case []interface{}:
-		return append(s, v...), nil
-	case []map[string]interface{}:
-		for _, u := range v {
-			s = append(s, u)
-		}
-		return s, nil
-	default:
-		return s, fmt.Errorf("unable to cast %#v of type %T to []interface{}", i, i)
-	}
-}
-
-// ToBoolSliceE casts an interface to a []bool type.
-func ToBoolSliceE(i interface{}) ([]bool, error) {
-	if i == nil {
-		return []bool{}, fmt.Errorf("unable to cast %#v of type %T to []bool", i, i)
-	}
-
-	switch v := i.(type) {
-	case []bool:
-		return v, nil
-	}
-
-	kind := reflect.TypeOf(i).Kind()
-	switch kind {
-	case reflect.Slice, reflect.Array:
-		s := reflect.ValueOf(i)
-		a := make([]bool, s.Len())
-		for j := 0; j < s.Len(); j++ {
-			val, err := ToBoolE(s.Index(j).Interface())
-			if err != nil {
-				return []bool{}, fmt.Errorf("unable to cast %#v of type %T to []bool", i, i)
-			}
-			a[j] = val
-		}
-		return a, nil
-	default:
-		return []bool{}, fmt.Errorf("unable to cast %#v of type %T to []bool", i, i)
-	}
-}
-
-// ToStringSliceE casts an interface to a []string type.
-func ToStringSliceE(i interface{}) ([]string, error) {
-	var a []string
-
-	switch v := i.(type) {
-	case []interface{}:
-		for _, u := range v {
-			a = append(a, ToString(u))
-		}
-		return a, nil
-	case []string:
-		return v, nil
-	case []int8:
-		for _, u := range v {
-			a = append(a, ToString(u))
-		}
-		return a, nil
-	case []int:
-		for _, u := range v {
-			a = append(a, ToString(u))
-		}
-		return a, nil
-	case []int32:
-		for _, u := range v {
-			a = append(a, ToString(u))
-		}
-		return a, nil
-	case []int64:
-		for _, u := range v {
-			a = append(a, ToString(u))
-		}
-		return a, nil
-	case []float32:
-		for _, u := range v {
-			a = append(a, ToString(u))
-		}
-		return a, nil
-	case []float64:
-		for _, u := range v {
-			a = append(a, ToString(u))
-		}
-		return a, nil
-	case string:
-		return strings.Fields(v), nil
-	case []error:
-		for _, err := range i.([]error) {
-			a = append(a, err.Error())
-		}
-		return a, nil
-	case interface{}:
-		str, err := ToStringE(v)
-		if err != nil {
-			return a, fmt.Errorf("unable to cast %#v of type %T to []string", i, i)
-		}
-		return []string{str}, nil
-	default:
-		return a, fmt.Errorf("unable to cast %#v of type %T to []string", i, i)
-	}
-}
-
-// ToIntSliceE casts an interface to a []int type.
-func ToIntSliceE(i interface{}) ([]int, error) {
-	if i == nil {
-		return []int{}, fmt.Errorf("unable to cast %#v of type %T to []int", i, i)
-	}
-
-	switch v := i.(type) {
-	case []int:
-		return v, nil
-	}
-
-	kind := reflect.TypeOf(i).Kind()
-	switch kind {
-	case reflect.Slice, reflect.Array:
-		s := reflect.ValueOf(i)
-		a := make([]int, s.Len())
-		for j := 0; j < s.Len(); j++ {
-			val, err := ToIntE(s.Index(j).Interface())
-			if err != nil {
-				return []int{}, fmt.Errorf("unable to cast %#v of type %T to []int", i, i)
-			}
-			a[j] = val
-		}
-		return a, nil
-	default:
-		return []int{}, fmt.Errorf("unable to cast %#v of type %T to []int", i, i)
-	}
-}
-
-// ToDurationSliceE casts an interface to a []time.Duration type.
-func ToDurationSliceE(i interface{}) ([]time.Duration, error) {
-	if i == nil {
-		return []time.Duration{}, fmt.Errorf("unable to cast %#v of type %T to []time.Duration", i, i)
-	}
-
-	switch v := i.(type) {
-	case []time.Duration:
-		return v, nil
-	}
-
-	kind := reflect.TypeOf(i).Kind()
-	switch kind {
-	case reflect.Slice, reflect.Array:
-		s := reflect.ValueOf(i)
-		a := make([]time.Duration, s.Len())
-		for j := 0; j < s.Len(); j++ {
-			val, err := ToDurationE(s.Index(j).Interface())
-			if err != nil {
-				return []time.Duration{}, fmt.Errorf("unable to cast %#v of type %T to []time.Duration", i, i)
-			}
-			a[j] = val
-		}
-		return a, nil
-	default:
-		return []time.Duration{}, fmt.Errorf("unable to cast %#v of type %T to []time.Duration", i, i)
-	}
-}
-
-// StringToDate attempts to parse a string into a time.Time type using a
-// predefined list of formats.  If no suitable format is found, an error is
-// returned.
-func StringToDate(s string) (time.Time, error) {
-	return parseDateWith(s, time.UTC, timeFormats)
-}
-
-// StringToDateInDefaultLocation casts an empty interface to a time.Time,
-// interpreting inputs without a timezone to be in the given location,
-// or the local timezone if nil.
-func StringToDateInDefaultLocation(s string, location *time.Location) (time.Time, error) {
-	return parseDateWith(s, location, timeFormats)
-}
-
-type timeFormatType int
-
-const (
-	timeFormatNoTimezone timeFormatType = iota
-	timeFormatNamedTimezone
-	timeFormatNumericTimezone
-	timeFormatNumericAndNamedTimezone
-	timeFormatTimeOnly
-)
-
-type timeFormat struct {
-	format string
-	typ    timeFormatType
-}
-
-func (f timeFormat) hasTimezone() bool {
-	// We don't include the formats with only named timezones, see
-	// https://github.com/golang/go/issues/19694#issuecomment-289103522
-	return f.typ >= timeFormatNumericTimezone && f.typ <= timeFormatNumericAndNamedTimezone
-}
-
-var (
-	timeFormats = []timeFormat{
-		{time.RFC3339, timeFormatNumericTimezone},
-		{"2006-01-02T15:04:05", timeFormatNoTimezone}, // iso8601 without timezone
-		{time.RFC1123Z, timeFormatNumericTimezone},
-		{time.RFC1123, timeFormatNamedTimezone},
-		{time.RFC822Z, timeFormatNumericTimezone},
-		{time.RFC822, timeFormatNamedTimezone},
-		{time.RFC850, timeFormatNamedTimezone},
-		{"2006-01-02 15:04:05.999999999 -0700 MST", timeFormatNumericAndNamedTimezone}, // Time.String()
-		{"2006-01-02T15:04:05-0700", timeFormatNumericTimezone},                        // RFC3339 without timezone hh:mm colon
-		{"2006-01-02 15:04:05Z0700", timeFormatNumericTimezone},                        // RFC3339 without T or timezone hh:mm colon
-		{"2006-01-02 15:04:05", timeFormatNoTimezone},
-		{time.ANSIC, timeFormatNoTimezone},
-		{time.UnixDate, timeFormatNamedTimezone},
-		{time.RubyDate, timeFormatNumericTimezone},
-		{"2006-01-02 15:04:05Z07:00", timeFormatNumericTimezone},
-		{"2006-01-02", timeFormatNoTimezone},
-		{"02 Jan 2006", timeFormatNoTimezone},
-		{"2006-01-02 15:04:05 -07:00", timeFormatNumericTimezone},
-		{"2006-01-02 15:04:05 -0700", timeFormatNumericTimezone},
-		{time.Kitchen, timeFormatTimeOnly},
-		{time.Stamp, timeFormatTimeOnly},
-		{time.StampMilli, timeFormatTimeOnly},
-		{time.StampMicro, timeFormatTimeOnly},
-		{time.StampNano, timeFormatTimeOnly},
-	}
-)
-
-func parseDateWith(s string, location *time.Location, formats []timeFormat) (d time.Time, e error) {
-
-	for _, format := range formats {
-		if d, e = time.Parse(format.format, s); e == nil {
-
-			// Some time formats have a zone name, but no offset, so it gets
-			// put in that zone name (not the default one passed in to us), but
-			// without that zone's offset. So set the location manually.
-			if format.typ <= timeFormatNamedTimezone {
-				if location == nil {
-					location = time.Local
-				}
-				year, month, day := d.Date()
-				hour, min, sec := d.Clock()
-				d = time.Date(year, month, day, hour, min, sec, d.Nanosecond(), location)
-			}
-
-			return
-		}
-	}
-	return d, fmt.Errorf("unable to parse date: %s", s)
-}
-
-// jsonStringToObject attempts to unmarshall a string as JSON into
-// the object passed as pointer.
-func jsonStringToObject(s string, v interface{}) error {
-	data := []byte(s)
-	return json.Unmarshal(data, v)
-}
-
-// toInt returns the int value of v if v or v's underlying type
-// is an int.
-// Note that this will return false for int64 etc. types.
-func toInt(v interface{}) (int, bool) {
-	switch v := v.(type) {
-	case int:
-		return v, true
-	case time.Weekday:
-		return int(v), true
-	case time.Month:
-		return int(v), true
-	default:
-		return 0, false
-	}
-}
-
-func trimZeroDecimal(s string) string {
-	var foundZero bool
-	for i := len(s); i > 0; i-- {
-		switch s[i-1] {
-		case '.':
-			if foundZero {
-				return s[:i-1]
-			}
-		case '0':
-			foundZero = true
-		default:
-			return s
-		}
-	}
-	return s
-}
Index: vendor/github.com/spf13/cast/cast.go
===================================================================
diff --git a/vendor/github.com/spf13/cast/cast.go b/vendor/github.com/spf13/cast/cast.go
deleted file mode 100644
--- a/vendor/github.com/spf13/cast/cast.go	(revision b6c9c1e8efbf197e08bd681060843b1bbd75b58b)
+++ /dev/null	(revision b6c9c1e8efbf197e08bd681060843b1bbd75b58b)
@@ -1,176 +0,0 @@
-// Copyright © 2014 Steve Francia <spf@spf13.com>.
-//
-// Use of this source code is governed by an MIT-style
-// license that can be found in the LICENSE file.
-
-// Package cast provides easy and safe casting in Go.
-package cast
-
-import "time"
-
-// ToBool casts an interface to a bool type.
-func ToBool(i interface{}) bool {
-	v, _ := ToBoolE(i)
-	return v
-}
-
-// ToTime casts an interface to a time.Time type.
-func ToTime(i interface{}) time.Time {
-	v, _ := ToTimeE(i)
-	return v
-}
-
-func ToTimeInDefaultLocation(i interface{}, location *time.Location) time.Time {
-	v, _ := ToTimeInDefaultLocationE(i, location)
-	return v
-}
-
-// ToDuration casts an interface to a time.Duration type.
-func ToDuration(i interface{}) time.Duration {
-	v, _ := ToDurationE(i)
-	return v
-}
-
-// ToFloat64 casts an interface to a float64 type.
-func ToFloat64(i interface{}) float64 {
-	v, _ := ToFloat64E(i)
-	return v
-}
-
-// ToFloat32 casts an interface to a float32 type.
-func ToFloat32(i interface{}) float32 {
-	v, _ := ToFloat32E(i)
-	return v
-}
-
-// ToInt64 casts an interface to an int64 type.
-func ToInt64(i interface{}) int64 {
-	v, _ := ToInt64E(i)
-	return v
-}
-
-// ToInt32 casts an interface to an int32 type.
-func ToInt32(i interface{}) int32 {
-	v, _ := ToInt32E(i)
-	return v
-}
-
-// ToInt16 casts an interface to an int16 type.
-func ToInt16(i interface{}) int16 {
-	v, _ := ToInt16E(i)
-	return v
-}
-
-// ToInt8 casts an interface to an int8 type.
-func ToInt8(i interface{}) int8 {
-	v, _ := ToInt8E(i)
-	return v
-}
-
-// ToInt casts an interface to an int type.
-func ToInt(i interface{}) int {
-	v, _ := ToIntE(i)
-	return v
-}
-
-// ToUint casts an interface to a uint type.
-func ToUint(i interface{}) uint {
-	v, _ := ToUintE(i)
-	return v
-}
-
-// ToUint64 casts an interface to a uint64 type.
-func ToUint64(i interface{}) uint64 {
-	v, _ := ToUint64E(i)
-	return v
-}
-
-// ToUint32 casts an interface to a uint32 type.
-func ToUint32(i interface{}) uint32 {
-	v, _ := ToUint32E(i)
-	return v
-}
-
-// ToUint16 casts an interface to a uint16 type.
-func ToUint16(i interface{}) uint16 {
-	v, _ := ToUint16E(i)
-	return v
-}
-
-// ToUint8 casts an interface to a uint8 type.
-func ToUint8(i interface{}) uint8 {
-	v, _ := ToUint8E(i)
-	return v
-}
-
-// ToString casts an interface to a string type.
-func ToString(i interface{}) string {
-	v, _ := ToStringE(i)
-	return v
-}
-
-// ToStringMapString casts an interface to a map[string]string type.
-func ToStringMapString(i interface{}) map[string]string {
-	v, _ := ToStringMapStringE(i)
-	return v
-}
-
-// ToStringMapStringSlice casts an interface to a map[string][]string type.
-func ToStringMapStringSlice(i interface{}) map[string][]string {
-	v, _ := ToStringMapStringSliceE(i)
-	return v
-}
-
-// ToStringMapBool casts an interface to a map[string]bool type.
-func ToStringMapBool(i interface{}) map[string]bool {
-	v, _ := ToStringMapBoolE(i)
-	return v
-}
-
-// ToStringMapInt casts an interface to a map[string]int type.
-func ToStringMapInt(i interface{}) map[string]int {
-	v, _ := ToStringMapIntE(i)
-	return v
-}
-
-// ToStringMapInt64 casts an interface to a map[string]int64 type.
-func ToStringMapInt64(i interface{}) map[string]int64 {
-	v, _ := ToStringMapInt64E(i)
-	return v
-}
-
-// ToStringMap casts an interface to a map[string]interface{} type.
-func ToStringMap(i interface{}) map[string]interface{} {
-	v, _ := ToStringMapE(i)
-	return v
-}
-
-// ToSlice casts an interface to a []interface{} type.
-func ToSlice(i interface{}) []interface{} {
-	v, _ := ToSliceE(i)
-	return v
-}
-
-// ToBoolSlice casts an interface to a []bool type.
-func ToBoolSlice(i interface{}) []bool {
-	v, _ := ToBoolSliceE(i)
-	return v
-}
-
-// ToStringSlice casts an interface to a []string type.
-func ToStringSlice(i interface{}) []string {
-	v, _ := ToStringSliceE(i)
-	return v
-}
-
-// ToIntSlice casts an interface to a []int type.
-func ToIntSlice(i interface{}) []int {
-	v, _ := ToIntSliceE(i)
-	return v
-}
-
-// ToDurationSlice casts an interface to a []time.Duration type.
-func ToDurationSlice(i interface{}) []time.Duration {
-	v, _ := ToDurationSliceE(i)
-	return v
-}
Index: vendor/github.com/tklauser/go-sysconf/sysconf_darwin.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/sysconf_darwin.go b/vendor/github.com/tklauser/go-sysconf/sysconf_darwin.go
new file mode 100644
--- /dev/null	(date 1660734983771)
+++ b/vendor/github.com/tklauser/go-sysconf/sysconf_darwin.go	(date 1660734983771)
@@ -0,0 +1,267 @@
+// Copyright 2018 Tobias Klauser. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package sysconf
+
+import (
+	"golang.org/x/sys/unix"
+)
+
+const (
+	_HOST_NAME_MAX  = _MAXHOSTNAMELEN - 1
+	_LOGIN_NAME_MAX = _MAXLOGNAME
+	_SYMLOOP_MAX    = _MAXSYMLINKS
+)
+
+// sysconf implements sysconf(3) as in the Darwin libc, version 1244.30.3
+// (derived from the FreeBSD libc).
+func sysconf(name int) (int64, error) {
+	switch name {
+	case SC_AIO_LISTIO_MAX:
+		fallthrough
+	case SC_AIO_MAX:
+		return sysctl32("kern.aiomax"), nil
+	case SC_AIO_PRIO_DELTA_MAX:
+		return -1, nil
+	case SC_ARG_MAX:
+		return sysctl32("kern.argmax"), nil
+	case SC_ATEXIT_MAX:
+		return _INT_MAX, nil
+	case SC_CHILD_MAX:
+		var rlim unix.Rlimit
+		if err := unix.Getrlimit(unix.RLIMIT_NPROC, &rlim); err == nil {
+			if rlim.Cur != unix.RLIM_INFINITY {
+				return int64(rlim.Cur), nil
+			}
+		}
+		return -1, nil
+	case SC_CLK_TCK:
+		return _CLK_TCK, nil
+	case SC_DELAYTIMER_MAX:
+		return -1, nil
+	case SC_GETGR_R_SIZE_MAX:
+		return 4096, nil
+	case SC_GETPW_R_SIZE_MAX:
+		return 4096, nil
+	case SC_IOV_MAX:
+		return _IOV_MAX, nil
+	case SC_MQ_OPEN_MAX:
+		return -1, nil
+	case SC_MQ_PRIO_MAX:
+		return -1, nil
+	case SC_NGROUPS_MAX:
+		return sysctl32("kern.ngroups"), nil
+	case SC_OPEN_MAX, SC_STREAM_MAX:
+		var rlim unix.Rlimit
+		if err := unix.Getrlimit(unix.RLIMIT_NOFILE, &rlim); err == nil {
+			if rlim.Cur != unix.RLIM_INFINITY {
+				return int64(rlim.Cur), nil
+			}
+		}
+		return -1, nil
+	case SC_RTSIG_MAX:
+		return -1, nil
+	case SC_SEM_NSEMS_MAX:
+		return sysctl32("kern.sysv.semmns"), nil
+	case SC_SEM_VALUE_MAX:
+		return _POSIX_SEM_VALUE_MAX, nil
+	case SC_SIGQUEUE_MAX:
+		return -1, nil
+	case SC_THREAD_DESTRUCTOR_ITERATIONS:
+		return _PTHREAD_DESTRUCTOR_ITERATIONS, nil
+	case SC_THREAD_KEYS_MAX:
+		return _PTHREAD_KEYS_MAX, nil
+	case SC_THREAD_PRIO_INHERIT:
+		return _POSIX_THREAD_PRIO_INHERIT, nil
+	case SC_THREAD_PRIO_PROTECT:
+		return _POSIX_THREAD_PRIO_PROTECT, nil
+	case SC_THREAD_STACK_MIN:
+		return _PTHREAD_STACK_MIN, nil
+	case SC_THREAD_THREADS_MAX:
+		return -1, nil
+	case SC_TIMER_MAX:
+		return -1, nil
+	case SC_TTY_NAME_MAX:
+		// should be _PATH_DEV instead of "/"
+		return pathconf("/", _PC_NAME_MAX), nil
+	case SC_TZNAME_MAX:
+		return pathconf(_PATH_ZONEINFO, _PC_NAME_MAX), nil
+
+	case SC_IPV6:
+		if _POSIX_IPV6 == 0 {
+			fd, err := unix.Socket(unix.AF_INET6, unix.SOCK_DGRAM, 0)
+			if err == nil && fd >= 0 {
+				unix.Close(fd)
+				return int64(200112), nil
+			}
+			return 0, nil
+		}
+		return _POSIX_IPV6, nil
+	case SC_MESSAGE_PASSING:
+		if _POSIX_MESSAGE_PASSING == 0 {
+			return yesno(sysctl32("p1003_1b.message_passing")), nil
+		}
+		return _POSIX_MESSAGE_PASSING, nil
+	case SC_PRIORITIZED_IO:
+		if _POSIX_PRIORITIZED_IO == 0 {
+			return yesno(sysctl32("p1003_1b.prioritized_io")), nil
+		}
+		return _POSIX_PRIORITIZED_IO, nil
+	case SC_PRIORITY_SCHEDULING:
+		if _POSIX_PRIORITY_SCHEDULING == 0 {
+			return yesno(sysctl32("p1003_1b.priority_scheduling")), nil
+		}
+		return _POSIX_PRIORITY_SCHEDULING, nil
+	case SC_REALTIME_SIGNALS:
+		if _POSIX_REALTIME_SIGNALS == 0 {
+			return yesno(sysctl32("p1003_1b.realtime_signals")), nil
+		}
+		return _POSIX_REALTIME_SIGNALS, nil
+	case SC_SAVED_IDS:
+		return yesno(sysctl32("kern.saved_ids")), nil
+	case SC_SEMAPHORES:
+		if _POSIX_SEMAPHORES == 0 {
+			return yesno(sysctl32("p1003_1b.semaphores")), nil
+		}
+		return _POSIX_SEMAPHORES, nil
+	case SC_SPAWN:
+		return _POSIX_SPAWN, nil
+	case SC_SPIN_LOCKS:
+		return _POSIX_SPIN_LOCKS, nil
+	case SC_SPORADIC_SERVER:
+		return _POSIX_SPORADIC_SERVER, nil
+	case SC_SS_REPL_MAX:
+		return _POSIX_SS_REPL_MAX, nil
+	case SC_SYNCHRONIZED_IO:
+		if _POSIX_SYNCHRONIZED_IO == 0 {
+			return yesno(sysctl32("p1003_1b.synchronized_io")), nil
+		}
+		return _POSIX_SYNCHRONIZED_IO, nil
+	case SC_THREAD_ATTR_STACKADDR:
+		return _POSIX_THREAD_ATTR_STACKADDR, nil
+	case SC_THREAD_ATTR_STACKSIZE:
+		return _POSIX_THREAD_ATTR_STACKSIZE, nil
+	case SC_THREAD_CPUTIME:
+		return _POSIX_THREAD_CPUTIME, nil
+	case SC_THREAD_PRIORITY_SCHEDULING:
+		return _POSIX_THREAD_PRIORITY_SCHEDULING, nil
+	case SC_THREAD_PROCESS_SHARED:
+		return _POSIX_THREAD_PROCESS_SHARED, nil
+	case SC_THREAD_SAFE_FUNCTIONS:
+		return _POSIX_THREAD_SAFE_FUNCTIONS, nil
+	case SC_THREAD_SPORADIC_SERVER:
+		return _POSIX_THREAD_SPORADIC_SERVER, nil
+	case SC_TIMERS:
+		if _POSIX_TIMERS == 0 {
+			return yesno(sysctl32("p1003_1b.timers")), nil
+		}
+		return _POSIX_TIMERS, nil
+	case SC_TRACE:
+		return _POSIX_TRACE, nil
+	case SC_TRACE_EVENT_FILTER:
+		return _POSIX_TRACE_EVENT_FILTER, nil
+	case SC_TRACE_EVENT_NAME_MAX:
+		return _POSIX_TRACE_EVENT_NAME_MAX, nil
+	case SC_TRACE_INHERIT:
+		return _POSIX_TRACE_INHERIT, nil
+	case SC_TRACE_LOG:
+		return _POSIX_TRACE_LOG, nil
+	case SC_TRACE_NAME_MAX:
+		return _POSIX_TRACE_NAME_MAX, nil
+	case SC_TRACE_SYS_MAX:
+		return _POSIX_TRACE_SYS_MAX, nil
+	case SC_TRACE_USER_EVENT_MAX:
+		return _POSIX_TRACE_USER_EVENT_MAX, nil
+	case SC_TYPED_MEMORY_OBJECTS:
+		return _POSIX_TYPED_MEMORY_OBJECTS, nil
+	case SC_VERSION:
+		// TODO(tk): darwin libc uses sysctl(CTL_KERN, KERN_POSIX1)
+		return _POSIX_VERSION, nil
+
+	case SC_V6_ILP32_OFF32:
+		if _V6_ILP32_OFF32 == 0 {
+			if unix.SizeofInt*_CHAR_BIT == 32 &&
+				unix.SizeofInt == unix.SizeofLong &&
+				unix.SizeofLong == unix.SizeofPtr &&
+				unix.SizeofPtr == sizeofOffT {
+				return 1, nil
+			}
+			return -1, nil
+		}
+		return _V6_ILP32_OFF32, nil
+	case SC_V6_ILP32_OFFBIG:
+		if _V6_ILP32_OFFBIG == 0 {
+			if unix.SizeofInt*_CHAR_BIT == 32 &&
+				unix.SizeofInt == unix.SizeofLong &&
+				unix.SizeofLong == unix.SizeofPtr &&
+				sizeofOffT*_CHAR_BIT >= 64 {
+				return 1, nil
+			}
+			return -1, nil
+		}
+		return _V6_ILP32_OFFBIG, nil
+	case SC_V6_LP64_OFF64:
+		if _V6_LP64_OFF64 == 0 {
+			if unix.SizeofInt*_CHAR_BIT == 32 &&
+				unix.SizeofLong*_CHAR_BIT == 64 &&
+				unix.SizeofLong == unix.SizeofPtr &&
+				unix.SizeofPtr == sizeofOffT {
+				return 1, nil
+			}
+			return -1, nil
+		}
+		return _V6_LP64_OFF64, nil
+	case SC_V6_LPBIG_OFFBIG:
+		if _V6_LPBIG_OFFBIG == 0 {
+			if unix.SizeofInt*_CHAR_BIT >= 32 &&
+				unix.SizeofLong*_CHAR_BIT >= 64 &&
+				unix.SizeofPtr*_CHAR_BIT >= 64 &&
+				sizeofOffT*_CHAR_BIT >= 64 {
+				return 1, nil
+			}
+			return -1, nil
+		}
+		return _V6_LPBIG_OFFBIG, nil
+
+	case SC_2_CHAR_TERM:
+		return _POSIX2_CHAR_TERM, nil
+	case SC_2_PBS,
+		SC_2_PBS_ACCOUNTING,
+		SC_2_PBS_CHECKPOINT,
+		SC_2_PBS_LOCATE,
+		SC_2_PBS_MESSAGE,
+		SC_2_PBS_TRACK:
+		return _POSIX2_PBS, nil
+	case SC_2_UPE:
+		return _POSIX2_UPE, nil
+
+	case SC_XOPEN_CRYPT:
+		return _XOPEN_CRYPT, nil
+	case SC_XOPEN_ENH_I18N:
+		return _XOPEN_ENH_I18N, nil
+	case SC_XOPEN_REALTIME:
+		return _XOPEN_REALTIME, nil
+	case SC_XOPEN_REALTIME_THREADS:
+		return _XOPEN_REALTIME_THREADS, nil
+	case SC_XOPEN_SHM:
+		return _XOPEN_SHM, nil
+	case SC_XOPEN_STREAMS:
+		return -1, nil
+	case SC_XOPEN_UNIX:
+		return _XOPEN_UNIX, nil
+	case SC_XOPEN_VERSION:
+		return _XOPEN_VERSION, nil
+	case SC_XOPEN_XCU_VERSION:
+		return _XOPEN_XCU_VERSION, nil
+
+	case SC_PHYS_PAGES:
+		return sysctl64("hw.memsize") / int64(unix.Getpagesize()), nil
+	case SC_NPROCESSORS_CONF:
+		fallthrough
+	case SC_NPROCESSORS_ONLN:
+		return sysctl32("hw.ncpu"), nil
+	}
+
+	return sysconfGeneric(name)
+}
Index: vendor/github.com/tklauser/go-sysconf/sysconf_dragonfly.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/sysconf_dragonfly.go b/vendor/github.com/tklauser/go-sysconf/sysconf_dragonfly.go
new file mode 100644
--- /dev/null	(date 1660734983774)
+++ b/vendor/github.com/tklauser/go-sysconf/sysconf_dragonfly.go	(date 1660734983774)
@@ -0,0 +1,220 @@
+// Copyright 2018 Tobias Klauser. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package sysconf
+
+import "golang.org/x/sys/unix"
+
+const (
+	_HOST_NAME_MAX  = _MAXHOSTNAMELEN - 1
+	_LOGIN_NAME_MAX = _MAXLOGNAME
+	_SYMLOOP_MAX    = _MAXSYMLINKS
+)
+
+// sysconf implements sysconf(3) as in the FreeBSD 12 libc.
+func sysconf(name int) (int64, error) {
+	switch name {
+	case SC_AIO_LISTIO_MAX:
+		return sysctl32("p1003_1b.aio_listio_max"), nil
+	case SC_AIO_MAX:
+		return sysctl32("p1003_1b.aio_max"), nil
+	case SC_AIO_PRIO_DELTA_MAX:
+		return sysctl32("p1003_1b.aio_prio_delta_max"), nil
+	case SC_ARG_MAX:
+		return sysctl32("kern.argmax"), nil
+	case SC_ATEXIT_MAX:
+		return _ATEXIT_SIZE, nil
+	case SC_CHILD_MAX:
+		var rlim unix.Rlimit
+		if err := unix.Getrlimit(unix.RLIMIT_NPROC, &rlim); err == nil {
+			if rlim.Cur != unix.RLIM_INFINITY {
+				return rlim.Cur, nil
+			}
+		}
+		return -1, nil
+	case SC_CLK_TCK:
+		return _CLK_TCK, nil
+	case SC_DELAYTIMER_MAX:
+		return yesno(sysctl32("p1003_1b.delaytimer_max")), nil
+	case SC_GETGR_R_SIZE_MAX, SC_GETPW_R_SIZE_MAX:
+		return -1, nil
+	case SC_IOV_MAX:
+		return sysctl32("kern.iov_max"), nil
+	case SC_MQ_OPEN_MAX:
+		return sysctl32("kern.mqueue.mq_open_max"), nil
+	case SC_MQ_PRIO_MAX:
+		return sysctl32("kern.mqueue.mq_prio_max"), nil
+	case SC_NGROUPS_MAX:
+		return sysctl32("kern.ngroups"), nil
+	case SC_OPEN_MAX:
+		var rlim unix.Rlimit
+		if err := unix.Getrlimit(unix.RLIMIT_NOFILE, &rlim); err == nil {
+			if rlim.Cur != unix.RLIM_INFINITY {
+				return rlim.Cur, nil
+			}
+		}
+		return -1, nil
+	case SC_RTSIG_MAX:
+		return yesno(sysctl32("p1003_1b.rtsig_max")), nil
+	case SC_SEM_NSEMS_MAX:
+		return -1, nil
+	case SC_SEM_VALUE_MAX:
+		return -1, nil
+	case SC_SIGQUEUE_MAX:
+		return yesno(sysctl32("p1003_1b.sigqueue_max")), nil
+	case SC_STREAM_MAX:
+		var rlim unix.Rlimit
+		if err := unix.Getrlimit(unix.RLIMIT_NOFILE, &rlim); err == nil {
+			if rlim.Cur != unix.RLIM_INFINITY {
+				return rlim.Cur, nil
+			}
+		}
+		return -1, nil
+	case SC_THREAD_DESTRUCTOR_ITERATIONS:
+		return _PTHREAD_DESTRUCTOR_ITERATIONS, nil
+	case SC_THREAD_KEYS_MAX:
+		return _PTHREAD_KEYS_MAX, nil
+	case SC_THREAD_PRIO_INHERIT:
+		return _POSIX_THREAD_PRIO_INHERIT, nil
+	case SC_THREAD_PRIO_PROTECT:
+		return _POSIX_THREAD_PRIO_PROTECT, nil
+	case SC_THREAD_STACK_MIN:
+		return _PTHREAD_STACK_MIN, nil
+	case SC_THREAD_THREADS_MAX:
+		return -1, nil
+	case SC_TIMER_MAX:
+		return yesno(sysctl32("p1003_1b.timer_max")), nil
+	case SC_TTY_NAME_MAX:
+		return pathconf(_PATH_DEV, _PC_NAME_MAX), nil
+	case SC_TZNAME_MAX:
+		return pathconf(_PATH_ZONEINFO, _PC_NAME_MAX), nil
+
+	case SC_ASYNCHRONOUS_IO:
+		if _POSIX_ASYNCHRONOUS_IO == 0 {
+			return sysctl64("p1003_1b.asynchronous_io"), nil
+		}
+		return _POSIX_ASYNCHRONOUS_IO, nil
+	case SC_IPV6:
+		if _POSIX_IPV6 == 0 {
+			fd, err := unix.Socket(unix.AF_INET6, unix.SOCK_DGRAM, 0)
+			if err == nil && fd >= 0 {
+				unix.Close(fd)
+				return int64(200112), nil
+			}
+			return 0, nil
+		}
+		return _POSIX_IPV6, nil
+	case SC_MESSAGE_PASSING:
+		if _POSIX_MESSAGE_PASSING == 0 {
+			return yesno(sysctl32("p1003_1b.message_passing")), nil
+		}
+		return _POSIX_MESSAGE_PASSING, nil
+	case SC_PRIORITIZED_IO:
+		if _POSIX_PRIORITIZED_IO == 0 {
+			return yesno(sysctl32("p1003_1b.prioritized_io")), nil
+		}
+		return _POSIX_PRIORITIZED_IO, nil
+	case SC_PRIORITY_SCHEDULING:
+		if _POSIX_PRIORITY_SCHEDULING == 0 {
+			return yesno(sysctl32("p1003_1b.priority_scheduling")), nil
+		}
+		return _POSIX_PRIORITY_SCHEDULING, nil
+	case SC_REALTIME_SIGNALS:
+		if _POSIX_REALTIME_SIGNALS == 0 {
+			return yesno(sysctl32("p1003_1b.realtime_signals")), nil
+		}
+		return _POSIX_REALTIME_SIGNALS, nil
+	case SC_SAVED_IDS:
+		return yesno(sysctl32("kern.saved_ids")), nil
+	case SC_SEMAPHORES:
+		if _POSIX_SEMAPHORES == 0 {
+			return yesno(sysctl32("p1003_1b.semaphores")), nil
+		}
+		return _POSIX_SEMAPHORES, nil
+	case SC_SPAWN:
+		return _POSIX_SPAWN, nil
+	case SC_SPIN_LOCKS:
+		return _POSIX_SPIN_LOCKS, nil
+	case SC_SPORADIC_SERVER:
+		return _POSIX_SPORADIC_SERVER, nil
+	case SC_SYNCHRONIZED_IO:
+		if _POSIX_SYNCHRONIZED_IO == 0 {
+			return yesno(sysctl32("p1003_1b.synchronized_io")), nil
+		}
+		return _POSIX_SYNCHRONIZED_IO, nil
+	case SC_THREAD_ATTR_STACKADDR:
+		return _POSIX_THREAD_ATTR_STACKADDR, nil
+	case SC_THREAD_ATTR_STACKSIZE:
+		return _POSIX_THREAD_ATTR_STACKSIZE, nil
+	case SC_THREAD_CPUTIME:
+		return _POSIX_THREAD_CPUTIME, nil
+	case SC_THREAD_PRIORITY_SCHEDULING:
+		return _POSIX_THREAD_PRIORITY_SCHEDULING, nil
+	case SC_THREAD_PROCESS_SHARED:
+		return _POSIX_THREAD_PROCESS_SHARED, nil
+	case SC_THREAD_SAFE_FUNCTIONS:
+		return _POSIX_THREAD_SAFE_FUNCTIONS, nil
+	case SC_THREAD_SPORADIC_SERVER:
+		return _POSIX_THREAD_SPORADIC_SERVER, nil
+	case SC_TIMERS:
+		if _POSIX_TIMERS == 0 {
+			return yesno(sysctl32("p1003_1b.timers")), nil
+		}
+		return _POSIX_TIMERS, nil
+	case SC_TRACE:
+		return _POSIX_TRACE, nil
+	case SC_TYPED_MEMORY_OBJECTS:
+		return _POSIX_TYPED_MEMORY_OBJECTS, nil
+	case SC_VERSION:
+		// TODO(tk): FreeBSD libc uses sysctl(CTL_KERN, KERN_POSIX1)
+		return _POSIX_VERSION, nil
+
+		/* TODO(tk): these need GOARCH-dependent integer size checks
+		case SC_V6_ILP32_OFF32:
+			return _V6_ILP32_OFF32, nil
+		case SC_V6_ILP32_OFFBIG:
+			return _V6_ILP32_OFFBIG, nil
+		case SC_V6_LP64_OFF64:
+			return _V6_LP64_OFF64, nil
+		case SC_V6_LPBIG_OFFBIG:
+			return _V6_LPBIG_OFFBIG, nil
+		*/
+
+	case SC_2_CHAR_TERM:
+		return _POSIX2_CHAR_TERM, nil
+	case SC_2_PBS,
+		SC_2_PBS_ACCOUNTING,
+		SC_2_PBS_CHECKPOINT,
+		SC_2_PBS_LOCATE,
+		SC_2_PBS_MESSAGE,
+		SC_2_PBS_TRACK:
+		return _POSIX2_PBS, nil
+	case SC_2_UPE:
+		return _POSIX2_UPE, nil
+
+	case SC_XOPEN_CRYPT:
+		return _XOPEN_CRYPT, nil
+	case SC_XOPEN_ENH_I18N:
+		return _XOPEN_ENH_I18N, nil
+	case SC_XOPEN_REALTIME:
+		return _XOPEN_REALTIME, nil
+	case SC_XOPEN_REALTIME_THREADS:
+		return _XOPEN_REALTIME_THREADS, nil
+	case SC_XOPEN_SHM:
+		return _XOPEN_SHM, nil
+	case SC_XOPEN_STREAMS:
+		return -1, nil
+	case SC_XOPEN_UNIX:
+		return _XOPEN_UNIX, nil
+
+	case SC_PHYS_PAGES:
+		return sysctl64("hw.availpages"), nil
+	case SC_NPROCESSORS_CONF:
+		fallthrough
+	case SC_NPROCESSORS_ONLN:
+		return sysctl32("hw.ncpu"), nil
+	}
+
+	return sysconfGeneric(name)
+}
Index: vendor/github.com/tklauser/go-sysconf/sysconf_freebsd.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/sysconf_freebsd.go b/vendor/github.com/tklauser/go-sysconf/sysconf_freebsd.go
new file mode 100644
--- /dev/null	(date 1660734983775)
+++ b/vendor/github.com/tklauser/go-sysconf/sysconf_freebsd.go	(date 1660734983775)
@@ -0,0 +1,226 @@
+// Copyright 2018 Tobias Klauser. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package sysconf
+
+import "golang.org/x/sys/unix"
+
+const (
+	_HOST_NAME_MAX  = _MAXHOSTNAMELEN - 1
+	_LOGIN_NAME_MAX = _MAXLOGNAME
+	_SYMLOOP_MAX    = _MAXSYMLINKS
+)
+
+// sysconf implements sysconf(3) as in the FreeBSD 12 libc.
+func sysconf(name int) (int64, error) {
+	switch name {
+	case SC_AIO_LISTIO_MAX:
+		return sysctl32("p1003_1b.aio_listio_max"), nil
+	case SC_AIO_MAX:
+		return sysctl32("p1003_1b.aio_max"), nil
+	case SC_AIO_PRIO_DELTA_MAX:
+		return sysctl32("p1003_1b.aio_prio_delta_max"), nil
+	case SC_ARG_MAX:
+		return sysctl32("kern.argmax"), nil
+	case SC_ATEXIT_MAX:
+		return _ATEXIT_SIZE, nil
+	case SC_CHILD_MAX:
+		var rlim unix.Rlimit
+		if err := unix.Getrlimit(unix.RLIMIT_NPROC, &rlim); err == nil {
+			if rlim.Cur != unix.RLIM_INFINITY {
+				return rlim.Cur, nil
+			}
+		}
+		return -1, nil
+	case SC_CLK_TCK:
+		return _CLK_TCK, nil
+	case SC_DELAYTIMER_MAX:
+		return sysctl32("p1003_1b.delaytimer_max"), nil
+	case SC_GETGR_R_SIZE_MAX, SC_GETPW_R_SIZE_MAX:
+		return -1, nil
+	case SC_IOV_MAX:
+		return sysctl32("kern.iov_max"), nil
+	case SC_MQ_OPEN_MAX:
+		return yesno(sysctl32("p1003_1b.mq_open_max")), nil
+	case SC_MQ_PRIO_MAX:
+		return _MQ_PRIO_MAX, nil
+	case SC_NGROUPS_MAX:
+		return sysctl32("kern.ngroups"), nil
+	case SC_OPEN_MAX:
+		var rlim unix.Rlimit
+		if err := unix.Getrlimit(unix.RLIMIT_NOFILE, &rlim); err == nil {
+			if rlim.Cur != unix.RLIM_INFINITY {
+				return rlim.Cur, nil
+			}
+		}
+		return -1, nil
+	case SC_RTSIG_MAX:
+		return sysctl32("p1003_1b.rtsig_max"), nil
+	case SC_SEM_NSEMS_MAX:
+		return -1, nil
+	case SC_SEM_VALUE_MAX:
+		return _SEM_VALUE_MAX, nil
+	case SC_SIGQUEUE_MAX:
+		return sysctl32("p1003_1b.sigqueue_max"), nil
+	case SC_STREAM_MAX:
+		var rlim unix.Rlimit
+		if err := unix.Getrlimit(unix.RLIMIT_NOFILE, &rlim); err != nil {
+			return -1, nil
+		}
+		if rlim.Cur == unix.RLIM_INFINITY {
+			return -1, nil
+		}
+		if rlim.Cur > _LONG_MAX {
+			return -1, unix.EOVERFLOW
+		}
+		if rlim.Cur > _SHRT_MAX {
+			return _SHRT_MAX, nil
+		}
+		return rlim.Cur, nil
+	case SC_THREAD_DESTRUCTOR_ITERATIONS:
+		return _PTHREAD_DESTRUCTOR_ITERATIONS, nil
+	case SC_THREAD_KEYS_MAX:
+		return _PTHREAD_KEYS_MAX, nil
+	case SC_THREAD_PRIO_INHERIT:
+		return _POSIX_THREAD_PRIO_INHERIT, nil
+	case SC_THREAD_PRIO_PROTECT:
+		return _POSIX_THREAD_PRIO_PROTECT, nil
+	case SC_THREAD_STACK_MIN:
+		return _PTHREAD_STACK_MIN, nil
+	case SC_THREAD_THREADS_MAX:
+		return -1, nil
+	case SC_TIMER_MAX:
+		return yesno(sysctl32("p1003_1b.timer_max")), nil
+	case SC_TTY_NAME_MAX:
+		return pathconf(_PATH_DEV, _PC_NAME_MAX), nil
+	case SC_TZNAME_MAX:
+		return pathconf(_PATH_ZONEINFO, _PC_NAME_MAX), nil
+
+	case SC_IPV6:
+		if _POSIX_IPV6 == 0 {
+			fd, err := unix.Socket(unix.AF_INET6, unix.SOCK_DGRAM, 0)
+			if err == nil && fd >= 0 {
+				unix.Close(fd)
+				return int64(200112), nil
+			}
+			return 0, nil
+		}
+		return _POSIX_IPV6, nil
+	case SC_MESSAGE_PASSING:
+		if _POSIX_MESSAGE_PASSING == 0 {
+			return yesno(sysctl32("p1003_1b.message_passing")), nil
+		}
+		return _POSIX_MESSAGE_PASSING, nil
+	case SC_PRIORITIZED_IO:
+		if _POSIX_PRIORITIZED_IO == 0 {
+			return yesno(sysctl32("p1003_1b.prioritized_io")), nil
+		}
+		return _POSIX_PRIORITIZED_IO, nil
+	case SC_PRIORITY_SCHEDULING:
+		if _POSIX_PRIORITY_SCHEDULING == 0 {
+			return yesno(sysctl32("p1003_1b.priority_scheduling")), nil
+		}
+		return _POSIX_PRIORITY_SCHEDULING, nil
+	case SC_REALTIME_SIGNALS:
+		if _POSIX_REALTIME_SIGNALS == 0 {
+			return yesno(sysctl32("p1003_1b.realtime_signals")), nil
+		}
+		return _POSIX_REALTIME_SIGNALS, nil
+	case SC_SAVED_IDS:
+		return yesno(sysctl32("kern.saved_ids")), nil
+	case SC_SEMAPHORES:
+		if _POSIX_SEMAPHORES == 0 {
+			return yesno(sysctl32("p1003_1b.semaphores")), nil
+		}
+		return _POSIX_SEMAPHORES, nil
+	case SC_SPAWN:
+		return _POSIX_SPAWN, nil
+	case SC_SPIN_LOCKS:
+		return _POSIX_SPIN_LOCKS, nil
+	case SC_SPORADIC_SERVER:
+		return _POSIX_SPORADIC_SERVER, nil
+	case SC_SYNCHRONIZED_IO:
+		if _POSIX_SYNCHRONIZED_IO == 0 {
+			return yesno(sysctl32("p1003_1b.synchronized_io")), nil
+		}
+		return _POSIX_SYNCHRONIZED_IO, nil
+	case SC_THREAD_ATTR_STACKADDR:
+		return _POSIX_THREAD_ATTR_STACKADDR, nil
+	case SC_THREAD_ATTR_STACKSIZE:
+		return _POSIX_THREAD_ATTR_STACKSIZE, nil
+	case SC_THREAD_CPUTIME:
+		return _POSIX_THREAD_CPUTIME, nil
+	case SC_THREAD_PRIORITY_SCHEDULING:
+		return _POSIX_THREAD_PRIORITY_SCHEDULING, nil
+	case SC_THREAD_PROCESS_SHARED:
+		return _POSIX_THREAD_PROCESS_SHARED, nil
+	case SC_THREAD_SAFE_FUNCTIONS:
+		return _POSIX_THREAD_SAFE_FUNCTIONS, nil
+	case SC_TIMERS:
+		if _POSIX_TIMERS == 0 {
+			return yesno(sysctl32("p1003_1b.timers")), nil
+		}
+		return _POSIX_TIMERS, nil
+	case SC_TRACE:
+		return _POSIX_TRACE, nil
+	case SC_TYPED_MEMORY_OBJECTS:
+		return _POSIX_TYPED_MEMORY_OBJECTS, nil
+	case SC_VERSION:
+		// TODO(tk): FreeBSD libc uses sysctl(CTL_KERN, KERN_POSIX1)
+		return _POSIX_VERSION, nil
+
+		/* TODO(tk): these need GOARCH-dependent integer size checks
+		case SC_V6_ILP32_OFF32:
+			return _V6_ILP32_OFF32, nil
+		case SC_V6_ILP32_OFFBIG:
+			return _V6_ILP32_OFFBIG, nil
+		case SC_V6_LP64_OFF64:
+			return _V6_LP64_OFF64, nil
+		case SC_V6_LPBIG_OFFBIG:
+			return _V6_LPBIG_OFFBIG, nil
+		*/
+
+	case SC_2_CHAR_TERM:
+		return _POSIX2_CHAR_TERM, nil
+	case SC_2_PBS,
+		SC_2_PBS_ACCOUNTING,
+		SC_2_PBS_CHECKPOINT,
+		SC_2_PBS_LOCATE,
+		SC_2_PBS_MESSAGE,
+		SC_2_PBS_TRACK:
+		return _POSIX2_PBS, nil
+	case SC_2_UPE:
+		return _POSIX2_UPE, nil
+
+	case SC_XOPEN_CRYPT:
+		return _XOPEN_CRYPT, nil
+	case SC_XOPEN_ENH_I18N:
+		return _XOPEN_ENH_I18N, nil
+	case SC_XOPEN_REALTIME:
+		return _XOPEN_REALTIME, nil
+	case SC_XOPEN_REALTIME_THREADS:
+		return _XOPEN_REALTIME_THREADS, nil
+	case SC_XOPEN_SHM:
+		return _XOPEN_SHM, nil
+	case SC_XOPEN_STREAMS:
+		return -1, nil
+	case SC_XOPEN_UNIX:
+		return _XOPEN_UNIX, nil
+
+	case SC_PHYS_PAGES:
+		if val, err := unix.SysctlUint64("hw.availpages"); err == nil {
+			return int64(val), nil
+		}
+		return -1, nil
+	case SC_NPROCESSORS_CONF:
+		fallthrough
+	case SC_NPROCESSORS_ONLN:
+		if val, err := unix.SysctlUint32("hw.ncpu"); err == nil {
+			return int64(val), nil
+		}
+		return -1, nil
+	}
+
+	return sysconfGeneric(name)
+}
Index: vendor/github.com/tklauser/go-sysconf/sysconf_generic.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/sysconf_generic.go b/vendor/github.com/tklauser/go-sysconf/sysconf_generic.go
new file mode 100644
--- /dev/null	(date 1660734983776)
+++ b/vendor/github.com/tklauser/go-sysconf/sysconf_generic.go	(date 1660734983776)
@@ -0,0 +1,46 @@
+// Copyright 2021 Tobias Klauser. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+//go:build darwin || dragonfly || freebsd || linux || netbsd || openbsd
+// +build darwin dragonfly freebsd linux netbsd openbsd
+
+package sysconf
+
+import "os"
+
+func sysconfGeneric(name int) (int64, error) {
+	// POSIX default values
+	if sc, err := sysconfPOSIX(name); err == nil {
+		return sc, nil
+	}
+
+	switch name {
+	case SC_BC_BASE_MAX:
+		return _BC_BASE_MAX, nil
+	case SC_BC_DIM_MAX:
+		return _BC_DIM_MAX, nil
+	case SC_BC_SCALE_MAX:
+		return _BC_SCALE_MAX, nil
+	case SC_BC_STRING_MAX:
+		return _BC_STRING_MAX, nil
+	case SC_COLL_WEIGHTS_MAX:
+		return _COLL_WEIGHTS_MAX, nil
+	case SC_EXPR_NEST_MAX:
+		return _EXPR_NEST_MAX, nil
+	case SC_HOST_NAME_MAX:
+		return _HOST_NAME_MAX, nil
+	case SC_LINE_MAX:
+		return _LINE_MAX, nil
+	case SC_LOGIN_NAME_MAX:
+		return _LOGIN_NAME_MAX, nil
+	case SC_PAGESIZE: // same as SC_PAGE_SIZE
+		return int64(os.Getpagesize()), nil
+	case SC_RE_DUP_MAX:
+		return _RE_DUP_MAX, nil
+	case SC_SYMLOOP_MAX:
+		return _SYMLOOP_MAX, nil
+	}
+
+	return -1, errInvalid
+}
Index: vendor/github.com/tklauser/go-sysconf/sysconf_linux.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/sysconf_linux.go b/vendor/github.com/tklauser/go-sysconf/sysconf_linux.go
new file mode 100644
--- /dev/null	(date 1660734983777)
+++ b/vendor/github.com/tklauser/go-sysconf/sysconf_linux.go	(date 1660734983777)
@@ -0,0 +1,345 @@
+// Copyright 2018 Tobias Klauser. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package sysconf
+
+import (
+	"bufio"
+	"io/ioutil"
+	"os"
+	"runtime"
+	"strconv"
+	"strings"
+
+	"github.com/tklauser/numcpus"
+	"golang.org/x/sys/unix"
+)
+
+const (
+	// CLK_TCK is a constant on Linux for all architectures except alpha and ia64.
+	// See e.g.
+	// https://git.musl-libc.org/cgit/musl/tree/src/conf/sysconf.c#n30
+	// https://github.com/containerd/cgroups/pull/12
+	// https://lore.kernel.org/lkml/agtlq6$iht$1@penguin.transmeta.com/
+	_SYSTEM_CLK_TCK = 100
+)
+
+func readProcFsInt64(path string, fallback int64) int64 {
+	data, err := ioutil.ReadFile(path)
+	if err != nil {
+		return fallback
+	}
+	i, err := strconv.ParseInt(string(data[:len(data)-1]), 0, 64)
+	if err != nil {
+		return fallback
+	}
+	return i
+}
+
+// getMemPages computes mem*unit/os.Getpagesize(), but avoids overflowing int64.
+func getMemPages(mem uint64, unit uint32) int64 {
+	pageSize := os.Getpagesize()
+	for unit > 1 && pageSize > 1 {
+		unit >>= 1
+		pageSize >>= 1
+	}
+	mem *= uint64(unit)
+	for pageSize > 1 {
+		pageSize >>= 1
+		mem >>= 1
+	}
+	return int64(mem)
+}
+
+func getPhysPages() int64 {
+	var si unix.Sysinfo_t
+	err := unix.Sysinfo(&si)
+	if err != nil {
+		return int64(0)
+	}
+	return getMemPages(uint64(si.Totalram), si.Unit)
+}
+
+func getAvPhysPages() int64 {
+	var si unix.Sysinfo_t
+	err := unix.Sysinfo(&si)
+	if err != nil {
+		return int64(0)
+	}
+	return getMemPages(uint64(si.Freeram), si.Unit)
+}
+
+func getNprocsSysfs() (int64, error) {
+	n, err := numcpus.GetOnline()
+	return int64(n), err
+}
+
+func getNprocsProcStat() (int64, error) {
+	f, err := os.Open("/proc/stat")
+	if err != nil {
+		return -1, err
+	}
+	defer f.Close()
+
+	count := int64(0)
+	s := bufio.NewScanner(f)
+	for s.Scan() {
+		if line := strings.TrimSpace(s.Text()); strings.HasPrefix(line, "cpu") {
+			l := strings.SplitN(line, " ", 2)
+			_, err := strconv.ParseInt(l[0][3:], 10, 64)
+			if err == nil {
+				count++
+			}
+		} else {
+			// The current format of /proc/stat has all the
+			// cpu* lines at the beginning. Assume this
+			// stays this way.
+			break
+		}
+	}
+	return count, nil
+}
+
+func getNprocs() int64 {
+	count, err := getNprocsSysfs()
+	if err == nil {
+		return count
+	}
+
+	count, err = getNprocsProcStat()
+	if err == nil {
+		return count
+	}
+
+	// default to the value determined at runtime startup if all else fails
+	return int64(runtime.NumCPU())
+}
+
+func getNprocsConf() int64 {
+	count, err := numcpus.GetConfigured()
+	if err == nil {
+		return int64(count)
+	}
+
+	// TODO(tk): fall back to reading /proc/cpuinfo on legacy systems
+	// without sysfs?
+
+	return getNprocs()
+}
+
+func hasClock(clockid int32) bool {
+	var res unix.Timespec
+	if err := unix.ClockGetres(clockid, &res); err != nil {
+		return false
+	}
+	return true
+}
+
+func max(a, b int64) int64 {
+	if a > b {
+		return a
+	}
+	return b
+}
+
+func sysconf(name int) (int64, error) {
+	switch name {
+	case SC_AIO_LISTIO_MAX:
+		return -1, nil
+	case SC_AIO_MAX:
+		return -1, nil
+	case SC_AIO_PRIO_DELTA_MAX:
+		return _AIO_PRIO_DELTA_MAX, nil
+	case SC_ARG_MAX:
+		argMax := int64(_POSIX_ARG_MAX)
+		var rlim unix.Rlimit
+		if err := unix.Getrlimit(unix.RLIMIT_STACK, &rlim); err == nil {
+			argMax = max(argMax, int64(rlim.Cur/4))
+		}
+		return argMax, nil
+	case SC_ATEXIT_MAX:
+		return _INT_MAX, nil
+	case SC_CHILD_MAX:
+		childMax := int64(-1)
+		var rlim unix.Rlimit
+		if err := unix.Getrlimit(unix.RLIMIT_NPROC, &rlim); err == nil && rlim.Cur != unix.RLIM_INFINITY {
+			childMax = int64(rlim.Cur)
+		}
+		return childMax, nil
+	case SC_CLK_TCK:
+		return _SYSTEM_CLK_TCK, nil
+	case SC_DELAYTIMER_MAX:
+		return _DELAYTIMER_MAX, nil
+	case SC_GETGR_R_SIZE_MAX:
+		return _NSS_BUFLEN_GROUP, nil
+	case SC_GETPW_R_SIZE_MAX:
+		return _NSS_BUFLEN_PASSWD, nil
+	case SC_MQ_OPEN_MAX:
+		return -1, nil
+	case SC_MQ_PRIO_MAX:
+		return _MQ_PRIO_MAX, nil
+	case SC_NGROUPS_MAX:
+		return readProcFsInt64("/proc/sys/kernel/ngroups_max", _NGROUPS_MAX), nil
+	case SC_OPEN_MAX:
+		openMax := int64(_OPEN_MAX)
+		var rlim unix.Rlimit
+		if err := unix.Getrlimit(unix.RLIMIT_NOFILE, &rlim); err == nil {
+			openMax = int64(rlim.Cur)
+		}
+		return openMax, nil
+	case SC_RTSIG_MAX:
+		return _RTSIG_MAX, nil
+	case SC_SEM_NSEMS_MAX:
+		return -1, nil
+	case SC_SEM_VALUE_MAX:
+		return _SEM_VALUE_MAX, nil
+	case SC_SIGQUEUE_MAX:
+		var rlim unix.Rlimit
+		if err := unix.Getrlimit(unix.RLIMIT_SIGPENDING, &rlim); err == nil {
+			return int64(rlim.Cur), nil
+		}
+		return readProcFsInt64("/proc/sys/kernel/rtsig-max", _POSIX_SIGQUEUE_MAX), nil
+	case SC_STREAM_MAX:
+		return _STREAM_MAX, nil
+	case SC_THREAD_DESTRUCTOR_ITERATIONS:
+		return _POSIX_THREAD_DESTRUCTOR_ITERATIONS, nil
+	case SC_THREAD_KEYS_MAX:
+		return _PTHREAD_KEYS_MAX, nil
+	case SC_THREAD_PRIO_INHERIT:
+		return _POSIX_THREAD_PRIO_INHERIT, nil
+	case SC_THREAD_PRIO_PROTECT:
+		return _POSIX_THREAD_PRIO_PROTECT, nil
+	case SC_THREAD_STACK_MIN:
+		return _PTHREAD_STACK_MIN, nil
+	case SC_THREAD_THREADS_MAX:
+		return -1, nil
+	case SC_TIMER_MAX:
+		return -1, nil
+	case SC_TTY_NAME_MAX:
+		return _TTY_NAME_MAX, nil
+	case SC_TZNAME_MAX:
+		return -1, nil
+
+	case SC_CPUTIME:
+		if hasClock(unix.CLOCK_PROCESS_CPUTIME_ID) {
+			return _POSIX_VERSION, nil
+		}
+		return -1, nil
+	case SC_MONOTONIC_CLOCK:
+		if hasClock(unix.CLOCK_MONOTONIC) {
+			return _POSIX_VERSION, nil
+		}
+		return -1, nil
+	case SC_SAVED_IDS:
+		return _POSIX_SAVED_IDS, nil
+	case SC_SPAWN:
+		return _POSIX_SPAWN, nil
+	case SC_SPIN_LOCKS:
+		return _POSIX_SPIN_LOCKS, nil
+	case SC_SPORADIC_SERVER:
+		return _POSIX_SPORADIC_SERVER, nil
+	case SC_SYNCHRONIZED_IO:
+		return _POSIX_SYNCHRONIZED_IO, nil
+	case SC_THREAD_ATTR_STACKADDR:
+		return _POSIX_THREAD_ATTR_STACKADDR, nil
+	case SC_THREAD_ATTR_STACKSIZE:
+		return _POSIX_THREAD_ATTR_STACKSIZE, nil
+	case SC_THREAD_CPUTIME:
+		if hasClock(unix.CLOCK_THREAD_CPUTIME_ID) {
+			return _POSIX_VERSION, nil
+		}
+		return -1, nil
+	case SC_THREAD_PRIORITY_SCHEDULING:
+		return _POSIX_THREAD_PRIORITY_SCHEDULING, nil
+	case SC_THREAD_PROCESS_SHARED:
+		return _POSIX_THREAD_PROCESS_SHARED, nil
+	case SC_THREAD_SAFE_FUNCTIONS:
+		return _POSIX_THREAD_SAFE_FUNCTIONS, nil
+	case SC_THREAD_SPORADIC_SERVER:
+		return _POSIX_THREAD_SPORADIC_SERVER, nil
+	case SC_TRACE:
+		return _POSIX_TRACE, nil
+	case SC_TRACE_EVENT_FILTER:
+		return _POSIX_TRACE_EVENT_FILTER, nil
+	case SC_TRACE_EVENT_NAME_MAX:
+		return -1, nil
+	case SC_TRACE_INHERIT:
+		return _POSIX_TRACE_INHERIT, nil
+	case SC_TRACE_LOG:
+		return _POSIX_TRACE_LOG, nil
+	case SC_TRACE_NAME_MAX:
+		return -1, nil
+	case SC_TRACE_SYS_MAX:
+		return -1, nil
+	case SC_TRACE_USER_EVENT_MAX:
+		return -1, nil
+	case SC_TYPED_MEMORY_OBJECTS:
+		return _POSIX_TYPED_MEMORY_OBJECTS, nil
+
+	case SC_V7_ILP32_OFF32:
+		return _POSIX_V7_ILP32_OFF32, nil
+	case SC_V7_ILP32_OFFBIG:
+		return _POSIX_V7_ILP32_OFFBIG, nil
+	case SC_V7_LP64_OFF64:
+		return _POSIX_V7_LP64_OFF64, nil
+	case SC_V7_LPBIG_OFFBIG:
+		return _POSIX_V7_LPBIG_OFFBIG, nil
+
+	case SC_V6_ILP32_OFF32:
+		return _POSIX_V6_ILP32_OFF32, nil
+	case SC_V6_ILP32_OFFBIG:
+		return _POSIX_V6_ILP32_OFFBIG, nil
+	case SC_V6_LP64_OFF64:
+		return _POSIX_V6_LP64_OFF64, nil
+	case SC_V6_LPBIG_OFFBIG:
+		return _POSIX_V6_LPBIG_OFFBIG, nil
+
+	case SC_2_C_VERSION:
+		return _POSIX2_C_VERSION, nil
+	case SC_2_CHAR_TERM:
+		return _POSIX2_CHAR_TERM, nil
+	case SC_2_PBS,
+		SC_2_PBS_ACCOUNTING,
+		SC_2_PBS_CHECKPOINT,
+		SC_2_PBS_LOCATE,
+		SC_2_PBS_MESSAGE,
+		SC_2_PBS_TRACK:
+		return -1, nil
+	case SC_2_UPE:
+		return -1, nil
+
+	case SC_XOPEN_CRYPT:
+		// removed in glibc 2.28
+		return -1, nil
+	case SC_XOPEN_ENH_I18N:
+		return _XOPEN_ENH_I18N, nil
+	case SC_XOPEN_REALTIME:
+		return _XOPEN_REALTIME, nil
+	case SC_XOPEN_REALTIME_THREADS:
+		return _XOPEN_REALTIME_THREADS, nil
+	case SC_XOPEN_SHM:
+		return _XOPEN_SHM, nil
+	case SC_XOPEN_STREAMS:
+		return -1, nil
+	case SC_XOPEN_UNIX:
+		return _XOPEN_UNIX, nil
+	case SC_XOPEN_VERSION:
+		return _XOPEN_VERSION, nil
+	case SC_XOPEN_XCU_VERSION:
+		return _XOPEN_XCU_VERSION, nil
+
+	case SC_PHYS_PAGES:
+		return getPhysPages(), nil
+	case SC_AVPHYS_PAGES:
+		return getAvPhysPages(), nil
+	case SC_NPROCESSORS_CONF:
+		return getNprocsConf(), nil
+	case SC_NPROCESSORS_ONLN:
+		return getNprocs(), nil
+	case SC_UIO_MAXIOV: // same as _SC_IOV_MAX
+		return _UIO_MAXIOV, nil
+	}
+
+	return sysconfGeneric(name)
+}
Index: vendor/github.com/tklauser/go-sysconf/sysconf_netbsd.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/sysconf_netbsd.go b/vendor/github.com/tklauser/go-sysconf/sysconf_netbsd.go
new file mode 100644
--- /dev/null	(date 1660734983778)
+++ b/vendor/github.com/tklauser/go-sysconf/sysconf_netbsd.go	(date 1660734983778)
@@ -0,0 +1,250 @@
+// Copyright 2018 Tobias Klauser. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package sysconf
+
+import (
+	"sync"
+
+	"golang.org/x/sys/unix"
+)
+
+const (
+	_HOST_NAME_MAX  = _MAXHOSTNAMELEN
+	_LOGIN_NAME_MAX = _MAXLOGNAME + 1
+	_SYMLOOP_MAX    = _MAXSYMLINKS
+
+	_POSIX2_C_BIND    = 1
+	_POSIX2_C_DEV     = -1
+	_POSIX2_CHAR_TERM = -1
+	_POSIX2_FORT_DEV  = -1
+	_POSIX2_FORT_RUN  = -1
+	_POSIX2_LOCALEDEF = -1
+	_POSIX2_SW_DEV    = -1
+	_POSIX2_UPE       = -1
+)
+
+var (
+	clktck     int64
+	clktckOnce sync.Once
+)
+
+func sysconfPOSIX(name int) (int64, error) {
+	// NetBSD does not define all _POSIX_* values used in sysconf_posix.go
+	// The supported ones are handled in sysconf below.
+	return -1, errInvalid
+}
+
+func sysconf(name int) (int64, error) {
+	// NetBSD uses sysctl to get some of these values. For the user.* namespace,
+	// calls get handled by user_sysctl in /usr/src/lib/libc/gen/sysctl.c
+	// Duplicate the relevant values here.
+
+	switch name {
+
+	// 1003.1
+	case SC_ARG_MAX:
+		return sysctl32("kern.argmax"), nil
+	case SC_CHILD_MAX:
+		var rlim unix.Rlimit
+		if err := unix.Getrlimit(unix.RLIMIT_NPROC, &rlim); err == nil {
+			if rlim.Cur != unix.RLIM_INFINITY {
+				return int64(rlim.Cur), nil
+			}
+		}
+		return -1, nil
+	case SC_CLK_TCK:
+		clktckOnce.Do(func() {
+			clktck = -1
+			if ci, err := unix.SysctlClockinfo("kern.clockrate"); err == nil {
+				clktck = int64(ci.Hz)
+			}
+		})
+		return clktck, nil
+	case SC_NGROUPS_MAX:
+		return sysctl32("kern.ngroups"), nil
+	case SC_JOB_CONTROL:
+		return sysctl32("kern.job_control"), nil
+	case SC_OPEN_MAX:
+		var rlim unix.Rlimit
+		if err := unix.Getrlimit(unix.RLIMIT_NOFILE, &rlim); err == nil {
+			return int64(rlim.Cur), nil
+		}
+		return -1, nil
+	case SC_STREAM_MAX:
+		// sysctl("user.stream_max")
+		return _FOPEN_MAX, nil
+	case SC_TZNAME_MAX:
+		// sysctl("user.tzname_max")
+		return _NAME_MAX, nil
+	case SC_SAVED_IDS:
+		return yesno(sysctl32("kern.saved_ids")), nil
+	case SC_VERSION:
+		return sysctl32("kern.posix1version"), nil
+
+	// 1003.1b
+	case SC_FSYNC:
+		return sysctl32("kern.fsync"), nil
+	case SC_SYNCHRONIZED_IO:
+		return sysctl32("kern.synchronized_io"), nil
+	case SC_MAPPED_FILES:
+		return sysctl32("kern.mapped_files"), nil
+	case SC_MEMLOCK:
+		return sysctl32("kern.memlock"), nil
+	case SC_MEMLOCK_RANGE:
+		return sysctl32("kern.memlock_range"), nil
+	case SC_MEMORY_PROTECTION:
+		return sysctl32("kern.memory_protection"), nil
+	case SC_MONOTONIC_CLOCK:
+		return sysctl32("kern.monotonic_clock"), nil
+	case SC_SEMAPHORES:
+		return sysctl32("kern.posix_semaphores"), nil
+	case SC_TIMERS:
+		return sysctl32("kern.posix_timers"), nil
+
+	// 1003.1c
+	case SC_LOGIN_NAME_MAX:
+		return sysctl32("kern.login_name_max"), nil
+	case SC_THREADS:
+		return sysctl32("kern.posix_threads"), nil
+
+	// 1003.1j
+	case SC_BARRIERS:
+		return yesno(sysctl32("kern.posix_barriers")), nil
+	case SC_SPIN_LOCKS:
+		return yesno(sysctl32("kern.posix_spin_locks")), nil
+	case SC_READER_WRITER_LOCKS:
+		return yesno(sysctl32("kern.posix_reader_writer_locks")), nil
+
+	// 1003.2
+	case SC_2_VERSION:
+		// sysctl user.posix2_version
+		return _POSIX2_VERSION, nil
+	case SC_2_C_BIND:
+		// sysctl user.posix2_c_bind
+		return _POSIX2_C_BIND, nil
+	case SC_2_C_DEV:
+		// sysctl user.posix2_c_dev
+		return _POSIX2_C_DEV, nil
+	case SC_2_CHAR_TERM:
+		// sysctl user.posix2_char_term
+		return _POSIX2_CHAR_TERM, nil
+	case SC_2_FORT_DEV:
+		// sysctl user.posix2_fort_dev
+		return _POSIX2_FORT_DEV, nil
+	case SC_2_FORT_RUN:
+		// sysctl user.posix2_fort_run
+		return _POSIX2_FORT_RUN, nil
+	case SC_2_LOCALEDEF:
+		// sysctl user.posix2_localedef
+		return _POSIX2_LOCALEDEF, nil
+	case SC_2_SW_DEV:
+		// sysctl user.posix2_sw_dev
+		return _POSIX2_SW_DEV, nil
+	case SC_2_UPE:
+		// sysctl user.posix2_upe
+		return _POSIX2_UPE, nil
+
+	// XPG 4.2
+	case SC_IOV_MAX:
+		return sysctl32("kern.iov_max"), nil
+	case SC_XOPEN_SHM:
+		return yesno(sysctl32("kern.ipc.sysvshm")), nil
+
+	// 1003.1-2001, XSI Option Group
+	case SC_AIO_LISTIO_MAX:
+		return sysctl32("kern.aio_listio_max"), nil
+	case SC_AIO_MAX:
+		return sysctl32("kern.aio_max"), nil
+	case SC_ASYNCHRONOUS_IO:
+		return yesno(sysctl32("kern.posix_aio")), nil
+	case SC_MESSAGE_PASSING:
+		return yesno(sysctl32("kern.posix_msg")), nil
+	case SC_MQ_OPEN_MAX:
+		return sysctl32("kern.mqueue.mq_open_max"), nil
+	case SC_MQ_PRIO_MAX:
+		return sysctl32("kern.mqueue.mq_prio_max"), nil
+	case SC_PRIORITY_SCHEDULING:
+		return yesno(sysctl32("kern.posix_sched")), nil
+	case SC_ATEXIT_MAX:
+		// sysctl("user.atexit_max")
+		return -1, nil // TODO
+
+	// 1003.1-2001, TSF
+	case SC_GETGR_R_SIZE_MAX:
+		return _GETGR_R_SIZE_MAX, nil
+	case SC_GETPW_R_SIZE_MAX:
+		return _GETPW_R_SIZE_MAX, nil
+
+	// Unsorted
+	case SC_HOST_NAME_MAX:
+		return _MAXHOSTNAMELEN, nil
+	case SC_PASS_MAX:
+		return _PASSWORD_LEN, nil
+	case SC_REGEXP:
+		return _POSIX_REGEXP, nil
+	case SC_SHARED_MEMORY_OBJECTS:
+		return _POSIX_SHARED_MEMORY_OBJECTS, nil
+	case SC_SHELL:
+		return _POSIX_SHELL, nil
+	case SC_SPAWN:
+		return _POSIX_SPAWN, nil
+
+	// Extensions
+	case SC_NPROCESSORS_CONF:
+		return sysctl32("hw.ncpu"), nil
+	case SC_NPROCESSORS_ONLN:
+		return sysctl32("hw.ncpuonline"), nil
+
+	// Linux/Solaris
+	case SC_PHYS_PAGES:
+		return sysctl64("hw.physmem64") / int64(unix.Getpagesize()), nil
+
+	// Native
+	case SC_SCHED_RT_TS:
+		return sysctl32("kern.sched.rtts"), nil
+	case SC_SCHED_PRI_MIN:
+		return sysctl32("kern.sched.pri_min"), nil
+	case SC_SCHED_PRI_MAX:
+		return sysctl32("kern.sched.pri_max"), nil
+	case SC_THREAD_DESTRUCTOR_ITERATIONS:
+		return _POSIX_THREAD_DESTRUCTOR_ITERATIONS, nil
+	case SC_THREAD_KEYS_MAX:
+		return _POSIX_THREAD_KEYS_MAX, nil
+	case SC_THREAD_STACK_MIN:
+		return int64(unix.Getpagesize()), nil
+	case SC_THREAD_THREADS_MAX:
+		return sysctl32("kern.maxproc"), nil
+	case SC_THREAD_ATTR_STACKADDR:
+		return _POSIX_THREAD_ATTR_STACKADDR, nil
+	case SC_THREAD_ATTR_STACKSIZE:
+		return _POSIX_THREAD_ATTR_STACKSIZE, nil
+	case SC_THREAD_SAFE_FUNCTIONS:
+		return _POSIX_THREAD_SAFE_FUNCTIONS, nil
+	case SC_THREAD_PRIO_PROTECT:
+		return _POSIX_THREAD_PRIO_PROTECT, nil
+	case SC_THREAD_PRIORITY_SCHEDULING,
+		SC_THREAD_PRIO_INHERIT,
+		SC_THREAD_PROCESS_SHARED:
+		return -1, nil
+	case SC_TTY_NAME_MAX:
+		return pathconf(_PATH_DEV, _PC_NAME_MAX), nil
+	case SC_TIMER_MAX:
+		return _POSIX_TIMER_MAX, nil
+	case SC_SEM_NSEMS_MAX:
+		return _LONG_MAX, nil
+	case SC_CPUTIME:
+		return _POSIX_CPUTIME, nil
+	case SC_THREAD_CPUTIME:
+		return _POSIX_THREAD_CPUTIME, nil
+	case SC_DELAYTIMER_MAX:
+		return _POSIX_DELAYTIMER_MAX, nil
+	case SC_SIGQUEUE_MAX:
+		return _POSIX_SIGQUEUE_MAX, nil
+	case SC_REALTIME_SIGNALS:
+		return 200112, nil
+	}
+
+	return sysconfGeneric(name)
+}
Index: vendor/github.com/tklauser/go-sysconf/sysconf_openbsd.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/sysconf_openbsd.go b/vendor/github.com/tklauser/go-sysconf/sysconf_openbsd.go
new file mode 100644
--- /dev/null	(date 1660734983779)
+++ b/vendor/github.com/tklauser/go-sysconf/sysconf_openbsd.go	(date 1660734983779)
@@ -0,0 +1,271 @@
+// Copyright 2018 Tobias Klauser. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package sysconf
+
+import "golang.org/x/sys/unix"
+
+// sysconf implements sysconf(3) as in the OpenBSD 6.3 libc.
+func sysconf(name int) (int64, error) {
+	switch name {
+	case SC_AIO_LISTIO_MAX,
+		SC_AIO_MAX,
+		SC_AIO_PRIO_DELTA_MAX:
+		return -1, nil
+	case SC_ARG_MAX:
+		return sysctl32("kern.argmax"), nil
+	case SC_ATEXIT_MAX:
+		return -1, nil
+	case SC_CHILD_MAX:
+		var rlim unix.Rlimit
+		if err := unix.Getrlimit(unix.RLIMIT_NPROC, &rlim); err == nil {
+			if rlim.Cur != unix.RLIM_INFINITY {
+				return int64(rlim.Cur), nil
+			}
+		}
+		return -1, nil
+	case SC_CLK_TCK:
+		return _CLK_TCK, nil
+	case SC_DELAYTIMER_MAX:
+		return -1, nil
+	case SC_GETGR_R_SIZE_MAX:
+		return _GR_BUF_LEN, nil
+	case SC_GETPW_R_SIZE_MAX:
+		return _PW_BUF_LEN, nil
+	case SC_IOV_MAX:
+		return _IOV_MAX, nil
+	case SC_LOGIN_NAME_MAX:
+		return _LOGIN_NAME_MAX, nil
+	case SC_NGROUPS_MAX:
+		return sysctl32("kern.ngroups"), nil
+	case SC_OPEN_MAX:
+		var rlim unix.Rlimit
+		if err := unix.Getrlimit(unix.RLIMIT_NOFILE, &rlim); err == nil {
+			if rlim.Cur != unix.RLIM_INFINITY {
+				return int64(rlim.Cur), nil
+			}
+		}
+		return -1, nil
+	case SC_SEM_NSEMS_MAX:
+		return -1, nil
+	case SC_SEM_VALUE_MAX:
+		return _SEM_VALUE_MAX, nil
+	case SC_SIGQUEUE_MAX:
+		return -1, nil
+	case SC_STREAM_MAX:
+		var rlim unix.Rlimit
+		if err := unix.Getrlimit(unix.RLIMIT_NOFILE, &rlim); err == nil {
+			if rlim.Cur != unix.RLIM_INFINITY {
+				if rlim.Cur > _SHRT_MAX {
+					return _SHRT_MAX, nil
+				}
+				return int64(rlim.Cur), nil
+			}
+		}
+		return -1, nil
+	case SC_THREAD_DESTRUCTOR_ITERATIONS:
+		return _PTHREAD_DESTRUCTOR_ITERATIONS, nil
+	case SC_THREAD_KEYS_MAX:
+		return _PTHREAD_KEYS_MAX, nil
+	case SC_THREAD_STACK_MIN:
+		return _PTHREAD_STACK_MIN, nil
+	case SC_THREAD_THREADS_MAX:
+		return -1, nil
+	case SC_TIMER_MAX:
+		return -1, nil
+	case SC_TTY_NAME_MAX:
+		return _TTY_NAME_MAX, nil
+	case SC_TZNAME_MAX:
+		return _NAME_MAX, nil
+
+	case SC_BARRIERS:
+		return _POSIX_BARRIERS, nil
+	case SC_FSYNC:
+		return _POSIX_FSYNC, nil
+	case SC_IPV6:
+		if _POSIX_IPV6 == 0 {
+			fd, err := unix.Socket(unix.AF_INET6, unix.SOCK_DGRAM, 0)
+			if err == nil && fd >= 0 {
+				unix.Close(fd)
+				return int64(200112), nil
+			}
+			return 0, nil
+		}
+		return _POSIX_IPV6, nil
+	case SC_JOB_CONTROL:
+		return _POSIX_JOB_CONTROL, nil
+	case SC_MAPPED_FILES:
+		return _POSIX_MAPPED_FILES, nil
+	case SC_MONOTONIC_CLOCK:
+		return _POSIX_MONOTONIC_CLOCK, nil
+	case SC_SAVED_IDS:
+		return _POSIX_SAVED_IDS, nil
+	case SC_SEMAPHORES:
+		return _POSIX_SEMAPHORES, nil
+	case SC_SPAWN:
+		return _POSIX_SPAWN, nil
+	case SC_SPIN_LOCKS:
+		return _POSIX_SPIN_LOCKS, nil
+	case SC_SPORADIC_SERVER:
+		return _POSIX_SPORADIC_SERVER, nil
+	case SC_SYNCHRONIZED_IO:
+		return _POSIX_SYNCHRONIZED_IO, nil
+	case SC_THREAD_ATTR_STACKADDR:
+		return _POSIX_THREAD_ATTR_STACKADDR, nil
+	case SC_THREAD_ATTR_STACKSIZE:
+		return _POSIX_THREAD_ATTR_STACKSIZE, nil
+	case SC_THREAD_CPUTIME:
+		return _POSIX_THREAD_CPUTIME, nil
+	case SC_THREAD_PRIO_INHERIT:
+		return _POSIX_THREAD_PRIO_INHERIT, nil
+	case SC_THREAD_PRIO_PROTECT:
+		return _POSIX_THREAD_PRIO_PROTECT, nil
+	case SC_THREAD_PRIORITY_SCHEDULING:
+		return _POSIX_THREAD_PRIORITY_SCHEDULING, nil
+	case SC_THREAD_PROCESS_SHARED:
+		return _POSIX_THREAD_PROCESS_SHARED, nil
+	case SC_THREAD_ROBUST_PRIO_INHERIT:
+		return _POSIX_THREAD_ROBUST_PRIO_INHERIT, nil
+	case SC_THREAD_ROBUST_PRIO_PROTECT:
+		return _POSIX_THREAD_ROBUST_PRIO_PROTECT, nil
+	case SC_THREAD_SAFE_FUNCTIONS:
+		return _POSIX_THREAD_SAFE_FUNCTIONS, nil
+	case SC_THREAD_SPORADIC_SERVER:
+		return _POSIX_THREAD_SPORADIC_SERVER, nil
+	case SC_THREADS:
+		return _POSIX_THREADS, nil
+	case SC_TIMEOUTS:
+		return _POSIX_TIMEOUTS, nil
+	case SC_TIMERS:
+		return _POSIX_TIMERS, nil
+	case SC_TRACE,
+		SC_TRACE_EVENT_FILTER,
+		SC_TRACE_EVENT_NAME_MAX,
+		SC_TRACE_INHERIT,
+		SC_TRACE_LOG:
+		return _POSIX_TRACE, nil
+	case SC_TYPED_MEMORY_OBJECTS:
+		return _POSIX_TYPED_MEMORY_OBJECTS, nil
+
+	case SC_V7_ILP32_OFF32:
+		return _POSIX_V7_ILP32_OFF32, nil
+	case SC_V7_ILP32_OFFBIG:
+		if _POSIX_V7_ILP32_OFFBIG == 0 {
+			if unix.SizeofInt*_CHAR_BIT == 32 &&
+				unix.SizeofLong*_CHAR_BIT == 32 &&
+				unix.SizeofPtr*_CHAR_BIT == 32 &&
+				sizeofOffT*_CHAR_BIT >= 64 {
+				return 1, nil
+			}
+			return -1, nil
+		}
+		return _POSIX_V7_ILP32_OFFBIG, nil
+	case SC_V7_LP64_OFF64:
+		if _POSIX_V7_LP64_OFF64 == 0 {
+			if unix.SizeofInt*_CHAR_BIT == 32 &&
+				unix.SizeofLong*_CHAR_BIT == 64 &&
+				unix.SizeofPtr*_CHAR_BIT == 64 &&
+				sizeofOffT*_CHAR_BIT == 64 {
+				return 1, nil
+			}
+			return -1, nil
+		}
+		return _POSIX_V7_LP64_OFF64, nil
+	case SC_V7_LPBIG_OFFBIG:
+		if _POSIX_V7_LPBIG_OFFBIG == 0 {
+			if unix.SizeofInt*_CHAR_BIT >= 32 &&
+				unix.SizeofLong*_CHAR_BIT >= 64 &&
+				unix.SizeofPtr*_CHAR_BIT >= 64 &&
+				sizeofOffT*_CHAR_BIT >= 64 {
+				return 1, nil
+			}
+			return -1, nil
+		}
+		return _POSIX_V7_LPBIG_OFFBIG, nil
+
+	case SC_V6_ILP32_OFF32:
+		return _POSIX_V6_ILP32_OFF32, nil
+	case SC_V6_ILP32_OFFBIG:
+		if _POSIX_V6_ILP32_OFFBIG == 0 {
+			if unix.SizeofInt*_CHAR_BIT == 32 &&
+				unix.SizeofLong*_CHAR_BIT == 32 &&
+				unix.SizeofPtr*_CHAR_BIT == 32 &&
+				sizeofOffT*_CHAR_BIT >= 64 {
+				return 1, nil
+			}
+			return -1, nil
+		}
+		return _POSIX_V6_ILP32_OFFBIG, nil
+	case SC_V6_LP64_OFF64:
+		if _POSIX_V6_LP64_OFF64 == 0 {
+			if unix.SizeofInt*_CHAR_BIT == 32 &&
+				unix.SizeofLong*_CHAR_BIT == 64 &&
+				unix.SizeofPtr*_CHAR_BIT == 64 &&
+				sizeofOffT*_CHAR_BIT == 64 {
+				return 1, nil
+			}
+			return -1, nil
+		}
+		return _POSIX_V6_LP64_OFF64, nil
+	case SC_V6_LPBIG_OFFBIG:
+		if _POSIX_V6_LPBIG_OFFBIG == 0 {
+			if unix.SizeofInt*_CHAR_BIT >= 32 &&
+				unix.SizeofLong*_CHAR_BIT >= 64 &&
+				unix.SizeofPtr*_CHAR_BIT >= 64 &&
+				sizeofOffT*_CHAR_BIT >= 64 {
+				return 1, nil
+			}
+			return -1, nil
+		}
+		return _POSIX_V6_LPBIG_OFFBIG, nil
+
+	case SC_2_CHAR_TERM:
+		return _POSIX2_CHAR_TERM, nil
+	case SC_2_PBS,
+		SC_2_PBS_ACCOUNTING,
+		SC_2_PBS_CHECKPOINT,
+		SC_2_PBS_LOCATE,
+		SC_2_PBS_MESSAGE,
+		SC_2_PBS_TRACK:
+		return _POSIX2_PBS, nil
+	case SC_2_UPE:
+		return _POSIX2_UPE, nil
+	case SC_2_VERSION:
+		return _POSIX2_VERSION, nil
+
+	case SC_XOPEN_CRYPT:
+		return _XOPEN_CRYPT, nil
+	case SC_XOPEN_ENH_I18N:
+		return _XOPEN_ENH_I18N, nil
+	case SC_XOPEN_REALTIME:
+		return _XOPEN_REALTIME, nil
+	case SC_XOPEN_REALTIME_THREADS:
+		return _XOPEN_REALTIME_THREADS, nil
+	case SC_XOPEN_SHM:
+		return _XOPEN_SHM, nil
+	case SC_XOPEN_STREAMS:
+		return _XOPEN_STREAMS, nil
+	case SC_XOPEN_UNIX:
+		return _XOPEN_UNIX, nil
+	case SC_XOPEN_UUCP:
+		return _XOPEN_UUCP, nil
+
+	case SC_AVPHYS_PAGES:
+		if uvm, err := unix.SysctlUvmexp("vm.uvmexp"); err == nil {
+			return int64(uvm.Free), nil
+		}
+		return -1, nil
+	case SC_PHYS_PAGES:
+		return sysctl64("hw.physmem") / int64(unix.Getpagesize()), nil
+	case SC_NPROCESSORS_CONF:
+		return sysctl32("hw.ncpu"), nil
+	case SC_NPROCESSORS_ONLN:
+		if val, err := unix.SysctlUint32("hw.ncpuonline"); err == nil {
+			return int64(val), nil
+		}
+		return sysctl32("hw.ncpu"), nil
+	}
+
+	return sysconfGeneric(name)
+}
Index: vendor/github.com/tklauser/go-sysconf/sysconf_posix.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/sysconf_posix.go b/vendor/github.com/tklauser/go-sysconf/sysconf_posix.go
new file mode 100644
--- /dev/null	(date 1660734983780)
+++ b/vendor/github.com/tklauser/go-sysconf/sysconf_posix.go	(date 1660734983780)
@@ -0,0 +1,83 @@
+// Copyright 2018 Tobias Klauser. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+//go:build darwin || dragonfly || freebsd || linux || openbsd
+// +build darwin dragonfly freebsd linux openbsd
+
+package sysconf
+
+func sysconfPOSIX(name int) (int64, error) {
+	switch name {
+	case SC_ADVISORY_INFO:
+		return _POSIX_ADVISORY_INFO, nil
+	case SC_ASYNCHRONOUS_IO:
+		return _POSIX_ASYNCHRONOUS_IO, nil
+	case SC_BARRIERS:
+		return _POSIX_BARRIERS, nil
+	case SC_CLOCK_SELECTION:
+		return _POSIX_CLOCK_SELECTION, nil
+	case SC_CPUTIME:
+		return _POSIX_CPUTIME, nil
+	case SC_FSYNC:
+		return _POSIX_FSYNC, nil
+	case SC_IPV6:
+		return _POSIX_IPV6, nil
+	case SC_JOB_CONTROL:
+		return _POSIX_JOB_CONTROL, nil
+	case SC_MAPPED_FILES:
+		return _POSIX_MAPPED_FILES, nil
+	case SC_MEMLOCK:
+		return _POSIX_MEMLOCK, nil
+	case SC_MEMLOCK_RANGE:
+		return _POSIX_MEMLOCK_RANGE, nil
+	case SC_MONOTONIC_CLOCK:
+		return _POSIX_MONOTONIC_CLOCK, nil
+	case SC_MEMORY_PROTECTION:
+		return _POSIX_MEMORY_PROTECTION, nil
+	case SC_MESSAGE_PASSING:
+		return _POSIX_MESSAGE_PASSING, nil
+	case SC_PRIORITIZED_IO:
+		return _POSIX_PRIORITIZED_IO, nil
+	case SC_PRIORITY_SCHEDULING:
+		return _POSIX_PRIORITY_SCHEDULING, nil
+	case SC_RAW_SOCKETS:
+		return _POSIX_RAW_SOCKETS, nil
+	case SC_READER_WRITER_LOCKS:
+		return _POSIX_READER_WRITER_LOCKS, nil
+	case SC_REALTIME_SIGNALS:
+		return _POSIX_REALTIME_SIGNALS, nil
+	case SC_REGEXP:
+		return _POSIX_REGEXP, nil
+	case SC_SEMAPHORES:
+		return _POSIX_SEMAPHORES, nil
+	case SC_SHARED_MEMORY_OBJECTS:
+		return _POSIX_SHARED_MEMORY_OBJECTS, nil
+	case SC_SHELL:
+		return _POSIX_SHELL, nil
+	case SC_THREADS:
+		return _POSIX_THREADS, nil
+	case SC_TIMEOUTS:
+		return _POSIX_TIMEOUTS, nil
+	case SC_TIMERS:
+		return _POSIX_TIMERS, nil
+	case SC_VERSION:
+		return _POSIX_VERSION, nil
+
+	case SC_2_C_BIND:
+		return _POSIX2_C_BIND, nil
+	case SC_2_C_DEV:
+		return _POSIX2_C_DEV, nil
+	case SC_2_FORT_DEV:
+		return -1, nil
+	case SC_2_FORT_RUN:
+		return -1, nil
+	case SC_2_LOCALEDEF:
+		return _POSIX2_LOCALEDEF, nil
+	case SC_2_SW_DEV:
+		return _POSIX2_SW_DEV, nil
+	case SC_2_VERSION:
+		return _POSIX2_VERSION, nil
+	}
+	return -1, errInvalid
+}
Index: vendor/github.com/tklauser/go-sysconf/sysconf_solaris.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/sysconf_solaris.go b/vendor/github.com/tklauser/go-sysconf/sysconf_solaris.go
new file mode 100644
--- /dev/null	(date 1660734983780)
+++ b/vendor/github.com/tklauser/go-sysconf/sysconf_solaris.go	(date 1660734983780)
@@ -0,0 +1,14 @@
+// Copyright 2021 Tobias Klauser. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package sysconf
+
+import "golang.org/x/sys/unix"
+
+func sysconf(name int) (int64, error) {
+	if name < 0 {
+		return -1, errInvalid
+	}
+	return unix.Sysconf(name)
+}
Index: vendor/github.com/tklauser/go-sysconf/sysconf_unsupported.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/sysconf_unsupported.go b/vendor/github.com/tklauser/go-sysconf/sysconf_unsupported.go
new file mode 100644
--- /dev/null	(date 1660734983782)
+++ b/vendor/github.com/tklauser/go-sysconf/sysconf_unsupported.go	(date 1660734983782)
@@ -0,0 +1,17 @@
+// Copyright 2021 Tobias Klauser. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+//go:build !darwin && !dragonfly && !freebsd && !linux && !netbsd && !openbsd && !solaris
+// +build !darwin,!dragonfly,!freebsd,!linux,!netbsd,!openbsd,!solaris
+
+package sysconf
+
+import (
+	"fmt"
+	"runtime"
+)
+
+func sysconf(name int) (int64, error) {
+	return -1, fmt.Errorf("unsupported on %s", runtime.GOOS)
+}
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_defs_darwin.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_darwin.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_darwin.go
new file mode 100644
--- /dev/null	(date 1660734983783)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_darwin.go	(date 1660734983783)
@@ -0,0 +1,254 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_defs_darwin.go
+
+//go:build darwin
+// +build darwin
+
+package sysconf
+
+const (
+	SC_AIO_LISTIO_MAX               = 0x2a
+	SC_AIO_MAX                      = 0x2b
+	SC_AIO_PRIO_DELTA_MAX           = 0x2c
+	SC_ARG_MAX                      = 0x1
+	SC_ATEXIT_MAX                   = 0x6b
+	SC_BC_BASE_MAX                  = 0x9
+	SC_BC_DIM_MAX                   = 0xa
+	SC_BC_SCALE_MAX                 = 0xb
+	SC_BC_STRING_MAX                = 0xc
+	SC_CHILD_MAX                    = 0x2
+	SC_CLK_TCK                      = 0x3
+	SC_COLL_WEIGHTS_MAX             = 0xd
+	SC_DELAYTIMER_MAX               = 0x2d
+	SC_EXPR_NEST_MAX                = 0xe
+	SC_GETGR_R_SIZE_MAX             = 0x46
+	SC_GETPW_R_SIZE_MAX             = 0x47
+	SC_HOST_NAME_MAX                = 0x48
+	SC_IOV_MAX                      = 0x38
+	SC_LINE_MAX                     = 0xf
+	SC_LOGIN_NAME_MAX               = 0x49
+	SC_MQ_OPEN_MAX                  = 0x2e
+	SC_MQ_PRIO_MAX                  = 0x4b
+	SC_NGROUPS_MAX                  = 0x4
+	SC_OPEN_MAX                     = 0x5
+	SC_PAGE_SIZE                    = 0x1d
+	SC_PAGESIZE                     = 0x1d
+	SC_THREAD_DESTRUCTOR_ITERATIONS = 0x55
+	SC_THREAD_KEYS_MAX              = 0x56
+	SC_THREAD_STACK_MIN             = 0x5d
+	SC_THREAD_THREADS_MAX           = 0x5e
+	SC_RE_DUP_MAX                   = 0x10
+	SC_RTSIG_MAX                    = 0x30
+	SC_SEM_NSEMS_MAX                = 0x31
+	SC_SEM_VALUE_MAX                = 0x32
+	SC_SIGQUEUE_MAX                 = 0x33
+	SC_STREAM_MAX                   = 0x1a
+	SC_SYMLOOP_MAX                  = 0x78
+	SC_TIMER_MAX                    = 0x34
+	SC_TTY_NAME_MAX                 = 0x65
+	SC_TZNAME_MAX                   = 0x1b
+
+	SC_ADVISORY_INFO              = 0x41
+	SC_ASYNCHRONOUS_IO            = 0x1c
+	SC_BARRIERS                   = 0x42
+	SC_CLOCK_SELECTION            = 0x43
+	SC_CPUTIME                    = 0x44
+	SC_FSYNC                      = 0x26
+	SC_IPV6                       = 0x76
+	SC_JOB_CONTROL                = 0x6
+	SC_MAPPED_FILES               = 0x2f
+	SC_MEMLOCK                    = 0x1e
+	SC_MEMLOCK_RANGE              = 0x1f
+	SC_MEMORY_PROTECTION          = 0x20
+	SC_MESSAGE_PASSING            = 0x21
+	SC_MONOTONIC_CLOCK            = 0x4a
+	SC_PRIORITIZED_IO             = 0x22
+	SC_PRIORITY_SCHEDULING        = 0x23
+	SC_RAW_SOCKETS                = 0x77
+	SC_READER_WRITER_LOCKS        = 0x4c
+	SC_REALTIME_SIGNALS           = 0x24
+	SC_REGEXP                     = 0x4d
+	SC_SAVED_IDS                  = 0x7
+	SC_SEMAPHORES                 = 0x25
+	SC_SHARED_MEMORY_OBJECTS      = 0x27
+	SC_SHELL                      = 0x4e
+	SC_SPAWN                      = 0x4f
+	SC_SPIN_LOCKS                 = 0x50
+	SC_SPORADIC_SERVER            = 0x51
+	SC_SS_REPL_MAX                = 0x7e
+	SC_SYNCHRONIZED_IO            = 0x28
+	SC_THREAD_ATTR_STACKADDR      = 0x52
+	SC_THREAD_ATTR_STACKSIZE      = 0x53
+	SC_THREAD_CPUTIME             = 0x54
+	SC_THREAD_PRIO_INHERIT        = 0x57
+	SC_THREAD_PRIO_PROTECT        = 0x58
+	SC_THREAD_PRIORITY_SCHEDULING = 0x59
+	SC_THREAD_PROCESS_SHARED      = 0x5a
+	SC_THREAD_SAFE_FUNCTIONS      = 0x5b
+	SC_THREAD_SPORADIC_SERVER     = 0x5c
+	SC_THREADS                    = 0x60
+	SC_TIMEOUTS                   = 0x5f
+	SC_TIMERS                     = 0x29
+	SC_TRACE                      = 0x61
+	SC_TRACE_EVENT_FILTER         = 0x62
+	SC_TRACE_EVENT_NAME_MAX       = 0x7f
+	SC_TRACE_INHERIT              = 0x63
+	SC_TRACE_LOG                  = 0x64
+	SC_TRACE_NAME_MAX             = 0x80
+	SC_TRACE_SYS_MAX              = 0x81
+	SC_TRACE_USER_EVENT_MAX       = 0x82
+	SC_TYPED_MEMORY_OBJECTS       = 0x66
+	SC_VERSION                    = 0x8
+
+	SC_V6_ILP32_OFF32  = 0x67
+	SC_V6_ILP32_OFFBIG = 0x68
+	SC_V6_LP64_OFF64   = 0x69
+	SC_V6_LPBIG_OFFBIG = 0x6a
+
+	SC_2_C_BIND         = 0x12
+	SC_2_C_DEV          = 0x13
+	SC_2_CHAR_TERM      = 0x14
+	SC_2_FORT_DEV       = 0x15
+	SC_2_FORT_RUN       = 0x16
+	SC_2_LOCALEDEF      = 0x17
+	SC_2_PBS            = 0x3b
+	SC_2_PBS_ACCOUNTING = 0x3c
+	SC_2_PBS_CHECKPOINT = 0x3d
+	SC_2_PBS_LOCATE     = 0x3e
+	SC_2_PBS_MESSAGE    = 0x3f
+	SC_2_PBS_TRACK      = 0x40
+	SC_2_SW_DEV         = 0x18
+	SC_2_UPE            = 0x19
+	SC_2_VERSION        = 0x11
+
+	SC_XOPEN_CRYPT            = 0x6c
+	SC_XOPEN_ENH_I18N         = 0x6d
+	SC_XOPEN_REALTIME         = 0x6f
+	SC_XOPEN_REALTIME_THREADS = 0x70
+	SC_XOPEN_SHM              = 0x71
+	SC_XOPEN_STREAMS          = 0x72
+	SC_XOPEN_UNIX             = 0x73
+	SC_XOPEN_VERSION          = 0x74
+	SC_XOPEN_XCU_VERSION      = 0x79
+
+	SC_PHYS_PAGES       = 0xc8
+	SC_NPROCESSORS_CONF = 0x39
+	SC_NPROCESSORS_ONLN = 0x3a
+)
+
+const (
+	_BC_BASE_MAX      = 0x63
+	_BC_DIM_MAX       = 0x800
+	_BC_SCALE_MAX     = 0x63
+	_BC_STRING_MAX    = 0x3e8
+	_COLL_WEIGHTS_MAX = 0x2
+	_EXPR_NEST_MAX    = 0x20
+	_IOV_MAX          = 0x400
+	_LINE_MAX         = 0x800
+	_NAME_MAX         = 0xff
+	_RE_DUP_MAX       = 0xff
+
+	_CLK_TCK = 0x64
+
+	_MAXHOSTNAMELEN = 0x100
+	_MAXLOGNAME     = 0xff
+	_MAXSYMLINKS    = 0x20
+
+	_POSIX_ADVISORY_INFO                = -0x1
+	_POSIX_ARG_MAX                      = 0x1000
+	_POSIX_ASYNCHRONOUS_IO              = -0x1
+	_POSIX_BARRIERS                     = -0x1
+	_POSIX_CHILD_MAX                    = 0x19
+	_POSIX_CLOCK_SELECTION              = -0x1
+	_POSIX_CPUTIME                      = -0x1
+	_POSIX_FSYNC                        = 0x30db0
+	_POSIX_IPV6                         = 0x30db0
+	_POSIX_JOB_CONTROL                  = 0x30db0
+	_POSIX_MAPPED_FILES                 = 0x30db0
+	_POSIX_MEMLOCK                      = -0x1
+	_POSIX_MEMLOCK_RANGE                = -0x1
+	_POSIX_MEMORY_PROTECTION            = 0x30db0
+	_POSIX_MESSAGE_PASSING              = -0x1
+	_POSIX_MONOTONIC_CLOCK              = -0x1
+	_POSIX_PRIORITIZED_IO               = -0x1
+	_POSIX_PRIORITY_SCHEDULING          = -0x1
+	_POSIX_RAW_SOCKETS                  = -0x1
+	_POSIX_READER_WRITER_LOCKS          = 0x30db0
+	_POSIX_REALTIME_SIGNALS             = -0x1
+	_POSIX_REGEXP                       = 0x30db0
+	_POSIX_SEM_VALUE_MAX                = 0x7fff
+	_POSIX_SEMAPHORES                   = -0x1
+	_POSIX_SHARED_MEMORY_OBJECTS        = -0x1
+	_POSIX_SHELL                        = 0x30db0
+	_POSIX_SIGQUEUE_MAX                 = 0x20
+	_POSIX_SPAWN                        = -0x1
+	_POSIX_SPIN_LOCKS                   = -0x1
+	_POSIX_SPORADIC_SERVER              = -0x1
+	_POSIX_SS_REPL_MAX                  = 0x4
+	_POSIX_SYNCHRONIZED_IO              = -0x1
+	_POSIX_THREAD_ATTR_STACKADDR        = 0x30db0
+	_POSIX_THREAD_ATTR_STACKSIZE        = 0x30db0
+	_POSIX_THREAD_CPUTIME               = -0x1
+	_POSIX_THREAD_DESTRUCTOR_ITERATIONS = 0x4
+	_POSIX_THREAD_KEYS_MAX              = 0x80
+	_POSIX_THREAD_PRIO_INHERIT          = -0x1
+	_POSIX_THREAD_PRIO_PROTECT          = -0x1
+	_POSIX_THREAD_PRIORITY_SCHEDULING   = -0x1
+	_POSIX_THREAD_PROCESS_SHARED        = 0x30db0
+	_POSIX_THREAD_SAFE_FUNCTIONS        = 0x30db0
+	_POSIX_THREAD_SPORADIC_SERVER       = -0x1
+	_POSIX_THREADS                      = 0x30db0
+	_POSIX_TIMEOUTS                     = -0x1
+	_POSIX_TIMERS                       = -0x1
+	_POSIX_TRACE                        = -0x1
+	_POSIX_TRACE_EVENT_FILTER           = -0x1
+	_POSIX_TRACE_EVENT_NAME_MAX         = 0x1e
+	_POSIX_TRACE_INHERIT                = -0x1
+	_POSIX_TRACE_LOG                    = -0x1
+	_POSIX_TRACE_NAME_MAX               = 0x8
+	_POSIX_TRACE_SYS_MAX                = 0x8
+	_POSIX_TRACE_USER_EVENT_MAX         = 0x20
+	_POSIX_TYPED_MEMORY_OBJECTS         = -0x1
+	_POSIX_VERSION                      = 0x30db0
+
+	_V6_ILP32_OFF32  = -0x1
+	_V6_ILP32_OFFBIG = -0x1
+	_V6_LP64_OFF64   = 0x1
+	_V6_LPBIG_OFFBIG = 0x1
+
+	_POSIX2_C_BIND    = 0x30db0
+	_POSIX2_C_DEV     = 0x30db0
+	_POSIX2_CHAR_TERM = 0x30db0
+	_POSIX2_LOCALEDEF = 0x30db0
+	_POSIX2_PBS       = -0x1
+	_POSIX2_SW_DEV    = 0x30db0
+	_POSIX2_UPE       = 0x30db0
+	_POSIX2_VERSION   = 0x30db0
+
+	_XOPEN_CRYPT            = 0x1
+	_XOPEN_ENH_I18N         = 0x1
+	_XOPEN_REALTIME         = -0x1
+	_XOPEN_REALTIME_THREADS = -0x1
+	_XOPEN_SHM              = 0x1
+	_XOPEN_UNIX             = 0x1
+	_XOPEN_VERSION          = 0x258
+	_XOPEN_XCU_VERSION      = 0x4
+
+	_PTHREAD_DESTRUCTOR_ITERATIONS = 0x4
+	_PTHREAD_KEYS_MAX              = 0x200
+	_PTHREAD_STACK_MIN             = 0x2000
+)
+
+const (
+	_PC_NAME_MAX = 0x4
+
+	_PATH_ZONEINFO = "/usr/share/zoneinfo"
+)
+
+const (
+	_CHAR_BIT = 0x8
+
+	_INT_MAX = 0x7fffffff
+
+	sizeofOffT = 0x8
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_defs_dragonfly.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_dragonfly.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_dragonfly.go
new file mode 100644
--- /dev/null	(date 1660734983784)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_dragonfly.go	(date 1660734983784)
@@ -0,0 +1,228 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_defs_dragonfly.go
+
+//go:build dragonfly
+// +build dragonfly
+
+package sysconf
+
+const (
+	SC_AIO_LISTIO_MAX               = 0x2a
+	SC_AIO_MAX                      = 0x2b
+	SC_AIO_PRIO_DELTA_MAX           = 0x2c
+	SC_ARG_MAX                      = 0x1
+	SC_ATEXIT_MAX                   = 0x6b
+	SC_BC_BASE_MAX                  = 0x9
+	SC_BC_DIM_MAX                   = 0xa
+	SC_BC_SCALE_MAX                 = 0xb
+	SC_BC_STRING_MAX                = 0xc
+	SC_CHILD_MAX                    = 0x2
+	SC_CLK_TCK                      = 0x3
+	SC_COLL_WEIGHTS_MAX             = 0xd
+	SC_DELAYTIMER_MAX               = 0x2d
+	SC_EXPR_NEST_MAX                = 0xe
+	SC_GETGR_R_SIZE_MAX             = 0x46
+	SC_GETPW_R_SIZE_MAX             = 0x47
+	SC_HOST_NAME_MAX                = 0x48
+	SC_IOV_MAX                      = 0x38
+	SC_LINE_MAX                     = 0xf
+	SC_LOGIN_NAME_MAX               = 0x49
+	SC_MQ_OPEN_MAX                  = 0x2e
+	SC_MQ_PRIO_MAX                  = 0x4b
+	SC_NGROUPS_MAX                  = 0x4
+	SC_OPEN_MAX                     = 0x5
+	SC_PAGE_SIZE                    = 0x2f
+	SC_PAGESIZE                     = 0x2f
+	SC_RE_DUP_MAX                   = 0x10
+	SC_RTSIG_MAX                    = 0x30
+	SC_SEM_NSEMS_MAX                = 0x31
+	SC_SEM_VALUE_MAX                = 0x32
+	SC_SIGQUEUE_MAX                 = 0x33
+	SC_STREAM_MAX                   = 0x1a
+	SC_SYMLOOP_MAX                  = 0x78
+	SC_THREAD_DESTRUCTOR_ITERATIONS = 0x55
+	SC_THREAD_KEYS_MAX              = 0x56
+	SC_THREAD_STACK_MIN             = 0x5d
+	SC_THREAD_THREADS_MAX           = 0x5e
+	SC_TIMER_MAX                    = 0x34
+	SC_TTY_NAME_MAX                 = 0x65
+	SC_TZNAME_MAX                   = 0x1b
+
+	SC_ADVISORY_INFO              = 0x41
+	SC_ASYNCHRONOUS_IO            = 0x1c
+	SC_BARRIERS                   = 0x42
+	SC_CLOCK_SELECTION            = 0x43
+	SC_CPUTIME                    = 0x44
+	SC_FSYNC                      = 0x26
+	SC_IPV6                       = 0x76
+	SC_JOB_CONTROL                = 0x6
+	SC_MAPPED_FILES               = 0x1d
+	SC_MEMLOCK                    = 0x1e
+	SC_MEMLOCK_RANGE              = 0x1f
+	SC_MEMORY_PROTECTION          = 0x20
+	SC_MESSAGE_PASSING            = 0x21
+	SC_MONOTONIC_CLOCK            = 0x4a
+	SC_PRIORITIZED_IO             = 0x22
+	SC_PRIORITY_SCHEDULING        = 0x23
+	SC_RAW_SOCKETS                = 0x77
+	SC_READER_WRITER_LOCKS        = 0x4c
+	SC_REALTIME_SIGNALS           = 0x24
+	SC_REGEXP                     = 0x4d
+	SC_SAVED_IDS                  = 0x7
+	SC_SEMAPHORES                 = 0x25
+	SC_SHARED_MEMORY_OBJECTS      = 0x27
+	SC_SHELL                      = 0x4e
+	SC_SPAWN                      = 0x4f
+	SC_SPIN_LOCKS                 = 0x50
+	SC_SPORADIC_SERVER            = 0x51
+	SC_SYNCHRONIZED_IO            = 0x28
+	SC_THREAD_ATTR_STACKADDR      = 0x52
+	SC_THREAD_ATTR_STACKSIZE      = 0x53
+	SC_THREAD_CPUTIME             = 0x54
+	SC_THREAD_PRIO_INHERIT        = 0x57
+	SC_THREAD_PRIO_PROTECT        = 0x58
+	SC_THREAD_PRIORITY_SCHEDULING = 0x59
+	SC_THREAD_PROCESS_SHARED      = 0x5a
+	SC_THREAD_SAFE_FUNCTIONS      = 0x5b
+	SC_THREAD_SPORADIC_SERVER     = 0x5c
+	SC_THREADS                    = 0x60
+	SC_TIMEOUTS                   = 0x5f
+	SC_TIMERS                     = 0x29
+	SC_TRACE                      = 0x61
+	SC_TRACE_EVENT_FILTER         = 0x62
+	SC_TRACE_INHERIT              = 0x63
+	SC_TRACE_LOG                  = 0x64
+	SC_TYPED_MEMORY_OBJECTS       = 0x66
+	SC_VERSION                    = 0x8
+
+	SC_V6_ILP32_OFF32  = 0x67
+	SC_V6_ILP32_OFFBIG = 0x68
+	SC_V6_LP64_OFF64   = 0x69
+	SC_V6_LPBIG_OFFBIG = 0x6a
+
+	SC_2_C_BIND         = 0x12
+	SC_2_C_DEV          = 0x13
+	SC_2_CHAR_TERM      = 0x14
+	SC_2_FORT_DEV       = 0x15
+	SC_2_FORT_RUN       = 0x16
+	SC_2_LOCALEDEF      = 0x17
+	SC_2_PBS            = 0x3b
+	SC_2_PBS_ACCOUNTING = 0x3c
+	SC_2_PBS_CHECKPOINT = 0x3d
+	SC_2_PBS_LOCATE     = 0x3e
+	SC_2_PBS_MESSAGE    = 0x3f
+	SC_2_PBS_TRACK      = 0x40
+	SC_2_SW_DEV         = 0x18
+	SC_2_UPE            = 0x19
+	SC_2_VERSION        = 0x11
+
+	SC_XOPEN_CRYPT            = 0x6c
+	SC_XOPEN_ENH_I18N         = 0x6d
+	SC_XOPEN_REALTIME         = 0x6f
+	SC_XOPEN_REALTIME_THREADS = 0x70
+	SC_XOPEN_SHM              = 0x71
+	SC_XOPEN_STREAMS          = 0x72
+	SC_XOPEN_UNIX             = 0x73
+	SC_XOPEN_VERSION          = 0x74
+	SC_XOPEN_XCU_VERSION      = 0x75
+
+	SC_PHYS_PAGES       = 0x79
+	SC_NPROCESSORS_CONF = 0x39
+	SC_NPROCESSORS_ONLN = 0x3a
+)
+
+const (
+	_BC_BASE_MAX      = 0x63
+	_BC_DIM_MAX       = 0x800
+	_BC_SCALE_MAX     = 0x63
+	_BC_STRING_MAX    = 0x3e8
+	_COLL_WEIGHTS_MAX = 0xa
+	_EXPR_NEST_MAX    = 0x20
+	_LINE_MAX         = 0x800
+	_RE_DUP_MAX       = 0xff
+
+	_CLK_TCK = 0x80
+
+	_MAXHOSTNAMELEN = 0x100
+	_MAXLOGNAME     = 0x11
+	_MAXSYMLINKS    = 0x20
+	_ATEXIT_SIZE    = 0x20
+
+	_POSIX_ADVISORY_INFO              = -0x1
+	_POSIX_ARG_MAX                    = 0x1000
+	_POSIX_ASYNCHRONOUS_IO            = 0x0
+	_POSIX_BARRIERS                   = 0x30db0
+	_POSIX_CHILD_MAX                  = 0x19
+	_POSIX_CLOCK_SELECTION            = -0x1
+	_POSIX_CPUTIME                    = 0x30db0
+	_POSIX_FSYNC                      = 0x30db0
+	_POSIX_IPV6                       = 0x0
+	_POSIX_JOB_CONTROL                = 0x1
+	_POSIX_MAPPED_FILES               = 0x30db0
+	_POSIX_MEMLOCK                    = -0x1
+	_POSIX_MEMLOCK_RANGE              = 0x30db0
+	_POSIX_MEMORY_PROTECTION          = 0x30db0
+	_POSIX_MESSAGE_PASSING            = 0x30db0
+	_POSIX_MONOTONIC_CLOCK            = 0x30db0
+	_POSIX_PRIORITIZED_IO             = -0x1
+	_POSIX_PRIORITY_SCHEDULING        = 0x30db0
+	_POSIX_RAW_SOCKETS                = 0x30db0
+	_POSIX_READER_WRITER_LOCKS        = 0x30db0
+	_POSIX_REALTIME_SIGNALS           = 0x30db0
+	_POSIX_REGEXP                     = 0x1
+	_POSIX_SEM_VALUE_MAX              = 0x7fff
+	_POSIX_SEMAPHORES                 = 0x30db0
+	_POSIX_SHARED_MEMORY_OBJECTS      = 0x30db0
+	_POSIX_SHELL                      = 0x1
+	_POSIX_SPAWN                      = 0x30db0
+	_POSIX_SPIN_LOCKS                 = 0x30db0
+	_POSIX_SPORADIC_SERVER            = -0x1
+	_POSIX_SYNCHRONIZED_IO            = -0x1
+	_POSIX_THREAD_ATTR_STACKADDR      = 0x30db0
+	_POSIX_THREAD_ATTR_STACKSIZE      = 0x30db0
+	_POSIX_THREAD_CPUTIME             = 0x30db0
+	_POSIX_THREAD_PRIO_INHERIT        = 0x30db0
+	_POSIX_THREAD_PRIO_PROTECT        = 0x30db0
+	_POSIX_THREAD_PRIORITY_SCHEDULING = 0x30db0
+	_POSIX_THREAD_PROCESS_SHARED      = -0x1
+	_POSIX_THREAD_SAFE_FUNCTIONS      = -0x1
+	_POSIX_THREAD_SPORADIC_SERVER     = -0x1
+	_POSIX_THREADS                    = 0x30db0
+	_POSIX_TIMEOUTS                   = 0x30db0
+	_POSIX_TIMERS                     = 0x30db0
+	_POSIX_TRACE                      = -0x1
+	_POSIX_TYPED_MEMORY_OBJECTS       = -0x1
+	_POSIX_VERSION                    = 0x30db0
+
+	_V6_ILP32_OFF32  = -0x1
+	_V6_ILP32_OFFBIG = 0x0
+	_V6_LP64_OFF64   = 0x0
+	_V6_LPBIG_OFFBIG = -0x1
+
+	_POSIX2_C_BIND    = 0x31069
+	_POSIX2_C_DEV     = 0x31069
+	_POSIX2_CHAR_TERM = 0x1
+	_POSIX2_LOCALEDEF = 0x31069
+	_POSIX2_PBS       = -0x1
+	_POSIX2_SW_DEV    = 0x31069
+	_POSIX2_UPE       = 0x31069
+	_POSIX2_VERSION   = 0x30a2c
+
+	_XOPEN_CRYPT            = -0x1
+	_XOPEN_ENH_I18N         = -0x1
+	_XOPEN_REALTIME         = -0x1
+	_XOPEN_REALTIME_THREADS = -0x1
+	_XOPEN_SHM              = 0x1
+	_XOPEN_UNIX             = -0x1
+
+	_PTHREAD_DESTRUCTOR_ITERATIONS = 0x4
+	_PTHREAD_KEYS_MAX              = 0x100
+	_PTHREAD_STACK_MIN             = 0x4000
+)
+
+const (
+	_PC_NAME_MAX = 0x4
+
+	_PATH_DEV      = "/dev/"
+	_PATH_ZONEINFO = "/usr/share/zoneinfo"
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_defs_freebsd.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_freebsd.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_freebsd.go
new file mode 100644
--- /dev/null	(date 1660734983785)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_freebsd.go	(date 1660734983785)
@@ -0,0 +1,229 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_defs_freebsd.go
+
+//go:build freebsd
+// +build freebsd
+
+package sysconf
+
+const (
+	SC_AIO_LISTIO_MAX               = 0x2a
+	SC_AIO_MAX                      = 0x2b
+	SC_AIO_PRIO_DELTA_MAX           = 0x2c
+	SC_ARG_MAX                      = 0x1
+	SC_ATEXIT_MAX                   = 0x6b
+	SC_BC_BASE_MAX                  = 0x9
+	SC_BC_DIM_MAX                   = 0xa
+	SC_BC_SCALE_MAX                 = 0xb
+	SC_BC_STRING_MAX                = 0xc
+	SC_CHILD_MAX                    = 0x2
+	SC_CLK_TCK                      = 0x3
+	SC_COLL_WEIGHTS_MAX             = 0xd
+	SC_DELAYTIMER_MAX               = 0x2d
+	SC_EXPR_NEST_MAX                = 0xe
+	SC_GETGR_R_SIZE_MAX             = 0x46
+	SC_GETPW_R_SIZE_MAX             = 0x47
+	SC_HOST_NAME_MAX                = 0x48
+	SC_IOV_MAX                      = 0x38
+	SC_LINE_MAX                     = 0xf
+	SC_LOGIN_NAME_MAX               = 0x49
+	SC_MQ_OPEN_MAX                  = 0x2e
+	SC_MQ_PRIO_MAX                  = 0x4b
+	SC_NGROUPS_MAX                  = 0x4
+	SC_OPEN_MAX                     = 0x5
+	SC_PAGE_SIZE                    = 0x2f
+	SC_PAGESIZE                     = 0x2f
+	SC_RE_DUP_MAX                   = 0x10
+	SC_RTSIG_MAX                    = 0x30
+	SC_SEM_NSEMS_MAX                = 0x31
+	SC_SEM_VALUE_MAX                = 0x32
+	SC_SIGQUEUE_MAX                 = 0x33
+	SC_STREAM_MAX                   = 0x1a
+	SC_SYMLOOP_MAX                  = 0x78
+	SC_THREAD_DESTRUCTOR_ITERATIONS = 0x55
+	SC_THREAD_KEYS_MAX              = 0x56
+	SC_THREAD_STACK_MIN             = 0x5d
+	SC_THREAD_THREADS_MAX           = 0x5e
+	SC_TIMER_MAX                    = 0x34
+	SC_TTY_NAME_MAX                 = 0x65
+	SC_TZNAME_MAX                   = 0x1b
+
+	SC_ADVISORY_INFO              = 0x41
+	SC_ASYNCHRONOUS_IO            = 0x1c
+	SC_BARRIERS                   = 0x42
+	SC_CLOCK_SELECTION            = 0x43
+	SC_CPUTIME                    = 0x44
+	SC_FSYNC                      = 0x26
+	SC_IPV6                       = 0x76
+	SC_JOB_CONTROL                = 0x6
+	SC_MAPPED_FILES               = 0x1d
+	SC_MEMLOCK                    = 0x1e
+	SC_MEMLOCK_RANGE              = 0x1f
+	SC_MEMORY_PROTECTION          = 0x20
+	SC_MESSAGE_PASSING            = 0x21
+	SC_MONOTONIC_CLOCK            = 0x4a
+	SC_PRIORITIZED_IO             = 0x22
+	SC_PRIORITY_SCHEDULING        = 0x23
+	SC_RAW_SOCKETS                = 0x77
+	SC_READER_WRITER_LOCKS        = 0x4c
+	SC_REALTIME_SIGNALS           = 0x24
+	SC_REGEXP                     = 0x4d
+	SC_SAVED_IDS                  = 0x7
+	SC_SEMAPHORES                 = 0x25
+	SC_SHARED_MEMORY_OBJECTS      = 0x27
+	SC_SHELL                      = 0x4e
+	SC_SPAWN                      = 0x4f
+	SC_SPIN_LOCKS                 = 0x50
+	SC_SPORADIC_SERVER            = 0x51
+	SC_SYNCHRONIZED_IO            = 0x28
+	SC_THREAD_ATTR_STACKADDR      = 0x52
+	SC_THREAD_ATTR_STACKSIZE      = 0x53
+	SC_THREAD_CPUTIME             = 0x54
+	SC_THREAD_PRIO_INHERIT        = 0x57
+	SC_THREAD_PRIO_PROTECT        = 0x58
+	SC_THREAD_PRIORITY_SCHEDULING = 0x59
+	SC_THREAD_PROCESS_SHARED      = 0x5a
+	SC_THREAD_SAFE_FUNCTIONS      = 0x5b
+	SC_THREAD_SPORADIC_SERVER     = 0x5c
+	SC_THREADS                    = 0x60
+	SC_TIMEOUTS                   = 0x5f
+	SC_TIMERS                     = 0x29
+	SC_TRACE                      = 0x61
+	SC_TRACE_EVENT_FILTER         = 0x62
+	SC_TRACE_INHERIT              = 0x63
+	SC_TRACE_LOG                  = 0x64
+	SC_TYPED_MEMORY_OBJECTS       = 0x66
+	SC_VERSION                    = 0x8
+
+	SC_V6_ILP32_OFF32  = 0x67
+	SC_V6_ILP32_OFFBIG = 0x68
+	SC_V6_LP64_OFF64   = 0x69
+	SC_V6_LPBIG_OFFBIG = 0x6a
+
+	SC_2_C_BIND         = 0x12
+	SC_2_C_DEV          = 0x13
+	SC_2_CHAR_TERM      = 0x14
+	SC_2_FORT_DEV       = 0x15
+	SC_2_FORT_RUN       = 0x16
+	SC_2_LOCALEDEF      = 0x17
+	SC_2_PBS            = 0x3b
+	SC_2_PBS_ACCOUNTING = 0x3c
+	SC_2_PBS_CHECKPOINT = 0x3d
+	SC_2_PBS_LOCATE     = 0x3e
+	SC_2_PBS_MESSAGE    = 0x3f
+	SC_2_PBS_TRACK      = 0x40
+	SC_2_SW_DEV         = 0x18
+	SC_2_UPE            = 0x19
+	SC_2_VERSION        = 0x11
+
+	SC_XOPEN_CRYPT            = 0x6c
+	SC_XOPEN_ENH_I18N         = 0x6d
+	SC_XOPEN_REALTIME         = 0x6f
+	SC_XOPEN_REALTIME_THREADS = 0x70
+	SC_XOPEN_SHM              = 0x71
+	SC_XOPEN_STREAMS          = 0x72
+	SC_XOPEN_UNIX             = 0x73
+	SC_XOPEN_VERSION          = 0x74
+	SC_XOPEN_XCU_VERSION      = 0x75
+
+	SC_PHYS_PAGES       = 0x79
+	SC_NPROCESSORS_CONF = 0x39
+	SC_NPROCESSORS_ONLN = 0x3a
+)
+
+const (
+	_BC_BASE_MAX      = 0x63
+	_BC_DIM_MAX       = 0x800
+	_BC_SCALE_MAX     = 0x63
+	_BC_STRING_MAX    = 0x3e8
+	_COLL_WEIGHTS_MAX = 0xa
+	_EXPR_NEST_MAX    = 0x20
+	_LINE_MAX         = 0x800
+	_MQ_PRIO_MAX      = 0x40
+	_RE_DUP_MAX       = 0xff
+	_SEM_VALUE_MAX    = 0x7fffffff
+
+	_CLK_TCK = 0x80
+
+	_MAXHOSTNAMELEN = 0x100
+	_MAXLOGNAME     = 0x21
+	_MAXSYMLINKS    = 0x20
+	_ATEXIT_SIZE    = 0x20
+
+	_POSIX_ADVISORY_INFO              = 0x30db0
+	_POSIX_ARG_MAX                    = 0x1000
+	_POSIX_ASYNCHRONOUS_IO            = 0x30db0
+	_POSIX_BARRIERS                   = 0x30db0
+	_POSIX_CHILD_MAX                  = 0x19
+	_POSIX_CLOCK_SELECTION            = -0x1
+	_POSIX_CPUTIME                    = 0x30db0
+	_POSIX_FSYNC                      = 0x30db0
+	_POSIX_IPV6                       = 0x0
+	_POSIX_JOB_CONTROL                = 0x1
+	_POSIX_MAPPED_FILES               = 0x30db0
+	_POSIX_MEMLOCK                    = -0x1
+	_POSIX_MEMLOCK_RANGE              = 0x30db0
+	_POSIX_MEMORY_PROTECTION          = 0x30db0
+	_POSIX_MESSAGE_PASSING            = 0x30db0
+	_POSIX_MONOTONIC_CLOCK            = 0x30db0
+	_POSIX_PRIORITIZED_IO             = -0x1
+	_POSIX_PRIORITY_SCHEDULING        = 0x0
+	_POSIX_RAW_SOCKETS                = 0x30db0
+	_POSIX_READER_WRITER_LOCKS        = 0x30db0
+	_POSIX_REALTIME_SIGNALS           = 0x30db0
+	_POSIX_REGEXP                     = 0x1
+	_POSIX_SEM_VALUE_MAX              = 0x7fff
+	_POSIX_SEMAPHORES                 = 0x30db0
+	_POSIX_SHARED_MEMORY_OBJECTS      = 0x30db0
+	_POSIX_SHELL                      = 0x1
+	_POSIX_SPAWN                      = 0x30db0
+	_POSIX_SPIN_LOCKS                 = 0x30db0
+	_POSIX_SPORADIC_SERVER            = -0x1
+	_POSIX_SYNCHRONIZED_IO            = -0x1
+	_POSIX_THREAD_ATTR_STACKADDR      = 0x30db0
+	_POSIX_THREAD_ATTR_STACKSIZE      = 0x30db0
+	_POSIX_THREAD_CPUTIME             = 0x30db0
+	_POSIX_THREAD_PRIO_INHERIT        = 0x30db0
+	_POSIX_THREAD_PRIO_PROTECT        = 0x30db0
+	_POSIX_THREAD_PRIORITY_SCHEDULING = 0x30db0
+	_POSIX_THREAD_PROCESS_SHARED      = 0x30db0
+	_POSIX_THREAD_SAFE_FUNCTIONS      = -0x1
+	_POSIX_THREADS                    = 0x30db0
+	_POSIX_TIMEOUTS                   = 0x30db0
+	_POSIX_TIMERS                     = 0x30db0
+	_POSIX_TRACE                      = -0x1
+	_POSIX_TYPED_MEMORY_OBJECTS       = -0x1
+	_POSIX_VERSION                    = 0x30db0
+
+	_V6_ILP32_OFF32  = -0x1
+	_V6_ILP32_OFFBIG = 0x0
+	_V6_LP64_OFF64   = 0x0
+	_V6_LPBIG_OFFBIG = -0x1
+
+	_POSIX2_C_BIND    = 0x30db0
+	_POSIX2_C_DEV     = -0x1
+	_POSIX2_CHAR_TERM = 0x1
+	_POSIX2_LOCALEDEF = -0x1
+	_POSIX2_PBS       = -0x1
+	_POSIX2_SW_DEV    = -0x1
+	_POSIX2_UPE       = 0x30db0
+	_POSIX2_VERSION   = 0x30a2c
+
+	_XOPEN_CRYPT            = -0x1
+	_XOPEN_ENH_I18N         = -0x1
+	_XOPEN_REALTIME         = -0x1
+	_XOPEN_REALTIME_THREADS = -0x1
+	_XOPEN_SHM              = 0x1
+	_XOPEN_UNIX             = -0x1
+
+	_PTHREAD_DESTRUCTOR_ITERATIONS = 0x4
+	_PTHREAD_KEYS_MAX              = 0x100
+	_PTHREAD_STACK_MIN             = 0x800
+)
+
+const (
+	_PC_NAME_MAX = 0x4
+
+	_PATH_DEV      = "/dev/"
+	_PATH_ZONEINFO = "/usr/share/zoneinfo"
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_defs_linux.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_linux.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_linux.go
new file mode 100644
--- /dev/null	(date 1660734983786)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_linux.go	(date 1660734983786)
@@ -0,0 +1,147 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_defs_linux.go
+
+//go:build linux
+// +build linux
+
+package sysconf
+
+const (
+	SC_AIO_LISTIO_MAX               = 0x17
+	SC_AIO_MAX                      = 0x18
+	SC_AIO_PRIO_DELTA_MAX           = 0x19
+	SC_ARG_MAX                      = 0x0
+	SC_ATEXIT_MAX                   = 0x57
+	SC_BC_BASE_MAX                  = 0x24
+	SC_BC_DIM_MAX                   = 0x25
+	SC_BC_SCALE_MAX                 = 0x26
+	SC_BC_STRING_MAX                = 0x27
+	SC_CHILD_MAX                    = 0x1
+	SC_CLK_TCK                      = 0x2
+	SC_COLL_WEIGHTS_MAX             = 0x28
+	SC_DELAYTIMER_MAX               = 0x1a
+	SC_EXPR_NEST_MAX                = 0x2a
+	SC_GETGR_R_SIZE_MAX             = 0x45
+	SC_GETPW_R_SIZE_MAX             = 0x46
+	SC_HOST_NAME_MAX                = 0xb4
+	SC_IOV_MAX                      = 0x3c
+	SC_LINE_MAX                     = 0x2b
+	SC_LOGIN_NAME_MAX               = 0x47
+	SC_MQ_OPEN_MAX                  = 0x1b
+	SC_MQ_PRIO_MAX                  = 0x1c
+	SC_NGROUPS_MAX                  = 0x3
+	SC_OPEN_MAX                     = 0x4
+	SC_PAGE_SIZE                    = 0x1e
+	SC_PAGESIZE                     = 0x1e
+	SC_THREAD_DESTRUCTOR_ITERATIONS = 0x49
+	SC_THREAD_KEYS_MAX              = 0x4a
+	SC_THREAD_STACK_MIN             = 0x4b
+	SC_THREAD_THREADS_MAX           = 0x4c
+	SC_RE_DUP_MAX                   = 0x2c
+	SC_RTSIG_MAX                    = 0x1f
+	SC_SEM_NSEMS_MAX                = 0x20
+	SC_SEM_VALUE_MAX                = 0x21
+	SC_SIGQUEUE_MAX                 = 0x22
+	SC_STREAM_MAX                   = 0x5
+	SC_SYMLOOP_MAX                  = 0xad
+	SC_TIMER_MAX                    = 0x23
+	SC_TTY_NAME_MAX                 = 0x48
+	SC_TZNAME_MAX                   = 0x6
+
+	SC_ADVISORY_INFO              = 0x84
+	SC_ASYNCHRONOUS_IO            = 0xc
+	SC_BARRIERS                   = 0x85
+	SC_CLOCK_SELECTION            = 0x89
+	SC_CPUTIME                    = 0x8a
+	SC_FSYNC                      = 0xf
+	SC_IPV6                       = 0xeb
+	SC_JOB_CONTROL                = 0x7
+	SC_MAPPED_FILES               = 0x10
+	SC_MEMLOCK                    = 0x11
+	SC_MEMLOCK_RANGE              = 0x12
+	SC_MEMORY_PROTECTION          = 0x13
+	SC_MESSAGE_PASSING            = 0x14
+	SC_MONOTONIC_CLOCK            = 0x95
+	SC_PRIORITIZED_IO             = 0xd
+	SC_PRIORITY_SCHEDULING        = 0xa
+	SC_RAW_SOCKETS                = 0xec
+	SC_READER_WRITER_LOCKS        = 0x99
+	SC_REALTIME_SIGNALS           = 0x9
+	SC_REGEXP                     = 0x9b
+	SC_SAVED_IDS                  = 0x8
+	SC_SEMAPHORES                 = 0x15
+	SC_SHARED_MEMORY_OBJECTS      = 0x16
+	SC_SHELL                      = 0x9d
+	SC_SPAWN                      = 0x9f
+	SC_SPIN_LOCKS                 = 0x9a
+	SC_SPORADIC_SERVER            = 0xa0
+	SC_SS_REPL_MAX                = 0xf1
+	SC_SYNCHRONIZED_IO            = 0xe
+	SC_THREAD_ATTR_STACKADDR      = 0x4d
+	SC_THREAD_ATTR_STACKSIZE      = 0x4e
+	SC_THREAD_CPUTIME             = 0x8b
+	SC_THREAD_PRIO_INHERIT        = 0x50
+	SC_THREAD_PRIO_PROTECT        = 0x51
+	SC_THREAD_PRIORITY_SCHEDULING = 0x4f
+	SC_THREAD_PROCESS_SHARED      = 0x52
+	SC_THREAD_ROBUST_PRIO_INHERIT = 0xf7
+	SC_THREAD_ROBUST_PRIO_PROTECT = 0xf8
+	SC_THREAD_SAFE_FUNCTIONS      = 0x44
+	SC_THREAD_SPORADIC_SERVER     = 0xa1
+	SC_THREADS                    = 0x43
+	SC_TIMEOUTS                   = 0xa4
+	SC_TIMERS                     = 0xb
+	SC_TRACE                      = 0xb5
+	SC_TRACE_EVENT_FILTER         = 0xb6
+	SC_TRACE_EVENT_NAME_MAX       = 0xf2
+	SC_TRACE_INHERIT              = 0xb7
+	SC_TRACE_LOG                  = 0xb8
+	SC_TRACE_NAME_MAX             = 0xf3
+	SC_TRACE_SYS_MAX              = 0xf4
+	SC_TRACE_USER_EVENT_MAX       = 0xf5
+	SC_TYPED_MEMORY_OBJECTS       = 0xa5
+	SC_VERSION                    = 0x1d
+
+	SC_V7_ILP32_OFF32  = 0xed
+	SC_V7_ILP32_OFFBIG = 0xee
+	SC_V7_LP64_OFF64   = 0xef
+	SC_V7_LPBIG_OFFBIG = 0xf0
+
+	SC_V6_ILP32_OFF32  = 0xb0
+	SC_V6_ILP32_OFFBIG = 0xb1
+	SC_V6_LP64_OFF64   = 0xb2
+	SC_V6_LPBIG_OFFBIG = 0xb3
+
+	SC_2_C_BIND         = 0x2f
+	SC_2_C_DEV          = 0x30
+	SC_2_C_VERSION      = 0x60
+	SC_2_CHAR_TERM      = 0x5f
+	SC_2_FORT_DEV       = 0x31
+	SC_2_FORT_RUN       = 0x32
+	SC_2_LOCALEDEF      = 0x34
+	SC_2_PBS            = 0xa8
+	SC_2_PBS_ACCOUNTING = 0xa9
+	SC_2_PBS_CHECKPOINT = 0xaf
+	SC_2_PBS_LOCATE     = 0xaa
+	SC_2_PBS_MESSAGE    = 0xab
+	SC_2_PBS_TRACK      = 0xac
+	SC_2_SW_DEV         = 0x33
+	SC_2_UPE            = 0x61
+	SC_2_VERSION        = 0x2e
+
+	SC_XOPEN_CRYPT            = 0x5c
+	SC_XOPEN_ENH_I18N         = 0x5d
+	SC_XOPEN_REALTIME         = 0x82
+	SC_XOPEN_REALTIME_THREADS = 0x83
+	SC_XOPEN_SHM              = 0x5e
+	SC_XOPEN_STREAMS          = 0xf6
+	SC_XOPEN_UNIX             = 0x5b
+	SC_XOPEN_VERSION          = 0x59
+	SC_XOPEN_XCU_VERSION      = 0x5a
+
+	SC_PHYS_PAGES       = 0x55
+	SC_AVPHYS_PAGES     = 0x56
+	SC_NPROCESSORS_CONF = 0x53
+	SC_NPROCESSORS_ONLN = 0x54
+	SC_UIO_MAXIOV       = 0x3c
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_defs_netbsd.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_netbsd.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_netbsd.go
new file mode 100644
--- /dev/null	(date 1660734983786)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_netbsd.go	(date 1660734983786)
@@ -0,0 +1,164 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_defs_netbsd.go
+
+//go:build netbsd
+// +build netbsd
+
+package sysconf
+
+const (
+	SC_ARG_MAX                      = 0x1
+	SC_CHILD_MAX                    = 0x2
+	SC_NGROUPS_MAX                  = 0x4
+	SC_OPEN_MAX                     = 0x5
+	SC_JOB_CONTROL                  = 0x6
+	SC_SAVED_IDS                    = 0x7
+	SC_VERSION                      = 0x8
+	SC_BC_BASE_MAX                  = 0x9
+	SC_BC_DIM_MAX                   = 0xa
+	SC_BC_SCALE_MAX                 = 0xb
+	SC_BC_STRING_MAX                = 0xc
+	SC_COLL_WEIGHTS_MAX             = 0xd
+	SC_EXPR_NEST_MAX                = 0xe
+	SC_LINE_MAX                     = 0xf
+	SC_RE_DUP_MAX                   = 0x10
+	SC_2_VERSION                    = 0x11
+	SC_2_C_BIND                     = 0x12
+	SC_2_C_DEV                      = 0x13
+	SC_2_CHAR_TERM                  = 0x14
+	SC_2_FORT_DEV                   = 0x15
+	SC_2_FORT_RUN                   = 0x16
+	SC_2_LOCALEDEF                  = 0x17
+	SC_2_SW_DEV                     = 0x18
+	SC_2_UPE                        = 0x19
+	SC_STREAM_MAX                   = 0x1a
+	SC_TZNAME_MAX                   = 0x1b
+	SC_PAGESIZE                     = 0x1c
+	SC_PAGE_SIZE                    = 0x1c
+	SC_FSYNC                        = 0x1d
+	SC_XOPEN_SHM                    = 0x1e
+	SC_SYNCHRONIZED_IO              = 0x1f
+	SC_IOV_MAX                      = 0x20
+	SC_MAPPED_FILES                 = 0x21
+	SC_MEMLOCK                      = 0x22
+	SC_MEMLOCK_RANGE                = 0x23
+	SC_MEMORY_PROTECTION            = 0x24
+	SC_LOGIN_NAME_MAX               = 0x25
+	SC_MONOTONIC_CLOCK              = 0x26
+	SC_CLK_TCK                      = 0x27
+	SC_ATEXIT_MAX                   = 0x28
+	SC_THREADS                      = 0x29
+	SC_SEMAPHORES                   = 0x2a
+	SC_BARRIERS                     = 0x2b
+	SC_TIMERS                       = 0x2c
+	SC_SPIN_LOCKS                   = 0x2d
+	SC_READER_WRITER_LOCKS          = 0x2e
+	SC_GETGR_R_SIZE_MAX             = 0x2f
+	SC_GETPW_R_SIZE_MAX             = 0x30
+	SC_CLOCK_SELECTION              = 0x31
+	SC_ASYNCHRONOUS_IO              = 0x32
+	SC_AIO_LISTIO_MAX               = 0x33
+	SC_AIO_MAX                      = 0x34
+	SC_MESSAGE_PASSING              = 0x35
+	SC_MQ_OPEN_MAX                  = 0x36
+	SC_MQ_PRIO_MAX                  = 0x37
+	SC_PRIORITY_SCHEDULING          = 0x38
+	SC_THREAD_DESTRUCTOR_ITERATIONS = 0x39
+	SC_THREAD_KEYS_MAX              = 0x3a
+	SC_THREAD_STACK_MIN             = 0x3b
+	SC_THREAD_THREADS_MAX           = 0x3c
+	SC_THREAD_ATTR_STACKADDR        = 0x3d
+	SC_THREAD_ATTR_STACKSIZE        = 0x3e
+	SC_THREAD_PRIORITY_SCHEDULING   = 0x3f
+	SC_THREAD_PRIO_INHERIT          = 0x40
+	SC_THREAD_PRIO_PROTECT          = 0x41
+	SC_THREAD_PROCESS_SHARED        = 0x42
+	SC_THREAD_SAFE_FUNCTIONS        = 0x43
+	SC_TTY_NAME_MAX                 = 0x44
+	SC_HOST_NAME_MAX                = 0x45
+	SC_PASS_MAX                     = 0x46
+	SC_REGEXP                       = 0x47
+	SC_SHELL                        = 0x48
+	SC_SYMLOOP_MAX                  = 0x49
+
+	SC_V6_ILP32_OFF32   = 0x4a
+	SC_V6_ILP32_OFFBIG  = 0x4b
+	SC_V6_LP64_OFF64    = 0x4c
+	SC_V6_LPBIG_OFFBIG  = 0x4d
+	SC_2_PBS            = 0x50
+	SC_2_PBS_ACCOUNTING = 0x51
+	SC_2_PBS_CHECKPOINT = 0x52
+	SC_2_PBS_LOCATE     = 0x53
+	SC_2_PBS_MESSAGE    = 0x54
+	SC_2_PBS_TRACK      = 0x55
+
+	SC_SPAWN                 = 0x56
+	SC_SHARED_MEMORY_OBJECTS = 0x57
+
+	SC_TIMER_MAX        = 0x58
+	SC_SEM_NSEMS_MAX    = 0x59
+	SC_CPUTIME          = 0x5a
+	SC_THREAD_CPUTIME   = 0x5b
+	SC_DELAYTIMER_MAX   = 0x5c
+	SC_SIGQUEUE_MAX     = 0x5d
+	SC_REALTIME_SIGNALS = 0x5e
+
+	SC_PHYS_PAGES = 0x79
+
+	SC_NPROCESSORS_CONF = 0x3e9
+	SC_NPROCESSORS_ONLN = 0x3ea
+
+	SC_SCHED_RT_TS   = 0x7d1
+	SC_SCHED_PRI_MIN = 0x7d2
+	SC_SCHED_PRI_MAX = 0x7d3
+)
+
+const (
+	_MAXHOSTNAMELEN = 0x100
+	_MAXLOGNAME     = 0x10
+	_MAXSYMLINKS    = 0x20
+
+	_POSIX_ARG_MAX                      = 0x1000
+	_POSIX_CHILD_MAX                    = 0x19
+	_POSIX_CPUTIME                      = 0x30db0
+	_POSIX_DELAYTIMER_MAX               = 0x20
+	_POSIX_PRIORITY_SCHEDULING          = 0x30db0
+	_POSIX_REGEXP                       = 0x1
+	_POSIX_SHARED_MEMORY_OBJECTS        = 0x0
+	_POSIX_SHELL                        = 0x1
+	_POSIX_SIGQUEUE_MAX                 = 0x20
+	_POSIX_SPAWN                        = 0x31069
+	_POSIX_THREAD_ATTR_STACKADDR        = 0x30db0
+	_POSIX_THREAD_ATTR_STACKSIZE        = 0x30db0
+	_POSIX_THREAD_CPUTIME               = 0x30db0
+	_POSIX_THREAD_DESTRUCTOR_ITERATIONS = 0x4
+	_POSIX_THREAD_KEYS_MAX              = 0x80
+	_POSIX_THREAD_PRIO_PROTECT          = 0x30db0
+	_POSIX_THREAD_SAFE_FUNCTIONS        = 0x30db0
+	_POSIX_TIMER_MAX                    = 0x20
+	_POSIX_VERSION                      = 0x30db0
+
+	_POSIX2_VERSION = 0x30db0
+
+	_FOPEN_MAX  = 0x14
+	_NAME_MAX   = 0x1ff
+	_RE_DUP_MAX = 0xff
+
+	_BC_BASE_MAX      = 0x7fffffff
+	_BC_DIM_MAX       = 0xffff
+	_BC_SCALE_MAX     = 0x7fffffff
+	_BC_STRING_MAX    = 0x7fffffff
+	_COLL_WEIGHTS_MAX = 0x2
+	_EXPR_NEST_MAX    = 0x20
+	_LINE_MAX         = 0x800
+
+	_GETGR_R_SIZE_MAX = 0x400
+	_GETPW_R_SIZE_MAX = 0x400
+
+	_PATH_DEV      = "/dev/"
+	_PATH_ZONEINFO = "/usr/share/zoneinfo"
+
+	_PASSWORD_LEN = 0x80
+)
+
+const _PC_NAME_MAX = 0x4
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_defs_openbsd.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_openbsd.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_openbsd.go
new file mode 100644
--- /dev/null	(date 1660734983787)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_openbsd.go	(date 1660734983787)
@@ -0,0 +1,263 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_defs_openbsd.go
+
+//go:build openbsd
+// +build openbsd
+
+package sysconf
+
+const (
+	SC_AIO_LISTIO_MAX               = 0x2a
+	SC_AIO_MAX                      = 0x2b
+	SC_AIO_PRIO_DELTA_MAX           = 0x2c
+	SC_ARG_MAX                      = 0x1
+	SC_ATEXIT_MAX                   = 0x2e
+	SC_BC_BASE_MAX                  = 0x9
+	SC_BC_DIM_MAX                   = 0xa
+	SC_BC_SCALE_MAX                 = 0xb
+	SC_BC_STRING_MAX                = 0xc
+	SC_CHILD_MAX                    = 0x2
+	SC_CLK_TCK                      = 0x3
+	SC_COLL_WEIGHTS_MAX             = 0xd
+	SC_DELAYTIMER_MAX               = 0x32
+	SC_EXPR_NEST_MAX                = 0xe
+	SC_GETGR_R_SIZE_MAX             = 0x64
+	SC_GETPW_R_SIZE_MAX             = 0x65
+	SC_HOST_NAME_MAX                = 0x21
+	SC_IOV_MAX                      = 0x33
+	SC_LINE_MAX                     = 0xf
+	SC_LOGIN_NAME_MAX               = 0x66
+	SC_MQ_OPEN_MAX                  = 0x3a
+	SC_MQ_PRIO_MAX                  = 0x3b
+	SC_NGROUPS_MAX                  = 0x4
+	SC_OPEN_MAX                     = 0x5
+	SC_PAGE_SIZE                    = 0x1c
+	SC_PAGESIZE                     = 0x1c
+	SC_THREAD_DESTRUCTOR_ITERATIONS = 0x50
+	SC_THREAD_KEYS_MAX              = 0x51
+	SC_THREAD_STACK_MIN             = 0x59
+	SC_THREAD_THREADS_MAX           = 0x5a
+	SC_RE_DUP_MAX                   = 0x10
+	SC_SEM_NSEMS_MAX                = 0x1f
+	SC_SEM_VALUE_MAX                = 0x20
+	SC_SIGQUEUE_MAX                 = 0x46
+	SC_STREAM_MAX                   = 0x1a
+	SC_SYMLOOP_MAX                  = 0x4c
+	SC_TIMER_MAX                    = 0x5d
+	SC_TTY_NAME_MAX                 = 0x6b
+	SC_TZNAME_MAX                   = 0x1b
+
+	SC_ADVISORY_INFO              = 0x29
+	SC_ASYNCHRONOUS_IO            = 0x2d
+	SC_BARRIERS                   = 0x2f
+	SC_CLOCK_SELECTION            = 0x30
+	SC_CPUTIME                    = 0x31
+	SC_FSYNC                      = 0x1d
+	SC_IPV6                       = 0x34
+	SC_JOB_CONTROL                = 0x6
+	SC_MAPPED_FILES               = 0x35
+	SC_MEMLOCK                    = 0x36
+	SC_MEMLOCK_RANGE              = 0x37
+	SC_MEMORY_PROTECTION          = 0x38
+	SC_MESSAGE_PASSING            = 0x39
+	SC_MONOTONIC_CLOCK            = 0x22
+	SC_PRIORITIZED_IO             = 0x3c
+	SC_PRIORITY_SCHEDULING        = 0x3d
+	SC_RAW_SOCKETS                = 0x3e
+	SC_READER_WRITER_LOCKS        = 0x3f
+	SC_REALTIME_SIGNALS           = 0x40
+	SC_REGEXP                     = 0x41
+	SC_SAVED_IDS                  = 0x7
+	SC_SEMAPHORES                 = 0x43
+	SC_SHARED_MEMORY_OBJECTS      = 0x44
+	SC_SHELL                      = 0x45
+	SC_SPAWN                      = 0x47
+	SC_SPIN_LOCKS                 = 0x48
+	SC_SPORADIC_SERVER            = 0x49
+	SC_SS_REPL_MAX                = 0x4a
+	SC_SYNCHRONIZED_IO            = 0x4b
+	SC_THREAD_ATTR_STACKADDR      = 0x4d
+	SC_THREAD_ATTR_STACKSIZE      = 0x4e
+	SC_THREAD_CPUTIME             = 0x4f
+	SC_THREAD_PRIO_INHERIT        = 0x52
+	SC_THREAD_PRIO_PROTECT        = 0x53
+	SC_THREAD_PRIORITY_SCHEDULING = 0x54
+	SC_THREAD_PROCESS_SHARED      = 0x55
+	SC_THREAD_ROBUST_PRIO_INHERIT = 0x56
+	SC_THREAD_ROBUST_PRIO_PROTECT = 0x57
+	SC_THREAD_SAFE_FUNCTIONS      = 0x67
+	SC_THREAD_SPORADIC_SERVER     = 0x58
+	SC_THREADS                    = 0x5b
+	SC_TIMEOUTS                   = 0x5c
+	SC_TIMERS                     = 0x5e
+	SC_TRACE                      = 0x5f
+	SC_TRACE_EVENT_FILTER         = 0x60
+	SC_TRACE_EVENT_NAME_MAX       = 0x61
+	SC_TRACE_INHERIT              = 0x62
+	SC_TRACE_LOG                  = 0x63
+	SC_TRACE_NAME_MAX             = 0x68
+	SC_TRACE_SYS_MAX              = 0x69
+	SC_TRACE_USER_EVENT_MAX       = 0x6a
+	SC_TYPED_MEMORY_OBJECTS       = 0x6c
+	SC_VERSION                    = 0x8
+
+	SC_V7_ILP32_OFF32  = 0x71
+	SC_V7_ILP32_OFFBIG = 0x72
+	SC_V7_LP64_OFF64   = 0x73
+	SC_V7_LPBIG_OFFBIG = 0x74
+
+	SC_V6_ILP32_OFF32  = 0x6d
+	SC_V6_ILP32_OFFBIG = 0x6e
+	SC_V6_LP64_OFF64   = 0x6f
+	SC_V6_LPBIG_OFFBIG = 0x70
+
+	SC_2_C_BIND         = 0x12
+	SC_2_C_DEV          = 0x13
+	SC_2_CHAR_TERM      = 0x14
+	SC_2_FORT_DEV       = 0x15
+	SC_2_FORT_RUN       = 0x16
+	SC_2_LOCALEDEF      = 0x17
+	SC_2_PBS            = 0x23
+	SC_2_PBS_ACCOUNTING = 0x24
+	SC_2_PBS_CHECKPOINT = 0x25
+	SC_2_PBS_LOCATE     = 0x26
+	SC_2_PBS_MESSAGE    = 0x27
+	SC_2_PBS_TRACK      = 0x28
+	SC_2_SW_DEV         = 0x18
+	SC_2_UPE            = 0x19
+	SC_2_VERSION        = 0x11
+
+	SC_XOPEN_CRYPT            = 0x75
+	SC_XOPEN_ENH_I18N         = 0x76
+	SC_XOPEN_REALTIME         = 0x78
+	SC_XOPEN_REALTIME_THREADS = 0x79
+	SC_XOPEN_SHM              = 0x1e
+	SC_XOPEN_STREAMS          = 0x7a
+	SC_XOPEN_UNIX             = 0x7b
+	SC_XOPEN_UUCP             = 0x7c
+	SC_XOPEN_VERSION          = 0x7d
+
+	SC_AVPHYS_PAGES     = 0x1f5
+	SC_PHYS_PAGES       = 0x1f4
+	SC_NPROCESSORS_CONF = 0x1f6
+	SC_NPROCESSORS_ONLN = 0x1f7
+)
+
+const (
+	_HOST_NAME_MAX                 = 0xff
+	_IOV_MAX                       = 0x400
+	_LOGIN_NAME_MAX                = 0x20
+	_PTHREAD_DESTRUCTOR_ITERATIONS = 0x4
+	_PTHREAD_KEYS_MAX              = 0x100
+	_PTHREAD_STACK_MIN             = 0x1000
+	_PTHREAD_THREADS_MAX           = 0xffffffffffffffff
+	_SEM_VALUE_MAX                 = 0xffffffff
+	_SYMLOOP_MAX                   = 0x20
+	_TTY_NAME_MAX                  = 0x104
+
+	_GR_BUF_LEN = 0xa40
+	_PW_BUF_LEN = 0x400
+
+	_CLK_TCK = 0x64
+
+	_POSIX_ADVISORY_INFO              = -0x1
+	_POSIX_ARG_MAX                    = 0x1000
+	_POSIX_ASYNCHRONOUS_IO            = -0x1
+	_POSIX_BARRIERS                   = 0x30db0
+	_POSIX_CHILD_MAX                  = 0x19
+	_POSIX_CLOCK_SELECTION            = -0x1
+	_POSIX_CPUTIME                    = 0x31069
+	_POSIX_FSYNC                      = 0x30db0
+	_POSIX_IPV6                       = 0x0
+	_POSIX_JOB_CONTROL                = 0x1
+	_POSIX_MAPPED_FILES               = 0x30db0
+	_POSIX_MEMLOCK                    = 0x30db0
+	_POSIX_MEMLOCK_RANGE              = 0x30db0
+	_POSIX_MEMORY_PROTECTION          = 0x30db0
+	_POSIX_MESSAGE_PASSING            = -0x1
+	_POSIX_MONOTONIC_CLOCK            = 0x30db0
+	_POSIX_PRIORITIZED_IO             = -0x1
+	_POSIX_PRIORITY_SCHEDULING        = -0x1
+	_POSIX_RAW_SOCKETS                = 0x30db0
+	_POSIX_READER_WRITER_LOCKS        = 0x30db0
+	_POSIX_REALTIME_SIGNALS           = -0x1
+	_POSIX_REGEXP                     = 0x1
+	_POSIX_SAVED_IDS                  = 0x1
+	_POSIX_SEMAPHORES                 = 0x30db0
+	_POSIX_SHARED_MEMORY_OBJECTS      = 0x31069
+	_POSIX_SHELL                      = 0x1
+	_POSIX_SPAWN                      = 0x30db0
+	_POSIX_SPIN_LOCKS                 = 0x30db0
+	_POSIX_SPORADIC_SERVER            = -0x1
+	_POSIX_SYNCHRONIZED_IO            = -0x1
+	_POSIX_THREAD_ATTR_STACKADDR      = 0x30db0
+	_POSIX_THREAD_ATTR_STACKSIZE      = 0x30db0
+	_POSIX_THREAD_CPUTIME             = 0x31069
+	_POSIX_THREAD_KEYS_MAX            = 0x80
+	_POSIX_THREAD_PRIO_INHERIT        = -0x1
+	_POSIX_THREAD_PRIO_PROTECT        = -0x1
+	_POSIX_THREAD_PRIORITY_SCHEDULING = -0x1
+	_POSIX_THREAD_PROCESS_SHARED      = -0x1
+	_POSIX_THREAD_ROBUST_PRIO_INHERIT = -0x1
+	_POSIX_THREAD_ROBUST_PRIO_PROTECT = -0x1
+	_POSIX_THREAD_SAFE_FUNCTIONS      = 0x30db0
+	_POSIX_THREAD_SPORADIC_SERVER     = -0x1
+	_POSIX_THREADS                    = 0x30db0
+	_POSIX_TIMERS                     = -0x1
+	_POSIX_TIMEOUTS                   = 0x30db0
+	_POSIX_TRACE                      = -0x1
+	_POSIX_TYPED_MEMORY_OBJECTS       = -0x1
+	_POSIX_VERSION                    = 0x31069
+
+	_POSIX_V7_ILP32_OFF32  = -0x1
+	_POSIX_V7_ILP32_OFFBIG = 0x0
+	_POSIX_V7_LP64_OFF64   = 0x0
+	_POSIX_V7_LPBIG_OFFBIG = 0x0
+
+	_POSIX_V6_ILP32_OFF32  = -0x1
+	_POSIX_V6_ILP32_OFFBIG = 0x0
+	_POSIX_V6_LP64_OFF64   = 0x0
+	_POSIX_V6_LPBIG_OFFBIG = 0x0
+
+	_POSIX2_C_BIND    = 0x30db0
+	_POSIX2_C_DEV     = -0x1
+	_POSIX2_CHAR_TERM = 0x1
+	_POSIX2_LOCALEDEF = -0x1
+	_POSIX2_PBS       = -0x1
+	_POSIX2_SW_DEV    = 0x30db0
+	_POSIX2_UPE       = 0x30db0
+	_POSIX2_VERSION   = 0x31069
+
+	_XOPEN_CRYPT            = 0x1
+	_XOPEN_ENH_I18N         = -0x1
+	_XOPEN_REALTIME         = -0x1
+	_XOPEN_REALTIME_THREADS = -0x1
+	_XOPEN_SHM              = 0x1
+	_XOPEN_STREAMS          = -0x1
+	_XOPEN_UNIX             = -0x1
+	_XOPEN_UUCP             = -0x1
+
+	_FOPEN_MAX  = 0x14
+	_NAME_MAX   = 0xff
+	_RE_DUP_MAX = 0xff
+
+	_BC_BASE_MAX      = 0x7fffffff
+	_BC_DIM_MAX       = 0xffff
+	_BC_SCALE_MAX     = 0x7fffffff
+	_BC_STRING_MAX    = 0x7fffffff
+	_COLL_WEIGHTS_MAX = 0x2
+	_EXPR_NEST_MAX    = 0x20
+	_LINE_MAX         = 0x800
+
+	_SHRT_MAX = 0x7fff
+
+	_PATH_ZONEINFO = "/usr/share/zoneinfo"
+)
+
+const (
+	_CHAR_BIT = 0x8
+
+	_INT_MAX = 0x7fffffff
+
+	sizeofOffT = 0x8
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_defs_solaris.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_solaris.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_solaris.go
new file mode 100644
--- /dev/null	(date 1660734983788)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_solaris.go	(date 1660734983788)
@@ -0,0 +1,139 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_defs_solaris.go
+
+//go:build solaris
+// +build solaris
+
+package sysconf
+
+const (
+	SC_AIO_LISTIO_MAX               = 0x12
+	SC_AIO_MAX                      = 0x13
+	SC_AIO_PRIO_DELTA_MAX           = 0x14
+	SC_ARG_MAX                      = 0x1
+	SC_ATEXIT_MAX                   = 0x4c
+	SC_BC_BASE_MAX                  = 0x36
+	SC_BC_DIM_MAX                   = 0x37
+	SC_BC_SCALE_MAX                 = 0x38
+	SC_BC_STRING_MAX                = 0x39
+	SC_CHILD_MAX                    = 0x2
+	SC_CLK_TCK                      = 0x3
+	SC_COLL_WEIGHTS_MAX             = 0x3a
+	SC_DELAYTIMER_MAX               = 0x16
+	SC_EXPR_NEST_MAX                = 0x3b
+	SC_GETGR_R_SIZE_MAX             = 0x239
+	SC_GETPW_R_SIZE_MAX             = 0x23a
+	SC_HOST_NAME_MAX                = 0x2df
+	SC_IOV_MAX                      = 0x4d
+	SC_LINE_MAX                     = 0x3c
+	SC_LOGIN_NAME_MAX               = 0x23b
+	SC_MQ_OPEN_MAX                  = 0x1d
+	SC_MQ_PRIO_MAX                  = 0x1e
+	SC_NGROUPS_MAX                  = 0x4
+	SC_OPEN_MAX                     = 0x5
+	SC_PAGE_SIZE                    = 0xb
+	SC_PAGESIZE                     = 0xb
+	SC_THREAD_DESTRUCTOR_ITERATIONS = 0x238
+	SC_THREAD_KEYS_MAX              = 0x23c
+	SC_THREAD_STACK_MIN             = 0x23d
+	SC_THREAD_THREADS_MAX           = 0x23e
+	SC_RE_DUP_MAX                   = 0x3d
+	SC_RTSIG_MAX                    = 0x22
+	SC_SEM_NSEMS_MAX                = 0x24
+	SC_SEM_VALUE_MAX                = 0x25
+	SC_SIGQUEUE_MAX                 = 0x27
+	SC_STREAM_MAX                   = 0x10
+	SC_SYMLOOP_MAX                  = 0x2e8
+	SC_TIMER_MAX                    = 0x2c
+	SC_TTY_NAME_MAX                 = 0x23f
+	SC_TZNAME_MAX                   = 0x11
+
+	SC_ADVISORY_INFO              = 0x2db
+	SC_ASYNCHRONOUS_IO            = 0x15
+	SC_BARRIERS                   = 0x2dc
+	SC_CLOCK_SELECTION            = 0x2dd
+	SC_CPUTIME                    = 0x2de
+	SC_FSYNC                      = 0x17
+	SC_IPV6                       = 0x2fa
+	SC_JOB_CONTROL                = 0x6
+	SC_MAPPED_FILES               = 0x18
+	SC_MEMLOCK                    = 0x19
+	SC_MEMLOCK_RANGE              = 0x1a
+	SC_MEMORY_PROTECTION          = 0x1b
+	SC_MESSAGE_PASSING            = 0x1c
+	SC_MONOTONIC_CLOCK            = 0x2e0
+	SC_PRIORITIZED_IO             = 0x1f
+	SC_PRIORITY_SCHEDULING        = 0x20
+	SC_RAW_SOCKETS                = 0x2fb
+	SC_READER_WRITER_LOCKS        = 0x2e1
+	SC_REALTIME_SIGNALS           = 0x21
+	SC_REGEXP                     = 0x2e2
+	SC_SAVED_IDS                  = 0x7
+	SC_SEMAPHORES                 = 0x23
+	SC_SHARED_MEMORY_OBJECTS      = 0x26
+	SC_SHELL                      = 0x2e3
+	SC_SPAWN                      = 0x2e4
+	SC_SPIN_LOCKS                 = 0x2e5
+	SC_SPORADIC_SERVER            = 0x2e6
+	SC_SS_REPL_MAX                = 0x2e7
+	SC_SYNCHRONIZED_IO            = 0x2a
+	SC_THREAD_ATTR_STACKADDR      = 0x241
+	SC_THREAD_ATTR_STACKSIZE      = 0x242
+	SC_THREAD_CPUTIME             = 0x2e9
+	SC_THREAD_PRIO_INHERIT        = 0x244
+	SC_THREAD_PRIO_PROTECT        = 0x245
+	SC_THREAD_PRIORITY_SCHEDULING = 0x243
+	SC_THREAD_PROCESS_SHARED      = 0x246
+	SC_THREAD_SAFE_FUNCTIONS      = 0x247
+	SC_THREAD_SPORADIC_SERVER     = 0x2ea
+	SC_THREADS                    = 0x240
+	SC_TIMEOUTS                   = 0x2eb
+	SC_TIMERS                     = 0x2b
+	SC_TRACE                      = 0x2ec
+	SC_TRACE_EVENT_FILTER         = 0x2ed
+	SC_TRACE_EVENT_NAME_MAX       = 0x2ee
+	SC_TRACE_INHERIT              = 0x2ef
+	SC_TRACE_LOG                  = 0x2f0
+	SC_TRACE_NAME_MAX             = 0x2f1
+	SC_TRACE_SYS_MAX              = 0x2f2
+	SC_TRACE_USER_EVENT_MAX       = 0x2f3
+	SC_TYPED_MEMORY_OBJECTS       = 0x2f4
+	SC_VERSION                    = 0x8
+
+	SC_V6_ILP32_OFF32  = 0x2f5
+	SC_V6_ILP32_OFFBIG = 0x2f6
+	SC_V6_LP64_OFF64   = 0x2f7
+	SC_V6_LPBIG_OFFBIG = 0x2f8
+
+	SC_2_C_BIND         = 0x2d
+	SC_2_C_DEV          = 0x2e
+	SC_2_C_VERSION      = 0x2f
+	SC_2_CHAR_TERM      = 0x42
+	SC_2_FORT_DEV       = 0x30
+	SC_2_FORT_RUN       = 0x31
+	SC_2_LOCALEDEF      = 0x32
+	SC_2_PBS            = 0x2d4
+	SC_2_PBS_ACCOUNTING = 0x2d5
+	SC_2_PBS_CHECKPOINT = 0x2d6
+	SC_2_PBS_LOCATE     = 0x2d8
+	SC_2_PBS_MESSAGE    = 0x2d9
+	SC_2_PBS_TRACK      = 0x2da
+	SC_2_SW_DEV         = 0x33
+	SC_2_UPE            = 0x34
+	SC_2_VERSION        = 0x35
+
+	SC_XOPEN_CRYPT            = 0x3e
+	SC_XOPEN_ENH_I18N         = 0x3f
+	SC_XOPEN_REALTIME         = 0x2ce
+	SC_XOPEN_REALTIME_THREADS = 0x2cf
+	SC_XOPEN_SHM              = 0x40
+	SC_XOPEN_STREAMS          = 0x2f9
+	SC_XOPEN_UNIX             = 0x4e
+	SC_XOPEN_VERSION          = 0xc
+	SC_XOPEN_XCU_VERSION      = 0x43
+
+	SC_PHYS_PAGES       = 0x1f4
+	SC_AVPHYS_PAGES     = 0x1f5
+	SC_NPROCESSORS_CONF = 0xe
+	SC_NPROCESSORS_ONLN = 0xf
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_values_freebsd_386.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_values_freebsd_386.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_freebsd_386.go
new file mode 100644
--- /dev/null	(date 1660734983789)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_freebsd_386.go	(date 1660734983789)
@@ -0,0 +1,12 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_values_freebsd.go
+
+//go:build freebsd && 386
+// +build freebsd,386
+
+package sysconf
+
+const (
+	_LONG_MAX = 0x7fffffff
+	_SHRT_MAX = 0x7fff
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_values_freebsd_amd64.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_values_freebsd_amd64.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_freebsd_amd64.go
new file mode 100644
--- /dev/null	(date 1660734983790)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_freebsd_amd64.go	(date 1660734983790)
@@ -0,0 +1,12 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_values_freebsd.go
+
+//go:build freebsd && amd64
+// +build freebsd,amd64
+
+package sysconf
+
+const (
+	_LONG_MAX = 0x7fffffffffffffff
+	_SHRT_MAX = 0x7fff
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_values_freebsd_arm.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_values_freebsd_arm.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_freebsd_arm.go
new file mode 100644
--- /dev/null	(date 1660734983791)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_freebsd_arm.go	(date 1660734983791)
@@ -0,0 +1,12 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_values_freebsd.go
+
+//go:build freebsd && arm
+// +build freebsd,arm
+
+package sysconf
+
+const (
+	_LONG_MAX = 0x7fffffff
+	_SHRT_MAX = 0x7fff
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_values_freebsd_arm64.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_values_freebsd_arm64.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_freebsd_arm64.go
new file mode 100644
--- /dev/null	(date 1660734983792)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_freebsd_arm64.go	(date 1660734983792)
@@ -0,0 +1,12 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_values_freebsd.go
+
+//go:build freebsd && arm64
+// +build freebsd,arm64
+
+package sysconf
+
+const (
+	_LONG_MAX = 0x7fffffffffffffff
+	_SHRT_MAX = 0x7fff
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_386.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_386.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_386.go
new file mode 100644
--- /dev/null	(date 1660734983793)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_386.go	(date 1660734983793)
@@ -0,0 +1,114 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_values_linux.go
+
+//go:build linux && 386
+// +build linux,386
+
+package sysconf
+
+const (
+	_AIO_PRIO_DELTA_MAX = 0x14
+	_BC_BASE_MAX        = 0x63
+	_BC_DIM_MAX         = 0x800
+	_BC_SCALE_MAX       = 0x63
+	_BC_STRING_MAX      = 0x3e8
+	_COLL_WEIGHTS_MAX   = 0xff
+	_DELAYTIMER_MAX     = 0x7fffffff
+	_EXPR_NEST_MAX      = 0x20
+	_HOST_NAME_MAX      = 0x40
+	_LINE_MAX           = 0x800
+	_LOGIN_NAME_MAX     = 0x100
+	_MQ_PRIO_MAX        = 0x8000
+	_NGROUPS_MAX        = 0x10000
+	_NSS_BUFLEN_GROUP   = 0x400
+	_NSS_BUFLEN_PASSWD  = 0x400
+	_OPEN_MAX           = 0x100
+	_PTHREAD_KEYS_MAX   = 0x400
+	_PTHREAD_STACK_MIN  = 0x4000
+	_RE_DUP_MAX         = 0x7fff
+	_RTSIG_MAX          = 0x20
+	_SEM_VALUE_MAX      = 0x7fffffff
+	_STREAM_MAX         = 0x10
+	_SYMLOOP_MAX        = -0x1
+	_TTY_NAME_MAX       = 0x20
+
+	_UIO_MAXIOV = 0x400
+
+	_INT_MAX = 0x7fffffff
+
+	_POSIX_ADVISORY_INFO                = 0x31069
+	_POSIX_ARG_MAX                      = 0x1000
+	_POSIX_ASYNCHRONOUS_IO              = 0x31069
+	_POSIX_BARRIERS                     = 0x31069
+	_POSIX_CHILD_MAX                    = 0x19
+	_POSIX_CLOCK_SELECTION              = 0x31069
+	_POSIX_CPUTIME                      = 0x0
+	_POSIX_FSYNC                        = 0x31069
+	_POSIX_IPV6                         = 0x31069
+	_POSIX_JOB_CONTROL                  = 0x1
+	_POSIX_MAPPED_FILES                 = 0x31069
+	_POSIX_MEMLOCK                      = 0x31069
+	_POSIX_MEMLOCK_RANGE                = 0x31069
+	_POSIX_MEMORY_PROTECTION            = 0x31069
+	_POSIX_MESSAGE_PASSING              = 0x31069
+	_POSIX_MONOTONIC_CLOCK              = 0x0
+	_POSIX_PRIORITIZED_IO               = 0x31069
+	_POSIX_PRIORITY_SCHEDULING          = 0x31069
+	_POSIX_RAW_SOCKETS                  = 0x31069
+	_POSIX_READER_WRITER_LOCKS          = 0x31069
+	_POSIX_REALTIME_SIGNALS             = 0x31069
+	_POSIX_REGEXP                       = 0x1
+	_POSIX_SAVED_IDS                    = 0x1
+	_POSIX_SEMAPHORES                   = 0x31069
+	_POSIX_SHARED_MEMORY_OBJECTS        = 0x31069
+	_POSIX_SHELL                        = 0x1
+	_POSIX_SIGQUEUE_MAX                 = 0x20
+	_POSIX_SPAWN                        = 0x31069
+	_POSIX_SPIN_LOCKS                   = 0x31069
+	_POSIX_SPORADIC_SERVER              = -0x1
+	_POSIX_SYNCHRONIZED_IO              = 0x31069
+	_POSIX_THREAD_ATTR_STACKADDR        = 0x31069
+	_POSIX_THREAD_ATTR_STACKSIZE        = 0x31069
+	_POSIX_THREAD_DESTRUCTOR_ITERATIONS = 0x4
+	_POSIX_THREAD_PRIO_INHERIT          = 0x31069
+	_POSIX_THREAD_PRIO_PROTECT          = 0x31069
+	_POSIX_THREAD_PRIORITY_SCHEDULING   = 0x31069
+	_POSIX_THREAD_PROCESS_SHARED        = 0x31069
+	_POSIX_THREAD_SAFE_FUNCTIONS        = 0x31069
+	_POSIX_THREAD_SPORADIC_SERVER       = -0x1
+	_POSIX_THREADS                      = 0x31069
+	_POSIX_TIMEOUTS                     = 0x31069
+	_POSIX_TIMERS                       = 0x31069
+	_POSIX_TRACE                        = -0x1
+	_POSIX_TRACE_EVENT_FILTER           = -0x1
+	_POSIX_TRACE_INHERIT                = -0x1
+	_POSIX_TRACE_LOG                    = -0x1
+	_POSIX_TYPED_MEMORY_OBJECTS         = -0x1
+	_POSIX_VERSION                      = 0x31069
+
+	_POSIX_V7_ILP32_OFF32  = 0x1
+	_POSIX_V7_ILP32_OFFBIG = 0x1
+	_POSIX_V7_LP64_OFF64   = -0x1
+	_POSIX_V7_LPBIG_OFFBIG = -0x1
+
+	_POSIX_V6_ILP32_OFF32  = 0x1
+	_POSIX_V6_ILP32_OFFBIG = 0x1
+	_POSIX_V6_LP64_OFF64   = -0x1
+	_POSIX_V6_LPBIG_OFFBIG = -0x1
+
+	_POSIX2_C_BIND    = 0x31069
+	_POSIX2_C_DEV     = 0x31069
+	_POSIX2_C_VERSION = 0x31069
+	_POSIX2_CHAR_TERM = 0x31069
+	_POSIX2_LOCALEDEF = 0x31069
+	_POSIX2_SW_DEV    = 0x31069
+	_POSIX2_VERSION   = 0x31069
+
+	_XOPEN_ENH_I18N         = 0x1
+	_XOPEN_REALTIME         = 0x1
+	_XOPEN_REALTIME_THREADS = 0x1
+	_XOPEN_SHM              = 0x1
+	_XOPEN_UNIX             = 0x1
+	_XOPEN_VERSION          = 0x2bc
+	_XOPEN_XCU_VERSION      = 0x4
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_amd64.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_amd64.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_amd64.go
new file mode 100644
--- /dev/null	(date 1660734983794)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_amd64.go	(date 1660734983794)
@@ -0,0 +1,114 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_values_linux.go
+
+//go:build linux && amd64
+// +build linux,amd64
+
+package sysconf
+
+const (
+	_AIO_PRIO_DELTA_MAX = 0x14
+	_BC_BASE_MAX        = 0x63
+	_BC_DIM_MAX         = 0x800
+	_BC_SCALE_MAX       = 0x63
+	_BC_STRING_MAX      = 0x3e8
+	_COLL_WEIGHTS_MAX   = 0xff
+	_DELAYTIMER_MAX     = 0x7fffffff
+	_EXPR_NEST_MAX      = 0x20
+	_HOST_NAME_MAX      = 0x40
+	_LINE_MAX           = 0x800
+	_LOGIN_NAME_MAX     = 0x100
+	_MQ_PRIO_MAX        = 0x8000
+	_NGROUPS_MAX        = 0x10000
+	_NSS_BUFLEN_GROUP   = 0x400
+	_NSS_BUFLEN_PASSWD  = 0x400
+	_OPEN_MAX           = 0x100
+	_PTHREAD_KEYS_MAX   = 0x400
+	_PTHREAD_STACK_MIN  = 0x4000
+	_RE_DUP_MAX         = 0x7fff
+	_RTSIG_MAX          = 0x20
+	_SEM_VALUE_MAX      = 0x7fffffff
+	_STREAM_MAX         = 0x10
+	_SYMLOOP_MAX        = -0x1
+	_TTY_NAME_MAX       = 0x20
+
+	_UIO_MAXIOV = 0x400
+
+	_INT_MAX = 0x7fffffff
+
+	_POSIX_ADVISORY_INFO                = 0x31069
+	_POSIX_ARG_MAX                      = 0x1000
+	_POSIX_ASYNCHRONOUS_IO              = 0x31069
+	_POSIX_BARRIERS                     = 0x31069
+	_POSIX_CHILD_MAX                    = 0x19
+	_POSIX_CLOCK_SELECTION              = 0x31069
+	_POSIX_CPUTIME                      = 0x0
+	_POSIX_FSYNC                        = 0x31069
+	_POSIX_IPV6                         = 0x31069
+	_POSIX_JOB_CONTROL                  = 0x1
+	_POSIX_MAPPED_FILES                 = 0x31069
+	_POSIX_MEMLOCK                      = 0x31069
+	_POSIX_MEMLOCK_RANGE                = 0x31069
+	_POSIX_MEMORY_PROTECTION            = 0x31069
+	_POSIX_MESSAGE_PASSING              = 0x31069
+	_POSIX_MONOTONIC_CLOCK              = 0x0
+	_POSIX_PRIORITIZED_IO               = 0x31069
+	_POSIX_PRIORITY_SCHEDULING          = 0x31069
+	_POSIX_RAW_SOCKETS                  = 0x31069
+	_POSIX_READER_WRITER_LOCKS          = 0x31069
+	_POSIX_REALTIME_SIGNALS             = 0x31069
+	_POSIX_REGEXP                       = 0x1
+	_POSIX_SAVED_IDS                    = 0x1
+	_POSIX_SEMAPHORES                   = 0x31069
+	_POSIX_SHARED_MEMORY_OBJECTS        = 0x31069
+	_POSIX_SHELL                        = 0x1
+	_POSIX_SIGQUEUE_MAX                 = 0x20
+	_POSIX_SPAWN                        = 0x31069
+	_POSIX_SPIN_LOCKS                   = 0x31069
+	_POSIX_SPORADIC_SERVER              = -0x1
+	_POSIX_SYNCHRONIZED_IO              = 0x31069
+	_POSIX_THREAD_ATTR_STACKADDR        = 0x31069
+	_POSIX_THREAD_ATTR_STACKSIZE        = 0x31069
+	_POSIX_THREAD_DESTRUCTOR_ITERATIONS = 0x4
+	_POSIX_THREAD_PRIO_INHERIT          = 0x31069
+	_POSIX_THREAD_PRIO_PROTECT          = 0x31069
+	_POSIX_THREAD_PRIORITY_SCHEDULING   = 0x31069
+	_POSIX_THREAD_PROCESS_SHARED        = 0x31069
+	_POSIX_THREAD_SAFE_FUNCTIONS        = 0x31069
+	_POSIX_THREAD_SPORADIC_SERVER       = -0x1
+	_POSIX_THREADS                      = 0x31069
+	_POSIX_TIMEOUTS                     = 0x31069
+	_POSIX_TIMERS                       = 0x31069
+	_POSIX_TRACE                        = -0x1
+	_POSIX_TRACE_EVENT_FILTER           = -0x1
+	_POSIX_TRACE_INHERIT                = -0x1
+	_POSIX_TRACE_LOG                    = -0x1
+	_POSIX_TYPED_MEMORY_OBJECTS         = -0x1
+	_POSIX_VERSION                      = 0x31069
+
+	_POSIX_V7_ILP32_OFF32  = -0x1
+	_POSIX_V7_ILP32_OFFBIG = -0x1
+	_POSIX_V7_LP64_OFF64   = 0x1
+	_POSIX_V7_LPBIG_OFFBIG = -0x1
+
+	_POSIX_V6_ILP32_OFF32  = -0x1
+	_POSIX_V6_ILP32_OFFBIG = -0x1
+	_POSIX_V6_LP64_OFF64   = 0x1
+	_POSIX_V6_LPBIG_OFFBIG = -0x1
+
+	_POSIX2_C_BIND    = 0x31069
+	_POSIX2_C_DEV     = 0x31069
+	_POSIX2_C_VERSION = 0x31069
+	_POSIX2_CHAR_TERM = 0x31069
+	_POSIX2_LOCALEDEF = 0x31069
+	_POSIX2_SW_DEV    = 0x31069
+	_POSIX2_VERSION   = 0x31069
+
+	_XOPEN_ENH_I18N         = 0x1
+	_XOPEN_REALTIME         = 0x1
+	_XOPEN_REALTIME_THREADS = 0x1
+	_XOPEN_SHM              = 0x1
+	_XOPEN_UNIX             = 0x1
+	_XOPEN_VERSION          = 0x2bc
+	_XOPEN_XCU_VERSION      = 0x4
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_arm.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_arm.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_arm.go
new file mode 100644
--- /dev/null	(date 1660734983794)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_arm.go	(date 1660734983794)
@@ -0,0 +1,114 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_values_linux.go
+
+//go:build linux && arm
+// +build linux,arm
+
+package sysconf
+
+const (
+	_AIO_PRIO_DELTA_MAX = 0x14
+	_BC_BASE_MAX        = 0x63
+	_BC_DIM_MAX         = 0x800
+	_BC_SCALE_MAX       = 0x63
+	_BC_STRING_MAX      = 0x3e8
+	_COLL_WEIGHTS_MAX   = 0xff
+	_DELAYTIMER_MAX     = 0x7fffffff
+	_EXPR_NEST_MAX      = 0x20
+	_HOST_NAME_MAX      = 0x40
+	_LINE_MAX           = 0x800
+	_LOGIN_NAME_MAX     = 0x100
+	_MQ_PRIO_MAX        = 0x8000
+	_NGROUPS_MAX        = 0x10000
+	_NSS_BUFLEN_GROUP   = 0x400
+	_NSS_BUFLEN_PASSWD  = 0x400
+	_OPEN_MAX           = 0x100
+	_PTHREAD_KEYS_MAX   = 0x400
+	_PTHREAD_STACK_MIN  = 0x4000
+	_RE_DUP_MAX         = 0x7fff
+	_RTSIG_MAX          = 0x20
+	_SEM_VALUE_MAX      = 0x7fffffff
+	_STREAM_MAX         = 0x10
+	_SYMLOOP_MAX        = -0x1
+	_TTY_NAME_MAX       = 0x20
+
+	_UIO_MAXIOV = 0x400
+
+	_INT_MAX = 0x7fffffff
+
+	_POSIX_ADVISORY_INFO                = 0x31069
+	_POSIX_ARG_MAX                      = 0x1000
+	_POSIX_ASYNCHRONOUS_IO              = 0x31069
+	_POSIX_BARRIERS                     = 0x31069
+	_POSIX_CHILD_MAX                    = 0x19
+	_POSIX_CLOCK_SELECTION              = 0x31069
+	_POSIX_CPUTIME                      = 0x0
+	_POSIX_FSYNC                        = 0x31069
+	_POSIX_IPV6                         = 0x31069
+	_POSIX_JOB_CONTROL                  = 0x1
+	_POSIX_MAPPED_FILES                 = 0x31069
+	_POSIX_MEMLOCK                      = 0x31069
+	_POSIX_MEMLOCK_RANGE                = 0x31069
+	_POSIX_MEMORY_PROTECTION            = 0x31069
+	_POSIX_MESSAGE_PASSING              = 0x31069
+	_POSIX_MONOTONIC_CLOCK              = 0x0
+	_POSIX_PRIORITIZED_IO               = 0x31069
+	_POSIX_PRIORITY_SCHEDULING          = 0x31069
+	_POSIX_RAW_SOCKETS                  = 0x31069
+	_POSIX_READER_WRITER_LOCKS          = 0x31069
+	_POSIX_REALTIME_SIGNALS             = 0x31069
+	_POSIX_REGEXP                       = 0x1
+	_POSIX_SAVED_IDS                    = 0x1
+	_POSIX_SEMAPHORES                   = 0x31069
+	_POSIX_SHARED_MEMORY_OBJECTS        = 0x31069
+	_POSIX_SHELL                        = 0x1
+	_POSIX_SIGQUEUE_MAX                 = 0x20
+	_POSIX_SPAWN                        = 0x31069
+	_POSIX_SPIN_LOCKS                   = 0x31069
+	_POSIX_SPORADIC_SERVER              = -0x1
+	_POSIX_SYNCHRONIZED_IO              = 0x31069
+	_POSIX_THREAD_ATTR_STACKADDR        = 0x31069
+	_POSIX_THREAD_ATTR_STACKSIZE        = 0x31069
+	_POSIX_THREAD_DESTRUCTOR_ITERATIONS = 0x4
+	_POSIX_THREAD_PRIO_INHERIT          = 0x31069
+	_POSIX_THREAD_PRIO_PROTECT          = 0x31069
+	_POSIX_THREAD_PRIORITY_SCHEDULING   = 0x31069
+	_POSIX_THREAD_PROCESS_SHARED        = 0x31069
+	_POSIX_THREAD_SAFE_FUNCTIONS        = 0x31069
+	_POSIX_THREAD_SPORADIC_SERVER       = -0x1
+	_POSIX_THREADS                      = 0x31069
+	_POSIX_TIMEOUTS                     = 0x31069
+	_POSIX_TIMERS                       = 0x31069
+	_POSIX_TRACE                        = -0x1
+	_POSIX_TRACE_EVENT_FILTER           = -0x1
+	_POSIX_TRACE_INHERIT                = -0x1
+	_POSIX_TRACE_LOG                    = -0x1
+	_POSIX_TYPED_MEMORY_OBJECTS         = -0x1
+	_POSIX_VERSION                      = 0x31069
+
+	_POSIX_V7_ILP32_OFF32  = 0x1
+	_POSIX_V7_ILP32_OFFBIG = 0x1
+	_POSIX_V7_LP64_OFF64   = -0x1
+	_POSIX_V7_LPBIG_OFFBIG = -0x1
+
+	_POSIX_V6_ILP32_OFF32  = 0x1
+	_POSIX_V6_ILP32_OFFBIG = 0x1
+	_POSIX_V6_LP64_OFF64   = -0x1
+	_POSIX_V6_LPBIG_OFFBIG = -0x1
+
+	_POSIX2_C_BIND    = 0x31069
+	_POSIX2_C_DEV     = 0x31069
+	_POSIX2_C_VERSION = 0x31069
+	_POSIX2_CHAR_TERM = 0x31069
+	_POSIX2_LOCALEDEF = 0x31069
+	_POSIX2_SW_DEV    = 0x31069
+	_POSIX2_VERSION   = 0x31069
+
+	_XOPEN_ENH_I18N         = 0x1
+	_XOPEN_REALTIME         = 0x1
+	_XOPEN_REALTIME_THREADS = 0x1
+	_XOPEN_SHM              = 0x1
+	_XOPEN_UNIX             = 0x1
+	_XOPEN_VERSION          = 0x2bc
+	_XOPEN_XCU_VERSION      = 0x4
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_arm64.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_arm64.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_arm64.go
new file mode 100644
--- /dev/null	(date 1660734983795)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_arm64.go	(date 1660734983795)
@@ -0,0 +1,114 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_values_linux.go
+
+//go:build linux && arm64
+// +build linux,arm64
+
+package sysconf
+
+const (
+	_AIO_PRIO_DELTA_MAX = 0x14
+	_BC_BASE_MAX        = 0x63
+	_BC_DIM_MAX         = 0x800
+	_BC_SCALE_MAX       = 0x63
+	_BC_STRING_MAX      = 0x3e8
+	_COLL_WEIGHTS_MAX   = 0xff
+	_DELAYTIMER_MAX     = 0x7fffffff
+	_EXPR_NEST_MAX      = 0x20
+	_HOST_NAME_MAX      = 0x40
+	_LINE_MAX           = 0x800
+	_LOGIN_NAME_MAX     = 0x100
+	_MQ_PRIO_MAX        = 0x8000
+	_NGROUPS_MAX        = 0x10000
+	_NSS_BUFLEN_GROUP   = 0x400
+	_NSS_BUFLEN_PASSWD  = 0x400
+	_OPEN_MAX           = 0x100
+	_PTHREAD_KEYS_MAX   = 0x400
+	_PTHREAD_STACK_MIN  = 0x20000
+	_RE_DUP_MAX         = 0x7fff
+	_RTSIG_MAX          = 0x20
+	_SEM_VALUE_MAX      = 0x7fffffff
+	_STREAM_MAX         = 0x10
+	_SYMLOOP_MAX        = -0x1
+	_TTY_NAME_MAX       = 0x20
+
+	_UIO_MAXIOV = 0x400
+
+	_INT_MAX = 0x7fffffff
+
+	_POSIX_ADVISORY_INFO                = 0x31069
+	_POSIX_ARG_MAX                      = 0x1000
+	_POSIX_ASYNCHRONOUS_IO              = 0x31069
+	_POSIX_BARRIERS                     = 0x31069
+	_POSIX_CHILD_MAX                    = 0x19
+	_POSIX_CLOCK_SELECTION              = 0x31069
+	_POSIX_CPUTIME                      = 0x0
+	_POSIX_FSYNC                        = 0x31069
+	_POSIX_IPV6                         = 0x31069
+	_POSIX_JOB_CONTROL                  = 0x1
+	_POSIX_MAPPED_FILES                 = 0x31069
+	_POSIX_MEMLOCK                      = 0x31069
+	_POSIX_MEMLOCK_RANGE                = 0x31069
+	_POSIX_MEMORY_PROTECTION            = 0x31069
+	_POSIX_MESSAGE_PASSING              = 0x31069
+	_POSIX_MONOTONIC_CLOCK              = 0x0
+	_POSIX_PRIORITIZED_IO               = 0x31069
+	_POSIX_PRIORITY_SCHEDULING          = 0x31069
+	_POSIX_RAW_SOCKETS                  = 0x31069
+	_POSIX_READER_WRITER_LOCKS          = 0x31069
+	_POSIX_REALTIME_SIGNALS             = 0x31069
+	_POSIX_REGEXP                       = 0x1
+	_POSIX_SAVED_IDS                    = 0x1
+	_POSIX_SEMAPHORES                   = 0x31069
+	_POSIX_SHARED_MEMORY_OBJECTS        = 0x31069
+	_POSIX_SHELL                        = 0x1
+	_POSIX_SIGQUEUE_MAX                 = 0x20
+	_POSIX_SPAWN                        = 0x31069
+	_POSIX_SPIN_LOCKS                   = 0x31069
+	_POSIX_SPORADIC_SERVER              = -0x1
+	_POSIX_SYNCHRONIZED_IO              = 0x31069
+	_POSIX_THREAD_ATTR_STACKADDR        = 0x31069
+	_POSIX_THREAD_ATTR_STACKSIZE        = 0x31069
+	_POSIX_THREAD_DESTRUCTOR_ITERATIONS = 0x4
+	_POSIX_THREAD_PRIO_INHERIT          = 0x31069
+	_POSIX_THREAD_PRIO_PROTECT          = 0x31069
+	_POSIX_THREAD_PRIORITY_SCHEDULING   = 0x31069
+	_POSIX_THREAD_PROCESS_SHARED        = 0x31069
+	_POSIX_THREAD_SAFE_FUNCTIONS        = 0x31069
+	_POSIX_THREAD_SPORADIC_SERVER       = -0x1
+	_POSIX_THREADS                      = 0x31069
+	_POSIX_TIMEOUTS                     = 0x31069
+	_POSIX_TIMERS                       = 0x31069
+	_POSIX_TRACE                        = -0x1
+	_POSIX_TRACE_EVENT_FILTER           = -0x1
+	_POSIX_TRACE_INHERIT                = -0x1
+	_POSIX_TRACE_LOG                    = -0x1
+	_POSIX_TYPED_MEMORY_OBJECTS         = -0x1
+	_POSIX_VERSION                      = 0x31069
+
+	_POSIX_V7_ILP32_OFF32  = -0x1
+	_POSIX_V7_ILP32_OFFBIG = -0x1
+	_POSIX_V7_LP64_OFF64   = 0x1
+	_POSIX_V7_LPBIG_OFFBIG = -0x1
+
+	_POSIX_V6_ILP32_OFF32  = -0x1
+	_POSIX_V6_ILP32_OFFBIG = -0x1
+	_POSIX_V6_LP64_OFF64   = 0x1
+	_POSIX_V6_LPBIG_OFFBIG = -0x1
+
+	_POSIX2_C_BIND    = 0x31069
+	_POSIX2_C_DEV     = 0x31069
+	_POSIX2_C_VERSION = 0x31069
+	_POSIX2_CHAR_TERM = 0x31069
+	_POSIX2_LOCALEDEF = 0x31069
+	_POSIX2_SW_DEV    = 0x31069
+	_POSIX2_VERSION   = 0x31069
+
+	_XOPEN_ENH_I18N         = 0x1
+	_XOPEN_REALTIME         = 0x1
+	_XOPEN_REALTIME_THREADS = 0x1
+	_XOPEN_SHM              = 0x1
+	_XOPEN_UNIX             = 0x1
+	_XOPEN_VERSION          = 0x2bc
+	_XOPEN_XCU_VERSION      = 0x4
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_loong64.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_loong64.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_loong64.go
new file mode 100644
--- /dev/null	(date 1660734983796)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_loong64.go	(date 1660734983796)
@@ -0,0 +1,114 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_values_linux.go
+
+//go:build linux && loong64
+// +build linux,loong64
+
+package sysconf
+
+const (
+	_AIO_PRIO_DELTA_MAX = 0x14
+	_BC_BASE_MAX        = 0x63
+	_BC_DIM_MAX         = 0x800
+	_BC_SCALE_MAX       = 0x63
+	_BC_STRING_MAX      = 0x3e8
+	_COLL_WEIGHTS_MAX   = 0xff
+	_DELAYTIMER_MAX     = 0x7fffffff
+	_EXPR_NEST_MAX      = 0x20
+	_HOST_NAME_MAX      = 0x40
+	_LINE_MAX           = 0x800
+	_LOGIN_NAME_MAX     = 0x100
+	_MQ_PRIO_MAX        = 0x8000
+	_NGROUPS_MAX        = 0x10000
+	_NSS_BUFLEN_GROUP   = 0x400
+	_NSS_BUFLEN_PASSWD  = 0x400
+	_OPEN_MAX           = 0x100
+	_PTHREAD_KEYS_MAX   = 0x400
+	_PTHREAD_STACK_MIN  = 0x20000
+	_RE_DUP_MAX         = 0x7fff
+	_RTSIG_MAX          = 0x20
+	_SEM_VALUE_MAX      = 0x7fffffff
+	_STREAM_MAX         = 0x10
+	_SYMLOOP_MAX        = -0x1
+	_TTY_NAME_MAX       = 0x20
+
+	_UIO_MAXIOV = 0x400
+
+	_INT_MAX = 0x7fffffff
+
+	_POSIX_ADVISORY_INFO                = 0x31069
+	_POSIX_ARG_MAX                      = 0x1000
+	_POSIX_ASYNCHRONOUS_IO              = 0x31069
+	_POSIX_BARRIERS                     = 0x31069
+	_POSIX_CHILD_MAX                    = 0x19
+	_POSIX_CLOCK_SELECTION              = 0x31069
+	_POSIX_CPUTIME                      = 0x0
+	_POSIX_FSYNC                        = 0x31069
+	_POSIX_IPV6                         = 0x31069
+	_POSIX_JOB_CONTROL                  = 0x1
+	_POSIX_MAPPED_FILES                 = 0x31069
+	_POSIX_MEMLOCK                      = 0x31069
+	_POSIX_MEMLOCK_RANGE                = 0x31069
+	_POSIX_MEMORY_PROTECTION            = 0x31069
+	_POSIX_MESSAGE_PASSING              = 0x31069
+	_POSIX_MONOTONIC_CLOCK              = 0x0
+	_POSIX_PRIORITIZED_IO               = 0x31069
+	_POSIX_PRIORITY_SCHEDULING          = 0x31069
+	_POSIX_RAW_SOCKETS                  = 0x31069
+	_POSIX_READER_WRITER_LOCKS          = 0x31069
+	_POSIX_REALTIME_SIGNALS             = 0x31069
+	_POSIX_REGEXP                       = 0x1
+	_POSIX_SAVED_IDS                    = 0x1
+	_POSIX_SEMAPHORES                   = 0x31069
+	_POSIX_SHARED_MEMORY_OBJECTS        = 0x31069
+	_POSIX_SHELL                        = 0x1
+	_POSIX_SIGQUEUE_MAX                 = 0x20
+	_POSIX_SPAWN                        = 0x31069
+	_POSIX_SPIN_LOCKS                   = 0x31069
+	_POSIX_SPORADIC_SERVER              = -0x1
+	_POSIX_SYNCHRONIZED_IO              = 0x31069
+	_POSIX_THREAD_ATTR_STACKADDR        = 0x31069
+	_POSIX_THREAD_ATTR_STACKSIZE        = 0x31069
+	_POSIX_THREAD_DESTRUCTOR_ITERATIONS = 0x4
+	_POSIX_THREAD_PRIO_INHERIT          = 0x31069
+	_POSIX_THREAD_PRIO_PROTECT          = 0x31069
+	_POSIX_THREAD_PRIORITY_SCHEDULING   = 0x31069
+	_POSIX_THREAD_PROCESS_SHARED        = 0x31069
+	_POSIX_THREAD_SAFE_FUNCTIONS        = 0x31069
+	_POSIX_THREAD_SPORADIC_SERVER       = -0x1
+	_POSIX_THREADS                      = 0x31069
+	_POSIX_TIMEOUTS                     = 0x31069
+	_POSIX_TIMERS                       = 0x31069
+	_POSIX_TRACE                        = -0x1
+	_POSIX_TRACE_EVENT_FILTER           = -0x1
+	_POSIX_TRACE_INHERIT                = -0x1
+	_POSIX_TRACE_LOG                    = -0x1
+	_POSIX_TYPED_MEMORY_OBJECTS         = -0x1
+	_POSIX_VERSION                      = 0x31069
+
+	_POSIX_V7_ILP32_OFF32  = -0x1
+	_POSIX_V7_ILP32_OFFBIG = -0x1
+	_POSIX_V7_LP64_OFF64   = 0x1
+	_POSIX_V7_LPBIG_OFFBIG = -0x1
+
+	_POSIX_V6_ILP32_OFF32  = -0x1
+	_POSIX_V6_ILP32_OFFBIG = -0x1
+	_POSIX_V6_LP64_OFF64   = 0x1
+	_POSIX_V6_LPBIG_OFFBIG = -0x1
+
+	_POSIX2_C_BIND    = 0x31069
+	_POSIX2_C_DEV     = 0x31069
+	_POSIX2_C_VERSION = 0x31069
+	_POSIX2_CHAR_TERM = 0x31069
+	_POSIX2_LOCALEDEF = 0x31069
+	_POSIX2_SW_DEV    = 0x31069
+	_POSIX2_VERSION   = 0x31069
+
+	_XOPEN_ENH_I18N         = 0x1
+	_XOPEN_REALTIME         = 0x1
+	_XOPEN_REALTIME_THREADS = 0x1
+	_XOPEN_SHM              = 0x1
+	_XOPEN_UNIX             = 0x1
+	_XOPEN_VERSION          = 0x2bc
+	_XOPEN_XCU_VERSION      = 0x4
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_mips.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_mips.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_mips.go
new file mode 100644
--- /dev/null	(date 1660734983797)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_mips.go	(date 1660734983797)
@@ -0,0 +1,114 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_values_linux.go
+
+//go:build linux && mips
+// +build linux,mips
+
+package sysconf
+
+const (
+	_AIO_PRIO_DELTA_MAX = 0x14
+	_BC_BASE_MAX        = 0x63
+	_BC_DIM_MAX         = 0x800
+	_BC_SCALE_MAX       = 0x63
+	_BC_STRING_MAX      = 0x3e8
+	_COLL_WEIGHTS_MAX   = 0xff
+	_DELAYTIMER_MAX     = 0x7fffffff
+	_EXPR_NEST_MAX      = 0x20
+	_HOST_NAME_MAX      = 0x40
+	_LINE_MAX           = 0x800
+	_LOGIN_NAME_MAX     = 0x100
+	_MQ_PRIO_MAX        = 0x8000
+	_NGROUPS_MAX        = 0x10000
+	_NSS_BUFLEN_GROUP   = 0x400
+	_NSS_BUFLEN_PASSWD  = 0x400
+	_OPEN_MAX           = 0x100
+	_PTHREAD_KEYS_MAX   = 0x400
+	_PTHREAD_STACK_MIN  = 0x20000
+	_RE_DUP_MAX         = 0x7fff
+	_RTSIG_MAX          = 0x20
+	_SEM_VALUE_MAX      = 0x7fffffff
+	_STREAM_MAX         = 0x10
+	_SYMLOOP_MAX        = -0x1
+	_TTY_NAME_MAX       = 0x20
+
+	_UIO_MAXIOV = 0x400
+
+	_INT_MAX = 0x7fffffff
+
+	_POSIX_ADVISORY_INFO                = 0x31069
+	_POSIX_ARG_MAX                      = 0x1000
+	_POSIX_ASYNCHRONOUS_IO              = 0x31069
+	_POSIX_BARRIERS                     = 0x31069
+	_POSIX_CHILD_MAX                    = 0x19
+	_POSIX_CLOCK_SELECTION              = 0x31069
+	_POSIX_CPUTIME                      = 0x0
+	_POSIX_FSYNC                        = 0x31069
+	_POSIX_IPV6                         = 0x31069
+	_POSIX_JOB_CONTROL                  = 0x1
+	_POSIX_MAPPED_FILES                 = 0x31069
+	_POSIX_MEMLOCK                      = 0x31069
+	_POSIX_MEMLOCK_RANGE                = 0x31069
+	_POSIX_MEMORY_PROTECTION            = 0x31069
+	_POSIX_MESSAGE_PASSING              = 0x31069
+	_POSIX_MONOTONIC_CLOCK              = 0x0
+	_POSIX_PRIORITIZED_IO               = 0x31069
+	_POSIX_PRIORITY_SCHEDULING          = 0x31069
+	_POSIX_RAW_SOCKETS                  = 0x31069
+	_POSIX_READER_WRITER_LOCKS          = 0x31069
+	_POSIX_REALTIME_SIGNALS             = 0x31069
+	_POSIX_REGEXP                       = 0x1
+	_POSIX_SAVED_IDS                    = 0x1
+	_POSIX_SEMAPHORES                   = 0x31069
+	_POSIX_SHARED_MEMORY_OBJECTS        = 0x31069
+	_POSIX_SHELL                        = 0x1
+	_POSIX_SIGQUEUE_MAX                 = 0x20
+	_POSIX_SPAWN                        = 0x31069
+	_POSIX_SPIN_LOCKS                   = 0x31069
+	_POSIX_SPORADIC_SERVER              = -0x1
+	_POSIX_SYNCHRONIZED_IO              = 0x31069
+	_POSIX_THREAD_ATTR_STACKADDR        = 0x31069
+	_POSIX_THREAD_ATTR_STACKSIZE        = 0x31069
+	_POSIX_THREAD_DESTRUCTOR_ITERATIONS = 0x4
+	_POSIX_THREAD_PRIO_INHERIT          = 0x31069
+	_POSIX_THREAD_PRIO_PROTECT          = 0x31069
+	_POSIX_THREAD_PRIORITY_SCHEDULING   = 0x31069
+	_POSIX_THREAD_PROCESS_SHARED        = 0x31069
+	_POSIX_THREAD_SAFE_FUNCTIONS        = 0x31069
+	_POSIX_THREAD_SPORADIC_SERVER       = -0x1
+	_POSIX_THREADS                      = 0x31069
+	_POSIX_TIMEOUTS                     = 0x31069
+	_POSIX_TIMERS                       = 0x31069
+	_POSIX_TRACE                        = -0x1
+	_POSIX_TRACE_EVENT_FILTER           = -0x1
+	_POSIX_TRACE_INHERIT                = -0x1
+	_POSIX_TRACE_LOG                    = -0x1
+	_POSIX_TYPED_MEMORY_OBJECTS         = -0x1
+	_POSIX_VERSION                      = 0x31069
+
+	_POSIX_V7_ILP32_OFF32  = 0x1
+	_POSIX_V7_ILP32_OFFBIG = 0x1
+	_POSIX_V7_LP64_OFF64   = -0x1
+	_POSIX_V7_LPBIG_OFFBIG = -0x1
+
+	_POSIX_V6_ILP32_OFF32  = 0x1
+	_POSIX_V6_ILP32_OFFBIG = 0x1
+	_POSIX_V6_LP64_OFF64   = -0x1
+	_POSIX_V6_LPBIG_OFFBIG = -0x1
+
+	_POSIX2_C_BIND    = 0x31069
+	_POSIX2_C_DEV     = 0x31069
+	_POSIX2_C_VERSION = 0x31069
+	_POSIX2_CHAR_TERM = 0x31069
+	_POSIX2_LOCALEDEF = 0x31069
+	_POSIX2_SW_DEV    = 0x31069
+	_POSIX2_VERSION   = 0x31069
+
+	_XOPEN_ENH_I18N         = 0x1
+	_XOPEN_REALTIME         = 0x1
+	_XOPEN_REALTIME_THREADS = 0x1
+	_XOPEN_SHM              = 0x1
+	_XOPEN_UNIX             = 0x1
+	_XOPEN_VERSION          = 0x2bc
+	_XOPEN_XCU_VERSION      = 0x4
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_mips64.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_mips64.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_mips64.go
new file mode 100644
--- /dev/null	(date 1660734983798)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_mips64.go	(date 1660734983798)
@@ -0,0 +1,114 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_values_linux.go
+
+//go:build linux && mips64
+// +build linux,mips64
+
+package sysconf
+
+const (
+	_AIO_PRIO_DELTA_MAX = 0x14
+	_BC_BASE_MAX        = 0x63
+	_BC_DIM_MAX         = 0x800
+	_BC_SCALE_MAX       = 0x63
+	_BC_STRING_MAX      = 0x3e8
+	_COLL_WEIGHTS_MAX   = 0xff
+	_DELAYTIMER_MAX     = 0x7fffffff
+	_EXPR_NEST_MAX      = 0x20
+	_HOST_NAME_MAX      = 0x40
+	_LINE_MAX           = 0x800
+	_LOGIN_NAME_MAX     = 0x100
+	_MQ_PRIO_MAX        = 0x8000
+	_NGROUPS_MAX        = 0x10000
+	_NSS_BUFLEN_GROUP   = 0x400
+	_NSS_BUFLEN_PASSWD  = 0x400
+	_OPEN_MAX           = 0x100
+	_PTHREAD_KEYS_MAX   = 0x400
+	_PTHREAD_STACK_MIN  = 0x20000
+	_RE_DUP_MAX         = 0x7fff
+	_RTSIG_MAX          = 0x20
+	_SEM_VALUE_MAX      = 0x7fffffff
+	_STREAM_MAX         = 0x10
+	_SYMLOOP_MAX        = -0x1
+	_TTY_NAME_MAX       = 0x20
+
+	_UIO_MAXIOV = 0x400
+
+	_INT_MAX = 0x7fffffff
+
+	_POSIX_ADVISORY_INFO                = 0x31069
+	_POSIX_ARG_MAX                      = 0x1000
+	_POSIX_ASYNCHRONOUS_IO              = 0x31069
+	_POSIX_BARRIERS                     = 0x31069
+	_POSIX_CHILD_MAX                    = 0x19
+	_POSIX_CLOCK_SELECTION              = 0x31069
+	_POSIX_CPUTIME                      = 0x0
+	_POSIX_FSYNC                        = 0x31069
+	_POSIX_IPV6                         = 0x31069
+	_POSIX_JOB_CONTROL                  = 0x1
+	_POSIX_MAPPED_FILES                 = 0x31069
+	_POSIX_MEMLOCK                      = 0x31069
+	_POSIX_MEMLOCK_RANGE                = 0x31069
+	_POSIX_MEMORY_PROTECTION            = 0x31069
+	_POSIX_MESSAGE_PASSING              = 0x31069
+	_POSIX_MONOTONIC_CLOCK              = 0x0
+	_POSIX_PRIORITIZED_IO               = 0x31069
+	_POSIX_PRIORITY_SCHEDULING          = 0x31069
+	_POSIX_RAW_SOCKETS                  = 0x31069
+	_POSIX_READER_WRITER_LOCKS          = 0x31069
+	_POSIX_REALTIME_SIGNALS             = 0x31069
+	_POSIX_REGEXP                       = 0x1
+	_POSIX_SAVED_IDS                    = 0x1
+	_POSIX_SEMAPHORES                   = 0x31069
+	_POSIX_SHARED_MEMORY_OBJECTS        = 0x31069
+	_POSIX_SHELL                        = 0x1
+	_POSIX_SIGQUEUE_MAX                 = 0x20
+	_POSIX_SPAWN                        = 0x31069
+	_POSIX_SPIN_LOCKS                   = 0x31069
+	_POSIX_SPORADIC_SERVER              = -0x1
+	_POSIX_SYNCHRONIZED_IO              = 0x31069
+	_POSIX_THREAD_ATTR_STACKADDR        = 0x31069
+	_POSIX_THREAD_ATTR_STACKSIZE        = 0x31069
+	_POSIX_THREAD_DESTRUCTOR_ITERATIONS = 0x4
+	_POSIX_THREAD_PRIO_INHERIT          = 0x31069
+	_POSIX_THREAD_PRIO_PROTECT          = 0x31069
+	_POSIX_THREAD_PRIORITY_SCHEDULING   = 0x31069
+	_POSIX_THREAD_PROCESS_SHARED        = 0x31069
+	_POSIX_THREAD_SAFE_FUNCTIONS        = 0x31069
+	_POSIX_THREAD_SPORADIC_SERVER       = -0x1
+	_POSIX_THREADS                      = 0x31069
+	_POSIX_TIMEOUTS                     = 0x31069
+	_POSIX_TIMERS                       = 0x31069
+	_POSIX_TRACE                        = -0x1
+	_POSIX_TRACE_EVENT_FILTER           = -0x1
+	_POSIX_TRACE_INHERIT                = -0x1
+	_POSIX_TRACE_LOG                    = -0x1
+	_POSIX_TYPED_MEMORY_OBJECTS         = -0x1
+	_POSIX_VERSION                      = 0x31069
+
+	_POSIX_V7_ILP32_OFF32  = -0x1
+	_POSIX_V7_ILP32_OFFBIG = -0x1
+	_POSIX_V7_LP64_OFF64   = 0x1
+	_POSIX_V7_LPBIG_OFFBIG = -0x1
+
+	_POSIX_V6_ILP32_OFF32  = -0x1
+	_POSIX_V6_ILP32_OFFBIG = -0x1
+	_POSIX_V6_LP64_OFF64   = 0x1
+	_POSIX_V6_LPBIG_OFFBIG = -0x1
+
+	_POSIX2_C_BIND    = 0x31069
+	_POSIX2_C_DEV     = 0x31069
+	_POSIX2_C_VERSION = 0x31069
+	_POSIX2_CHAR_TERM = 0x31069
+	_POSIX2_LOCALEDEF = 0x31069
+	_POSIX2_SW_DEV    = 0x31069
+	_POSIX2_VERSION   = 0x31069
+
+	_XOPEN_ENH_I18N         = 0x1
+	_XOPEN_REALTIME         = 0x1
+	_XOPEN_REALTIME_THREADS = 0x1
+	_XOPEN_SHM              = 0x1
+	_XOPEN_UNIX             = 0x1
+	_XOPEN_VERSION          = 0x2bc
+	_XOPEN_XCU_VERSION      = 0x4
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_mips64le.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_mips64le.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_mips64le.go
new file mode 100644
--- /dev/null	(date 1660734983799)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_mips64le.go	(date 1660734983799)
@@ -0,0 +1,114 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_values_linux.go
+
+//go:build linux && mips64le
+// +build linux,mips64le
+
+package sysconf
+
+const (
+	_AIO_PRIO_DELTA_MAX = 0x14
+	_BC_BASE_MAX        = 0x63
+	_BC_DIM_MAX         = 0x800
+	_BC_SCALE_MAX       = 0x63
+	_BC_STRING_MAX      = 0x3e8
+	_COLL_WEIGHTS_MAX   = 0xff
+	_DELAYTIMER_MAX     = 0x7fffffff
+	_EXPR_NEST_MAX      = 0x20
+	_HOST_NAME_MAX      = 0x40
+	_LINE_MAX           = 0x800
+	_LOGIN_NAME_MAX     = 0x100
+	_MQ_PRIO_MAX        = 0x8000
+	_NGROUPS_MAX        = 0x10000
+	_NSS_BUFLEN_GROUP   = 0x400
+	_NSS_BUFLEN_PASSWD  = 0x400
+	_OPEN_MAX           = 0x100
+	_PTHREAD_KEYS_MAX   = 0x400
+	_PTHREAD_STACK_MIN  = 0x20000
+	_RE_DUP_MAX         = 0x7fff
+	_RTSIG_MAX          = 0x20
+	_SEM_VALUE_MAX      = 0x7fffffff
+	_STREAM_MAX         = 0x10
+	_SYMLOOP_MAX        = -0x1
+	_TTY_NAME_MAX       = 0x20
+
+	_UIO_MAXIOV = 0x400
+
+	_INT_MAX = 0x7fffffff
+
+	_POSIX_ADVISORY_INFO                = 0x31069
+	_POSIX_ARG_MAX                      = 0x1000
+	_POSIX_ASYNCHRONOUS_IO              = 0x31069
+	_POSIX_BARRIERS                     = 0x31069
+	_POSIX_CHILD_MAX                    = 0x19
+	_POSIX_CLOCK_SELECTION              = 0x31069
+	_POSIX_CPUTIME                      = 0x0
+	_POSIX_FSYNC                        = 0x31069
+	_POSIX_IPV6                         = 0x31069
+	_POSIX_JOB_CONTROL                  = 0x1
+	_POSIX_MAPPED_FILES                 = 0x31069
+	_POSIX_MEMLOCK                      = 0x31069
+	_POSIX_MEMLOCK_RANGE                = 0x31069
+	_POSIX_MEMORY_PROTECTION            = 0x31069
+	_POSIX_MESSAGE_PASSING              = 0x31069
+	_POSIX_MONOTONIC_CLOCK              = 0x0
+	_POSIX_PRIORITIZED_IO               = 0x31069
+	_POSIX_PRIORITY_SCHEDULING          = 0x31069
+	_POSIX_RAW_SOCKETS                  = 0x31069
+	_POSIX_READER_WRITER_LOCKS          = 0x31069
+	_POSIX_REALTIME_SIGNALS             = 0x31069
+	_POSIX_REGEXP                       = 0x1
+	_POSIX_SAVED_IDS                    = 0x1
+	_POSIX_SEMAPHORES                   = 0x31069
+	_POSIX_SHARED_MEMORY_OBJECTS        = 0x31069
+	_POSIX_SHELL                        = 0x1
+	_POSIX_SIGQUEUE_MAX                 = 0x20
+	_POSIX_SPAWN                        = 0x31069
+	_POSIX_SPIN_LOCKS                   = 0x31069
+	_POSIX_SPORADIC_SERVER              = -0x1
+	_POSIX_SYNCHRONIZED_IO              = 0x31069
+	_POSIX_THREAD_ATTR_STACKADDR        = 0x31069
+	_POSIX_THREAD_ATTR_STACKSIZE        = 0x31069
+	_POSIX_THREAD_DESTRUCTOR_ITERATIONS = 0x4
+	_POSIX_THREAD_PRIO_INHERIT          = 0x31069
+	_POSIX_THREAD_PRIO_PROTECT          = 0x31069
+	_POSIX_THREAD_PRIORITY_SCHEDULING   = 0x31069
+	_POSIX_THREAD_PROCESS_SHARED        = 0x31069
+	_POSIX_THREAD_SAFE_FUNCTIONS        = 0x31069
+	_POSIX_THREAD_SPORADIC_SERVER       = -0x1
+	_POSIX_THREADS                      = 0x31069
+	_POSIX_TIMEOUTS                     = 0x31069
+	_POSIX_TIMERS                       = 0x31069
+	_POSIX_TRACE                        = -0x1
+	_POSIX_TRACE_EVENT_FILTER           = -0x1
+	_POSIX_TRACE_INHERIT                = -0x1
+	_POSIX_TRACE_LOG                    = -0x1
+	_POSIX_TYPED_MEMORY_OBJECTS         = -0x1
+	_POSIX_VERSION                      = 0x31069
+
+	_POSIX_V7_ILP32_OFF32  = -0x1
+	_POSIX_V7_ILP32_OFFBIG = -0x1
+	_POSIX_V7_LP64_OFF64   = 0x1
+	_POSIX_V7_LPBIG_OFFBIG = -0x1
+
+	_POSIX_V6_ILP32_OFF32  = -0x1
+	_POSIX_V6_ILP32_OFFBIG = -0x1
+	_POSIX_V6_LP64_OFF64   = 0x1
+	_POSIX_V6_LPBIG_OFFBIG = -0x1
+
+	_POSIX2_C_BIND    = 0x31069
+	_POSIX2_C_DEV     = 0x31069
+	_POSIX2_C_VERSION = 0x31069
+	_POSIX2_CHAR_TERM = 0x31069
+	_POSIX2_LOCALEDEF = 0x31069
+	_POSIX2_SW_DEV    = 0x31069
+	_POSIX2_VERSION   = 0x31069
+
+	_XOPEN_ENH_I18N         = 0x1
+	_XOPEN_REALTIME         = 0x1
+	_XOPEN_REALTIME_THREADS = 0x1
+	_XOPEN_SHM              = 0x1
+	_XOPEN_UNIX             = 0x1
+	_XOPEN_VERSION          = 0x2bc
+	_XOPEN_XCU_VERSION      = 0x4
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_mipsle.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_mipsle.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_mipsle.go
new file mode 100644
--- /dev/null	(date 1660734983800)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_mipsle.go	(date 1660734983800)
@@ -0,0 +1,114 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_values_linux.go
+
+//go:build linux && mipsle
+// +build linux,mipsle
+
+package sysconf
+
+const (
+	_AIO_PRIO_DELTA_MAX = 0x14
+	_BC_BASE_MAX        = 0x63
+	_BC_DIM_MAX         = 0x800
+	_BC_SCALE_MAX       = 0x63
+	_BC_STRING_MAX      = 0x3e8
+	_COLL_WEIGHTS_MAX   = 0xff
+	_DELAYTIMER_MAX     = 0x7fffffff
+	_EXPR_NEST_MAX      = 0x20
+	_HOST_NAME_MAX      = 0x40
+	_LINE_MAX           = 0x800
+	_LOGIN_NAME_MAX     = 0x100
+	_MQ_PRIO_MAX        = 0x8000
+	_NGROUPS_MAX        = 0x10000
+	_NSS_BUFLEN_GROUP   = 0x400
+	_NSS_BUFLEN_PASSWD  = 0x400
+	_OPEN_MAX           = 0x100
+	_PTHREAD_KEYS_MAX   = 0x400
+	_PTHREAD_STACK_MIN  = 0x20000
+	_RE_DUP_MAX         = 0x7fff
+	_RTSIG_MAX          = 0x20
+	_SEM_VALUE_MAX      = 0x7fffffff
+	_STREAM_MAX         = 0x10
+	_SYMLOOP_MAX        = -0x1
+	_TTY_NAME_MAX       = 0x20
+
+	_UIO_MAXIOV = 0x400
+
+	_INT_MAX = 0x7fffffff
+
+	_POSIX_ADVISORY_INFO                = 0x31069
+	_POSIX_ARG_MAX                      = 0x1000
+	_POSIX_ASYNCHRONOUS_IO              = 0x31069
+	_POSIX_BARRIERS                     = 0x31069
+	_POSIX_CHILD_MAX                    = 0x19
+	_POSIX_CLOCK_SELECTION              = 0x31069
+	_POSIX_CPUTIME                      = 0x0
+	_POSIX_FSYNC                        = 0x31069
+	_POSIX_IPV6                         = 0x31069
+	_POSIX_JOB_CONTROL                  = 0x1
+	_POSIX_MAPPED_FILES                 = 0x31069
+	_POSIX_MEMLOCK                      = 0x31069
+	_POSIX_MEMLOCK_RANGE                = 0x31069
+	_POSIX_MEMORY_PROTECTION            = 0x31069
+	_POSIX_MESSAGE_PASSING              = 0x31069
+	_POSIX_MONOTONIC_CLOCK              = 0x0
+	_POSIX_PRIORITIZED_IO               = 0x31069
+	_POSIX_PRIORITY_SCHEDULING          = 0x31069
+	_POSIX_RAW_SOCKETS                  = 0x31069
+	_POSIX_READER_WRITER_LOCKS          = 0x31069
+	_POSIX_REALTIME_SIGNALS             = 0x31069
+	_POSIX_REGEXP                       = 0x1
+	_POSIX_SAVED_IDS                    = 0x1
+	_POSIX_SEMAPHORES                   = 0x31069
+	_POSIX_SHARED_MEMORY_OBJECTS        = 0x31069
+	_POSIX_SHELL                        = 0x1
+	_POSIX_SIGQUEUE_MAX                 = 0x20
+	_POSIX_SPAWN                        = 0x31069
+	_POSIX_SPIN_LOCKS                   = 0x31069
+	_POSIX_SPORADIC_SERVER              = -0x1
+	_POSIX_SYNCHRONIZED_IO              = 0x31069
+	_POSIX_THREAD_ATTR_STACKADDR        = 0x31069
+	_POSIX_THREAD_ATTR_STACKSIZE        = 0x31069
+	_POSIX_THREAD_DESTRUCTOR_ITERATIONS = 0x4
+	_POSIX_THREAD_PRIO_INHERIT          = 0x31069
+	_POSIX_THREAD_PRIO_PROTECT          = 0x31069
+	_POSIX_THREAD_PRIORITY_SCHEDULING   = 0x31069
+	_POSIX_THREAD_PROCESS_SHARED        = 0x31069
+	_POSIX_THREAD_SAFE_FUNCTIONS        = 0x31069
+	_POSIX_THREAD_SPORADIC_SERVER       = -0x1
+	_POSIX_THREADS                      = 0x31069
+	_POSIX_TIMEOUTS                     = 0x31069
+	_POSIX_TIMERS                       = 0x31069
+	_POSIX_TRACE                        = -0x1
+	_POSIX_TRACE_EVENT_FILTER           = -0x1
+	_POSIX_TRACE_INHERIT                = -0x1
+	_POSIX_TRACE_LOG                    = -0x1
+	_POSIX_TYPED_MEMORY_OBJECTS         = -0x1
+	_POSIX_VERSION                      = 0x31069
+
+	_POSIX_V7_ILP32_OFF32  = 0x1
+	_POSIX_V7_ILP32_OFFBIG = 0x1
+	_POSIX_V7_LP64_OFF64   = -0x1
+	_POSIX_V7_LPBIG_OFFBIG = -0x1
+
+	_POSIX_V6_ILP32_OFF32  = 0x1
+	_POSIX_V6_ILP32_OFFBIG = 0x1
+	_POSIX_V6_LP64_OFF64   = -0x1
+	_POSIX_V6_LPBIG_OFFBIG = -0x1
+
+	_POSIX2_C_BIND    = 0x31069
+	_POSIX2_C_DEV     = 0x31069
+	_POSIX2_C_VERSION = 0x31069
+	_POSIX2_CHAR_TERM = 0x31069
+	_POSIX2_LOCALEDEF = 0x31069
+	_POSIX2_SW_DEV    = 0x31069
+	_POSIX2_VERSION   = 0x31069
+
+	_XOPEN_ENH_I18N         = 0x1
+	_XOPEN_REALTIME         = 0x1
+	_XOPEN_REALTIME_THREADS = 0x1
+	_XOPEN_SHM              = 0x1
+	_XOPEN_UNIX             = 0x1
+	_XOPEN_VERSION          = 0x2bc
+	_XOPEN_XCU_VERSION      = 0x4
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_ppc64.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_ppc64.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_ppc64.go
new file mode 100644
--- /dev/null	(date 1660734983801)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_ppc64.go	(date 1660734983801)
@@ -0,0 +1,114 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_values_linux.go
+
+//go:build linux && ppc64
+// +build linux,ppc64
+
+package sysconf
+
+const (
+	_AIO_PRIO_DELTA_MAX = 0x14
+	_BC_BASE_MAX        = 0x63
+	_BC_DIM_MAX         = 0x800
+	_BC_SCALE_MAX       = 0x63
+	_BC_STRING_MAX      = 0x3e8
+	_COLL_WEIGHTS_MAX   = 0xff
+	_DELAYTIMER_MAX     = 0x7fffffff
+	_EXPR_NEST_MAX      = 0x20
+	_HOST_NAME_MAX      = 0x40
+	_LINE_MAX           = 0x800
+	_LOGIN_NAME_MAX     = 0x100
+	_MQ_PRIO_MAX        = 0x8000
+	_NGROUPS_MAX        = 0x10000
+	_NSS_BUFLEN_GROUP   = 0x400
+	_NSS_BUFLEN_PASSWD  = 0x400
+	_OPEN_MAX           = 0x100
+	_PTHREAD_KEYS_MAX   = 0x400
+	_PTHREAD_STACK_MIN  = 0x20000
+	_RE_DUP_MAX         = 0x7fff
+	_RTSIG_MAX          = 0x20
+	_SEM_VALUE_MAX      = 0x7fffffff
+	_STREAM_MAX         = 0x10
+	_SYMLOOP_MAX        = -0x1
+	_TTY_NAME_MAX       = 0x20
+
+	_UIO_MAXIOV = 0x400
+
+	_INT_MAX = 0x7fffffff
+
+	_POSIX_ADVISORY_INFO                = 0x31069
+	_POSIX_ARG_MAX                      = 0x1000
+	_POSIX_ASYNCHRONOUS_IO              = 0x31069
+	_POSIX_BARRIERS                     = 0x31069
+	_POSIX_CHILD_MAX                    = 0x19
+	_POSIX_CLOCK_SELECTION              = 0x31069
+	_POSIX_CPUTIME                      = 0x0
+	_POSIX_FSYNC                        = 0x31069
+	_POSIX_IPV6                         = 0x31069
+	_POSIX_JOB_CONTROL                  = 0x1
+	_POSIX_MAPPED_FILES                 = 0x31069
+	_POSIX_MEMLOCK                      = 0x31069
+	_POSIX_MEMLOCK_RANGE                = 0x31069
+	_POSIX_MEMORY_PROTECTION            = 0x31069
+	_POSIX_MESSAGE_PASSING              = 0x31069
+	_POSIX_MONOTONIC_CLOCK              = 0x0
+	_POSIX_PRIORITIZED_IO               = 0x31069
+	_POSIX_PRIORITY_SCHEDULING          = 0x31069
+	_POSIX_RAW_SOCKETS                  = 0x31069
+	_POSIX_READER_WRITER_LOCKS          = 0x31069
+	_POSIX_REALTIME_SIGNALS             = 0x31069
+	_POSIX_REGEXP                       = 0x1
+	_POSIX_SAVED_IDS                    = 0x1
+	_POSIX_SEMAPHORES                   = 0x31069
+	_POSIX_SHARED_MEMORY_OBJECTS        = 0x31069
+	_POSIX_SHELL                        = 0x1
+	_POSIX_SIGQUEUE_MAX                 = 0x20
+	_POSIX_SPAWN                        = 0x31069
+	_POSIX_SPIN_LOCKS                   = 0x31069
+	_POSIX_SPORADIC_SERVER              = -0x1
+	_POSIX_SYNCHRONIZED_IO              = 0x31069
+	_POSIX_THREAD_ATTR_STACKADDR        = 0x31069
+	_POSIX_THREAD_ATTR_STACKSIZE        = 0x31069
+	_POSIX_THREAD_DESTRUCTOR_ITERATIONS = 0x4
+	_POSIX_THREAD_PRIO_INHERIT          = 0x31069
+	_POSIX_THREAD_PRIO_PROTECT          = 0x31069
+	_POSIX_THREAD_PRIORITY_SCHEDULING   = 0x31069
+	_POSIX_THREAD_PROCESS_SHARED        = 0x31069
+	_POSIX_THREAD_SAFE_FUNCTIONS        = 0x31069
+	_POSIX_THREAD_SPORADIC_SERVER       = -0x1
+	_POSIX_THREADS                      = 0x31069
+	_POSIX_TIMEOUTS                     = 0x31069
+	_POSIX_TIMERS                       = 0x31069
+	_POSIX_TRACE                        = -0x1
+	_POSIX_TRACE_EVENT_FILTER           = -0x1
+	_POSIX_TRACE_INHERIT                = -0x1
+	_POSIX_TRACE_LOG                    = -0x1
+	_POSIX_TYPED_MEMORY_OBJECTS         = -0x1
+	_POSIX_VERSION                      = 0x31069
+
+	_POSIX_V7_ILP32_OFF32  = -0x1
+	_POSIX_V7_ILP32_OFFBIG = -0x1
+	_POSIX_V7_LP64_OFF64   = 0x1
+	_POSIX_V7_LPBIG_OFFBIG = -0x1
+
+	_POSIX_V6_ILP32_OFF32  = -0x1
+	_POSIX_V6_ILP32_OFFBIG = -0x1
+	_POSIX_V6_LP64_OFF64   = 0x1
+	_POSIX_V6_LPBIG_OFFBIG = -0x1
+
+	_POSIX2_C_BIND    = 0x31069
+	_POSIX2_C_DEV     = 0x31069
+	_POSIX2_C_VERSION = 0x31069
+	_POSIX2_CHAR_TERM = 0x31069
+	_POSIX2_LOCALEDEF = 0x31069
+	_POSIX2_SW_DEV    = 0x31069
+	_POSIX2_VERSION   = 0x31069
+
+	_XOPEN_ENH_I18N         = 0x1
+	_XOPEN_REALTIME         = 0x1
+	_XOPEN_REALTIME_THREADS = 0x1
+	_XOPEN_SHM              = 0x1
+	_XOPEN_UNIX             = 0x1
+	_XOPEN_VERSION          = 0x2bc
+	_XOPEN_XCU_VERSION      = 0x4
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_ppc64le.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_ppc64le.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_ppc64le.go
new file mode 100644
--- /dev/null	(date 1660734983801)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_ppc64le.go	(date 1660734983801)
@@ -0,0 +1,114 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_values_linux.go
+
+//go:build linux && ppc64le
+// +build linux,ppc64le
+
+package sysconf
+
+const (
+	_AIO_PRIO_DELTA_MAX = 0x14
+	_BC_BASE_MAX        = 0x63
+	_BC_DIM_MAX         = 0x800
+	_BC_SCALE_MAX       = 0x63
+	_BC_STRING_MAX      = 0x3e8
+	_COLL_WEIGHTS_MAX   = 0xff
+	_DELAYTIMER_MAX     = 0x7fffffff
+	_EXPR_NEST_MAX      = 0x20
+	_HOST_NAME_MAX      = 0x40
+	_LINE_MAX           = 0x800
+	_LOGIN_NAME_MAX     = 0x100
+	_MQ_PRIO_MAX        = 0x8000
+	_NGROUPS_MAX        = 0x10000
+	_NSS_BUFLEN_GROUP   = 0x400
+	_NSS_BUFLEN_PASSWD  = 0x400
+	_OPEN_MAX           = 0x100
+	_PTHREAD_KEYS_MAX   = 0x400
+	_PTHREAD_STACK_MIN  = 0x20000
+	_RE_DUP_MAX         = 0x7fff
+	_RTSIG_MAX          = 0x20
+	_SEM_VALUE_MAX      = 0x7fffffff
+	_STREAM_MAX         = 0x10
+	_SYMLOOP_MAX        = -0x1
+	_TTY_NAME_MAX       = 0x20
+
+	_UIO_MAXIOV = 0x400
+
+	_INT_MAX = 0x7fffffff
+
+	_POSIX_ADVISORY_INFO                = 0x31069
+	_POSIX_ARG_MAX                      = 0x1000
+	_POSIX_ASYNCHRONOUS_IO              = 0x31069
+	_POSIX_BARRIERS                     = 0x31069
+	_POSIX_CHILD_MAX                    = 0x19
+	_POSIX_CLOCK_SELECTION              = 0x31069
+	_POSIX_CPUTIME                      = 0x0
+	_POSIX_FSYNC                        = 0x31069
+	_POSIX_IPV6                         = 0x31069
+	_POSIX_JOB_CONTROL                  = 0x1
+	_POSIX_MAPPED_FILES                 = 0x31069
+	_POSIX_MEMLOCK                      = 0x31069
+	_POSIX_MEMLOCK_RANGE                = 0x31069
+	_POSIX_MEMORY_PROTECTION            = 0x31069
+	_POSIX_MESSAGE_PASSING              = 0x31069
+	_POSIX_MONOTONIC_CLOCK              = 0x0
+	_POSIX_PRIORITIZED_IO               = 0x31069
+	_POSIX_PRIORITY_SCHEDULING          = 0x31069
+	_POSIX_RAW_SOCKETS                  = 0x31069
+	_POSIX_READER_WRITER_LOCKS          = 0x31069
+	_POSIX_REALTIME_SIGNALS             = 0x31069
+	_POSIX_REGEXP                       = 0x1
+	_POSIX_SAVED_IDS                    = 0x1
+	_POSIX_SEMAPHORES                   = 0x31069
+	_POSIX_SHARED_MEMORY_OBJECTS        = 0x31069
+	_POSIX_SHELL                        = 0x1
+	_POSIX_SIGQUEUE_MAX                 = 0x20
+	_POSIX_SPAWN                        = 0x31069
+	_POSIX_SPIN_LOCKS                   = 0x31069
+	_POSIX_SPORADIC_SERVER              = -0x1
+	_POSIX_SYNCHRONIZED_IO              = 0x31069
+	_POSIX_THREAD_ATTR_STACKADDR        = 0x31069
+	_POSIX_THREAD_ATTR_STACKSIZE        = 0x31069
+	_POSIX_THREAD_DESTRUCTOR_ITERATIONS = 0x4
+	_POSIX_THREAD_PRIO_INHERIT          = 0x31069
+	_POSIX_THREAD_PRIO_PROTECT          = 0x31069
+	_POSIX_THREAD_PRIORITY_SCHEDULING   = 0x31069
+	_POSIX_THREAD_PROCESS_SHARED        = 0x31069
+	_POSIX_THREAD_SAFE_FUNCTIONS        = 0x31069
+	_POSIX_THREAD_SPORADIC_SERVER       = -0x1
+	_POSIX_THREADS                      = 0x31069
+	_POSIX_TIMEOUTS                     = 0x31069
+	_POSIX_TIMERS                       = 0x31069
+	_POSIX_TRACE                        = -0x1
+	_POSIX_TRACE_EVENT_FILTER           = -0x1
+	_POSIX_TRACE_INHERIT                = -0x1
+	_POSIX_TRACE_LOG                    = -0x1
+	_POSIX_TYPED_MEMORY_OBJECTS         = -0x1
+	_POSIX_VERSION                      = 0x31069
+
+	_POSIX_V7_ILP32_OFF32  = -0x1
+	_POSIX_V7_ILP32_OFFBIG = -0x1
+	_POSIX_V7_LP64_OFF64   = 0x1
+	_POSIX_V7_LPBIG_OFFBIG = -0x1
+
+	_POSIX_V6_ILP32_OFF32  = -0x1
+	_POSIX_V6_ILP32_OFFBIG = -0x1
+	_POSIX_V6_LP64_OFF64   = 0x1
+	_POSIX_V6_LPBIG_OFFBIG = -0x1
+
+	_POSIX2_C_BIND    = 0x31069
+	_POSIX2_C_DEV     = 0x31069
+	_POSIX2_C_VERSION = 0x31069
+	_POSIX2_CHAR_TERM = 0x31069
+	_POSIX2_LOCALEDEF = 0x31069
+	_POSIX2_SW_DEV    = 0x31069
+	_POSIX2_VERSION   = 0x31069
+
+	_XOPEN_ENH_I18N         = 0x1
+	_XOPEN_REALTIME         = 0x1
+	_XOPEN_REALTIME_THREADS = 0x1
+	_XOPEN_SHM              = 0x1
+	_XOPEN_UNIX             = 0x1
+	_XOPEN_VERSION          = 0x2bc
+	_XOPEN_XCU_VERSION      = 0x4
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_riscv64.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_riscv64.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_riscv64.go
new file mode 100644
--- /dev/null	(date 1660734983802)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_riscv64.go	(date 1660734983802)
@@ -0,0 +1,114 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_values_linux.go
+
+//go:build linux && riscv64
+// +build linux,riscv64
+
+package sysconf
+
+const (
+	_AIO_PRIO_DELTA_MAX = 0x14
+	_BC_BASE_MAX        = 0x63
+	_BC_DIM_MAX         = 0x800
+	_BC_SCALE_MAX       = 0x63
+	_BC_STRING_MAX      = 0x3e8
+	_COLL_WEIGHTS_MAX   = 0xff
+	_DELAYTIMER_MAX     = 0x7fffffff
+	_EXPR_NEST_MAX      = 0x20
+	_HOST_NAME_MAX      = 0x40
+	_LINE_MAX           = 0x800
+	_LOGIN_NAME_MAX     = 0x100
+	_MQ_PRIO_MAX        = 0x8000
+	_NGROUPS_MAX        = 0x10000
+	_NSS_BUFLEN_GROUP   = 0x400
+	_NSS_BUFLEN_PASSWD  = 0x400
+	_OPEN_MAX           = 0x100
+	_PTHREAD_KEYS_MAX   = 0x400
+	_PTHREAD_STACK_MIN  = 0x4000
+	_RE_DUP_MAX         = 0x7fff
+	_RTSIG_MAX          = 0x20
+	_SEM_VALUE_MAX      = 0x7fffffff
+	_STREAM_MAX         = 0x10
+	_SYMLOOP_MAX        = -0x1
+	_TTY_NAME_MAX       = 0x20
+
+	_UIO_MAXIOV = 0x400
+
+	_INT_MAX = 0x7fffffff
+
+	_POSIX_ADVISORY_INFO                = 0x31069
+	_POSIX_ARG_MAX                      = 0x1000
+	_POSIX_ASYNCHRONOUS_IO              = 0x31069
+	_POSIX_BARRIERS                     = 0x31069
+	_POSIX_CHILD_MAX                    = 0x19
+	_POSIX_CLOCK_SELECTION              = 0x31069
+	_POSIX_CPUTIME                      = 0x0
+	_POSIX_FSYNC                        = 0x31069
+	_POSIX_IPV6                         = 0x31069
+	_POSIX_JOB_CONTROL                  = 0x1
+	_POSIX_MAPPED_FILES                 = 0x31069
+	_POSIX_MEMLOCK                      = 0x31069
+	_POSIX_MEMLOCK_RANGE                = 0x31069
+	_POSIX_MEMORY_PROTECTION            = 0x31069
+	_POSIX_MESSAGE_PASSING              = 0x31069
+	_POSIX_MONOTONIC_CLOCK              = 0x0
+	_POSIX_PRIORITIZED_IO               = 0x31069
+	_POSIX_PRIORITY_SCHEDULING          = 0x31069
+	_POSIX_RAW_SOCKETS                  = 0x31069
+	_POSIX_READER_WRITER_LOCKS          = 0x31069
+	_POSIX_REALTIME_SIGNALS             = 0x31069
+	_POSIX_REGEXP                       = 0x1
+	_POSIX_SAVED_IDS                    = 0x1
+	_POSIX_SEMAPHORES                   = 0x31069
+	_POSIX_SHARED_MEMORY_OBJECTS        = 0x31069
+	_POSIX_SHELL                        = 0x1
+	_POSIX_SIGQUEUE_MAX                 = 0x20
+	_POSIX_SPAWN                        = 0x31069
+	_POSIX_SPIN_LOCKS                   = 0x31069
+	_POSIX_SPORADIC_SERVER              = -0x1
+	_POSIX_SYNCHRONIZED_IO              = 0x31069
+	_POSIX_THREAD_ATTR_STACKADDR        = 0x31069
+	_POSIX_THREAD_ATTR_STACKSIZE        = 0x31069
+	_POSIX_THREAD_DESTRUCTOR_ITERATIONS = 0x4
+	_POSIX_THREAD_PRIO_INHERIT          = 0x31069
+	_POSIX_THREAD_PRIO_PROTECT          = 0x31069
+	_POSIX_THREAD_PRIORITY_SCHEDULING   = 0x31069
+	_POSIX_THREAD_PROCESS_SHARED        = 0x31069
+	_POSIX_THREAD_SAFE_FUNCTIONS        = 0x31069
+	_POSIX_THREAD_SPORADIC_SERVER       = -0x1
+	_POSIX_THREADS                      = 0x31069
+	_POSIX_TIMEOUTS                     = 0x31069
+	_POSIX_TIMERS                       = 0x31069
+	_POSIX_TRACE                        = -0x1
+	_POSIX_TRACE_EVENT_FILTER           = -0x1
+	_POSIX_TRACE_INHERIT                = -0x1
+	_POSIX_TRACE_LOG                    = -0x1
+	_POSIX_TYPED_MEMORY_OBJECTS         = -0x1
+	_POSIX_VERSION                      = 0x31069
+
+	_POSIX_V7_ILP32_OFF32  = -0x1
+	_POSIX_V7_ILP32_OFFBIG = -0x1
+	_POSIX_V7_LP64_OFF64   = 0x1
+	_POSIX_V7_LPBIG_OFFBIG = -0x1
+
+	_POSIX_V6_ILP32_OFF32  = -0x1
+	_POSIX_V6_ILP32_OFFBIG = -0x1
+	_POSIX_V6_LP64_OFF64   = 0x1
+	_POSIX_V6_LPBIG_OFFBIG = -0x1
+
+	_POSIX2_C_BIND    = 0x31069
+	_POSIX2_C_DEV     = 0x31069
+	_POSIX2_C_VERSION = 0x31069
+	_POSIX2_CHAR_TERM = 0x31069
+	_POSIX2_LOCALEDEF = 0x31069
+	_POSIX2_SW_DEV    = 0x31069
+	_POSIX2_VERSION   = 0x31069
+
+	_XOPEN_ENH_I18N         = 0x1
+	_XOPEN_REALTIME         = 0x1
+	_XOPEN_REALTIME_THREADS = 0x1
+	_XOPEN_SHM              = 0x1
+	_XOPEN_UNIX             = 0x1
+	_XOPEN_VERSION          = 0x2bc
+	_XOPEN_XCU_VERSION      = 0x4
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_s390x.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_s390x.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_s390x.go
new file mode 100644
--- /dev/null	(date 1660734983803)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_s390x.go	(date 1660734983803)
@@ -0,0 +1,114 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_values_linux.go
+
+//go:build linux && s390x
+// +build linux,s390x
+
+package sysconf
+
+const (
+	_AIO_PRIO_DELTA_MAX = 0x14
+	_BC_BASE_MAX        = 0x63
+	_BC_DIM_MAX         = 0x800
+	_BC_SCALE_MAX       = 0x63
+	_BC_STRING_MAX      = 0x3e8
+	_COLL_WEIGHTS_MAX   = 0xff
+	_DELAYTIMER_MAX     = 0x7fffffff
+	_EXPR_NEST_MAX      = 0x20
+	_HOST_NAME_MAX      = 0x40
+	_LINE_MAX           = 0x800
+	_LOGIN_NAME_MAX     = 0x100
+	_MQ_PRIO_MAX        = 0x8000
+	_NGROUPS_MAX        = 0x10000
+	_NSS_BUFLEN_GROUP   = 0x400
+	_NSS_BUFLEN_PASSWD  = 0x400
+	_OPEN_MAX           = 0x100
+	_PTHREAD_KEYS_MAX   = 0x400
+	_PTHREAD_STACK_MIN  = 0x4000
+	_RE_DUP_MAX         = 0x7fff
+	_RTSIG_MAX          = 0x20
+	_SEM_VALUE_MAX      = 0x7fffffff
+	_STREAM_MAX         = 0x10
+	_SYMLOOP_MAX        = -0x1
+	_TTY_NAME_MAX       = 0x20
+
+	_UIO_MAXIOV = 0x400
+
+	_INT_MAX = 0x7fffffff
+
+	_POSIX_ADVISORY_INFO                = 0x31069
+	_POSIX_ARG_MAX                      = 0x1000
+	_POSIX_ASYNCHRONOUS_IO              = 0x31069
+	_POSIX_BARRIERS                     = 0x31069
+	_POSIX_CHILD_MAX                    = 0x19
+	_POSIX_CLOCK_SELECTION              = 0x31069
+	_POSIX_CPUTIME                      = 0x0
+	_POSIX_FSYNC                        = 0x31069
+	_POSIX_IPV6                         = 0x31069
+	_POSIX_JOB_CONTROL                  = 0x1
+	_POSIX_MAPPED_FILES                 = 0x31069
+	_POSIX_MEMLOCK                      = 0x31069
+	_POSIX_MEMLOCK_RANGE                = 0x31069
+	_POSIX_MEMORY_PROTECTION            = 0x31069
+	_POSIX_MESSAGE_PASSING              = 0x31069
+	_POSIX_MONOTONIC_CLOCK              = 0x0
+	_POSIX_PRIORITIZED_IO               = 0x31069
+	_POSIX_PRIORITY_SCHEDULING          = 0x31069
+	_POSIX_RAW_SOCKETS                  = 0x31069
+	_POSIX_READER_WRITER_LOCKS          = 0x31069
+	_POSIX_REALTIME_SIGNALS             = 0x31069
+	_POSIX_REGEXP                       = 0x1
+	_POSIX_SAVED_IDS                    = 0x1
+	_POSIX_SEMAPHORES                   = 0x31069
+	_POSIX_SHARED_MEMORY_OBJECTS        = 0x31069
+	_POSIX_SHELL                        = 0x1
+	_POSIX_SIGQUEUE_MAX                 = 0x20
+	_POSIX_SPAWN                        = 0x31069
+	_POSIX_SPIN_LOCKS                   = 0x31069
+	_POSIX_SPORADIC_SERVER              = -0x1
+	_POSIX_SYNCHRONIZED_IO              = 0x31069
+	_POSIX_THREAD_ATTR_STACKADDR        = 0x31069
+	_POSIX_THREAD_ATTR_STACKSIZE        = 0x31069
+	_POSIX_THREAD_DESTRUCTOR_ITERATIONS = 0x4
+	_POSIX_THREAD_PRIO_INHERIT          = 0x31069
+	_POSIX_THREAD_PRIO_PROTECT          = 0x31069
+	_POSIX_THREAD_PRIORITY_SCHEDULING   = 0x31069
+	_POSIX_THREAD_PROCESS_SHARED        = 0x31069
+	_POSIX_THREAD_SAFE_FUNCTIONS        = 0x31069
+	_POSIX_THREAD_SPORADIC_SERVER       = -0x1
+	_POSIX_THREADS                      = 0x31069
+	_POSIX_TIMEOUTS                     = 0x31069
+	_POSIX_TIMERS                       = 0x31069
+	_POSIX_TRACE                        = -0x1
+	_POSIX_TRACE_EVENT_FILTER           = -0x1
+	_POSIX_TRACE_INHERIT                = -0x1
+	_POSIX_TRACE_LOG                    = -0x1
+	_POSIX_TYPED_MEMORY_OBJECTS         = -0x1
+	_POSIX_VERSION                      = 0x31069
+
+	_POSIX_V7_ILP32_OFF32  = -0x1
+	_POSIX_V7_ILP32_OFFBIG = -0x1
+	_POSIX_V7_LP64_OFF64   = 0x1
+	_POSIX_V7_LPBIG_OFFBIG = -0x1
+
+	_POSIX_V6_ILP32_OFF32  = -0x1
+	_POSIX_V6_ILP32_OFFBIG = -0x1
+	_POSIX_V6_LP64_OFF64   = 0x1
+	_POSIX_V6_LPBIG_OFFBIG = -0x1
+
+	_POSIX2_C_BIND    = 0x31069
+	_POSIX2_C_DEV     = 0x31069
+	_POSIX2_C_VERSION = 0x31069
+	_POSIX2_CHAR_TERM = 0x31069
+	_POSIX2_LOCALEDEF = 0x31069
+	_POSIX2_SW_DEV    = 0x31069
+	_POSIX2_VERSION   = 0x31069
+
+	_XOPEN_ENH_I18N         = 0x1
+	_XOPEN_REALTIME         = 0x1
+	_XOPEN_REALTIME_THREADS = 0x1
+	_XOPEN_SHM              = 0x1
+	_XOPEN_UNIX             = 0x1
+	_XOPEN_VERSION          = 0x2bc
+	_XOPEN_XCU_VERSION      = 0x4
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_values_netbsd_386.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_values_netbsd_386.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_netbsd_386.go
new file mode 100644
--- /dev/null	(date 1660734983804)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_netbsd_386.go	(date 1660734983804)
@@ -0,0 +1,11 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_values_netbsd.go
+
+//go:build netbsd && 386
+// +build netbsd,386
+
+package sysconf
+
+const (
+	_LONG_MAX = 0x7fffffff
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_values_netbsd_amd64.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_values_netbsd_amd64.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_netbsd_amd64.go
new file mode 100644
--- /dev/null	(date 1660734983805)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_netbsd_amd64.go	(date 1660734983805)
@@ -0,0 +1,11 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_values_netbsd.go
+
+//go:build netbsd && amd64
+// +build netbsd,amd64
+
+package sysconf
+
+const (
+	_LONG_MAX = 0x7fffffffffffffff
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_values_netbsd_arm.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_values_netbsd_arm.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_netbsd_arm.go
new file mode 100644
--- /dev/null	(date 1660734983806)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_netbsd_arm.go	(date 1660734983806)
@@ -0,0 +1,11 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_values_netbsd.go
+
+//go:build netbsd && arm
+// +build netbsd,arm
+
+package sysconf
+
+const (
+	_LONG_MAX = 0x7fffffff
+)
Index: vendor/github.com/tklauser/go-sysconf/zsysconf_values_netbsd_arm64.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/zsysconf_values_netbsd_arm64.go b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_netbsd_arm64.go
new file mode 100644
--- /dev/null	(date 1660734983806)
+++ b/vendor/github.com/tklauser/go-sysconf/zsysconf_values_netbsd_arm64.go	(date 1660734983806)
@@ -0,0 +1,11 @@
+// Code generated by cmd/cgo -godefs; DO NOT EDIT.
+// cgo -godefs sysconf_values_netbsd.go
+
+//go:build netbsd && arm64
+// +build netbsd,arm64
+
+package sysconf
+
+const (
+	_LONG_MAX = 0x7fffffffffffffff
+)
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"ALL\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"f1e9e18b-d6ba-4e27-8034-261af48be9f0\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/modules.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/sys_tool.iml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/cmd/define/const.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/cmd/opt/systeminfo.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/cmd/param_test.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/cmd/run.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/cmd/util/common.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/cmd/util/show.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/go.sum\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/main.exe\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/main.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/.travis.yml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/ChangeLog.md\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/LICENSE\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/README.md\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/appveyor.yml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/com.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/com_func.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/connect.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/constants.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/error.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/error_func.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/error_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/guid.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iconnectionpoint.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iconnectionpoint_func.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iconnectionpoint_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iconnectionpointcontainer.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iconnectionpointcontainer_func.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iconnectionpointcontainer_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/idispatch.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/idispatch_func.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/idispatch_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/ienumvariant.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/ienumvariant_func.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/ienumvariant_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iinspectable.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iinspectable_func.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iinspectable_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iprovideclassinfo.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iprovideclassinfo_func.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iprovideclassinfo_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/itypeinfo.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/itypeinfo_func.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/itypeinfo_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iunknown.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iunknown_func.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iunknown_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/ole.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/oleutil/connection.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/oleutil/connection_func.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/oleutil/connection_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/oleutil/go-get.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/oleutil/oleutil.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/safearray.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/safearray_func.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/safearray_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/safearrayconversion.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/safearrayslices.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/utility.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/variables.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/variant.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/variant_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/variant_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/variant_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/variant_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/variant_date_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/variant_date_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/variant_date_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/variant_date_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/variant_ppc64le.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/variant_s390x.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/vt_string.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/winrt.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/winrt_doc.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/inconshreveable/mousetrap/LICENSE\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/inconshreveable/mousetrap/README.md\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/inconshreveable/mousetrap/trap_others.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/inconshreveable/mousetrap/trap_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/inconshreveable/mousetrap/trap_windows_1.4.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/LICENSE\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/table/README.md\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/table/config.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/table/render.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/table/render_csv.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/table/render_html.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/table/render_markdown.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/table/sort.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/table/style.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/table/table.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/table/util.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/table/writer.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/align.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/ansi.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/ansi_unix.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/ansi_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/color.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/color_html.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/cursor.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/filter.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/format.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/string.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/transformer.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/valign.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/wrap.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/lufia/plan9stats/.gitignore\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/lufia/plan9stats/LICENSE\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/lufia/plan9stats/README.md\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/lufia/plan9stats/cpu.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/lufia/plan9stats/disk.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/lufia/plan9stats/doc.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/lufia/plan9stats/host.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/lufia/plan9stats/int.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/lufia/plan9stats/opts.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/lufia/plan9stats/stats.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/mattn/go-runewidth/.travis.yml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/mattn/go-runewidth/LICENSE\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/mattn/go-runewidth/README.md\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/mattn/go-runewidth/go.test.sh\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/mattn/go-runewidth/runewidth.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/mattn/go-runewidth/runewidth_appengine.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/mattn/go-runewidth/runewidth_js.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/mattn/go-runewidth/runewidth_posix.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/mattn/go-runewidth/runewidth_table.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/mattn/go-runewidth/runewidth_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/LICENSE\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/c_helpers.c\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/c_helpers.h\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/config.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/cpustat.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/diskstat.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/doc.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/fsstat.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/helpers.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/lparstat.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/lvmstat.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/memstat.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/netstat.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/procstat.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/sysconf.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/systemcfg.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/types_cpu.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/types_disk.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/types_fs.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/types_lpar.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/types_lvm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/types_memory.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/types_network.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/types_process.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/uptime.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/rivo/uniseg/LICENSE.txt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/rivo/uniseg/README.md\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/rivo/uniseg/doc.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/rivo/uniseg/eastasianwidth.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/rivo/uniseg/gen_breaktest.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/rivo/uniseg/gen_properties.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/rivo/uniseg/grapheme.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/rivo/uniseg/graphemeproperties.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/rivo/uniseg/graphemerules.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/rivo/uniseg/line.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/rivo/uniseg/lineproperties.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/rivo/uniseg/linerules.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/rivo/uniseg/properties.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/rivo/uniseg/sentence.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/rivo/uniseg/sentenceproperties.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/rivo/uniseg/sentencerules.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/rivo/uniseg/step.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/rivo/uniseg/word.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/rivo/uniseg/wordproperties.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/rivo/uniseg/wordrules.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/LICENSE\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/internal/common/binary.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/internal/common/common.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/internal/common/common_darwin.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/internal/common/common_freebsd.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/internal/common/common_linux.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/internal/common/common_openbsd.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/internal/common/common_unix.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/internal/common/common_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/internal/common/endian.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/internal/common/sleep.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_aix.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_aix_cgo.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_aix_nocgo.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_bsd.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_darwin.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_darwin_cgo.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_darwin_nocgo.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_fallback.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_freebsd.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_linux.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_openbsd.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_openbsd_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_openbsd_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_openbsd_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_openbsd_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_plan9.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_solaris.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cast/.gitignore\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cast/LICENSE\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cast/Makefile\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cast/README.md\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cast/cast.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cast/caste.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cast/timeformattype_string.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/.gitignore\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/.golangci.yml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/.mailmap\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/CONDUCT.md\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/CONTRIBUTING.md\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/LICENSE.txt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/MAINTAINERS\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/Makefile\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/README.md\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/active_help.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/active_help.md\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/args.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/bash_completions.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/bash_completions.md\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/bash_completionsV2.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/cobra.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/command.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/command_notwin.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/command_win.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/completions.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/fish_completions.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/fish_completions.md\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/flag_groups.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/powershell_completions.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/powershell_completions.md\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/projects_using_cobra.md\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/shell_completions.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/shell_completions.md\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/user_guide.md\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/zsh_completions.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/cobra/zsh_completions.md\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/.gitignore\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/.travis.yml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/LICENSE\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/README.md\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/bool.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/bool_slice.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/bytes.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/count.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/duration.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/duration_slice.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/flag.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/float32.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/float32_slice.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/float64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/float64_slice.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/golangflag.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/int.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/int16.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/int32.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/int32_slice.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/int64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/int64_slice.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/int8.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/int_slice.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/ip.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/ip_slice.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/ipmask.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/ipnet.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/string.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/string_array.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/string_slice.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/string_to_int.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/string_to_int64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/string_to_string.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/uint.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/uint16.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/uint32.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/uint64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/uint8.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/spf13/pflag/uint_slice.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/yusufpapurcu/wmi/LICENSE\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/yusufpapurcu/wmi/README.md\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/yusufpapurcu/wmi/swbemservices.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/github.com/yusufpapurcu/wmi/wmi.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/LICENSE\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/PATENTS\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/internal/unsafeheader/unsafeheader.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/.gitignore\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/README.md\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/affinity_linux.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/aliases.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_aix_ppc64.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_bsd_386.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_bsd_amd64.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_bsd_arm.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_bsd_arm64.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_bsd_riscv64.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_linux_386.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_linux_amd64.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_linux_arm.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_linux_arm64.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_linux_loong64.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_linux_mips64x.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_linux_mipsx.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_linux_ppc64x.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_linux_riscv64.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_linux_s390x.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_openbsd_mips64.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_solaris_amd64.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_zos_s390x.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/bluetooth_linux.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/cap_freebsd.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/constants.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/dev_aix_ppc.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/dev_aix_ppc64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/dev_darwin.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/dev_dragonfly.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/dev_freebsd.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/dev_linux.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/dev_netbsd.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/dev_openbsd.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/dev_zos.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/dirent.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/endian_big.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/endian_little.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/env_unix.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/epoll_zos.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/fcntl.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/fcntl_darwin.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/fcntl_linux_32bit.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/fdset.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/fstatfs_zos.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/gccgo.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/gccgo_c.c\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/gccgo_linux_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ifreq_linux.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ioctl.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ioctl_linux.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ioctl_zos.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/mkall.sh\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/mkerrors.sh\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/pagesize_unix.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/pledge_openbsd.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ptrace_darwin.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ptrace_ios.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/race.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/race0.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/readdirent_getdents.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/readdirent_getdirentries.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/sockcmsg_dragonfly.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/sockcmsg_linux.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/sockcmsg_unix.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/sockcmsg_unix_other.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/str.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_aix.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_aix_ppc.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_aix_ppc64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_bsd.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_darwin.1_12.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_darwin.1_13.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_darwin.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_darwin_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_darwin_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_darwin_libSystem.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_dragonfly.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_dragonfly_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_freebsd.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_freebsd_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_freebsd_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_freebsd_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_freebsd_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_freebsd_riscv64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_illumos.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_alarm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_amd64_gc.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_gc.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_gc_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_gc_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_gccgo_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_gccgo_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_loong64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_mips64x.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_mipsx.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_ppc.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_ppc64x.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_riscv64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_s390x.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_sparc64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_netbsd.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_netbsd_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_netbsd_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_netbsd_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_netbsd_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_openbsd.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_openbsd_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_openbsd_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_openbsd_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_openbsd_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_openbsd_libc.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_openbsd_mips64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_solaris.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_solaris_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_unix.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_unix_gc.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_unix_gc_ppc64x.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_zos_s390x.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/sysvshm_linux.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/sysvshm_unix.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/sysvshm_unix_other.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/timestruct.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/unveil_openbsd.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/xattr_bsd.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_aix_ppc.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_aix_ppc64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_darwin_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_darwin_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_dragonfly_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_freebsd_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_freebsd_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_freebsd_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_freebsd_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_freebsd_riscv64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_loong64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_mips.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_mips64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_mips64le.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_mipsle.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_ppc.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_ppc64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_ppc64le.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_riscv64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_s390x.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_sparc64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_netbsd_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_netbsd_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_netbsd_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_netbsd_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_openbsd_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_openbsd_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_openbsd_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_openbsd_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_openbsd_mips64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_solaris_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_zos_s390x.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zptrace_armnn_linux.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zptrace_linux_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zptrace_mipsnn_linux.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zptrace_mipsnnle_linux.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zptrace_x86_linux.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc64_gc.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc64_gccgo.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_darwin_amd64.1_13.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_darwin_amd64.1_13.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_darwin_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_darwin_amd64.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_darwin_arm64.1_13.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_darwin_arm64.1_13.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_darwin_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_darwin_arm64.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_dragonfly_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_freebsd_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_freebsd_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_freebsd_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_freebsd_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_freebsd_riscv64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_illumos_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_loong64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_mips.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_mips64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_mips64le.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_mipsle.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_ppc.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_ppc64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_ppc64le.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_riscv64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_s390x.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_sparc64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_netbsd_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_netbsd_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_netbsd_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_netbsd_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_openbsd_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_openbsd_386.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_openbsd_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_openbsd_amd64.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_openbsd_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_openbsd_arm.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_openbsd_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_openbsd_arm64.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_openbsd_mips64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_solaris_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_zos_s390x.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysctl_openbsd_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysctl_openbsd_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysctl_openbsd_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysctl_openbsd_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysctl_openbsd_mips64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_darwin_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_darwin_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_dragonfly_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_freebsd_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_freebsd_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_freebsd_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_freebsd_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_freebsd_riscv64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_loong64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_mips.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_mips64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_mips64le.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_mipsle.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_ppc.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_ppc64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_ppc64le.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_riscv64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_s390x.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_sparc64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_netbsd_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_netbsd_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_netbsd_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_netbsd_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_openbsd_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_openbsd_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_openbsd_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_openbsd_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_openbsd_mips64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_zos_s390x.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_aix_ppc.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_aix_ppc64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_darwin_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_darwin_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_dragonfly_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_freebsd_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_freebsd_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_freebsd_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_freebsd_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_freebsd_riscv64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_illumos_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_loong64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_mips.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_mips64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_mips64le.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_mipsle.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_ppc.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_ppc64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_ppc64le.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_riscv64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_s390x.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_sparc64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_netbsd_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_netbsd_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_netbsd_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_netbsd_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_openbsd_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_openbsd_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_openbsd_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_openbsd_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_openbsd_mips64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_solaris_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_zos_s390x.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/aliases.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/dll_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/empty.s\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/env_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/eventlog.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/exec_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/memory_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/mkerrors.bash\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/mkknownfolderids.bash\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/mksyscall.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/race.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/race0.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/security_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/service.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/setupapi_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/str.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/syscall.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/syscall_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/types_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/types_windows_386.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/types_windows_amd64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/types_windows_arm.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/types_windows_arm64.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/zerrors_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/zknownfolderids_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/golang.org/x/sys/windows/zsyscall_windows.go\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/vendor/modules.txt\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Go File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"GOROOT\" url=\"file://C:/go1.19\" />\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"GoDepProject\">\r\n    <integration-enabled>true</integration-enabled>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2DTMDTwxSwWEkJLIx6vpCSsashO\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\r\n    \"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"DefaultGoTemplateProperty\": \"Go File\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.go.format.on.save.advertiser.fired\": \"true\",\r\n    \"RunOnceActivity.go.formatter.settings.were.checked\": \"true\",\r\n    \"RunOnceActivity.go.migrated.go.modules.settings\": \"true\",\r\n    \"RunOnceActivity.go.modules.go.list.on.any.changes.was.set\": \"true\",\r\n    \"RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"go.import.settings.migrated\": \"true\",\r\n    \"last_opened_file_path\": \"F:/rust/project/tools/sys_tool\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"settings.editor.selected.configurable\": \"go.vgo\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"F:\\rust\\project\\tools\\sys_tool\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"F:\\rust\\project\\tools\\sys_tool\\cmd\\util\" />\r\n      <recent name=\"F:\\rust\\project\\tools\\sys_tool\\cmd\\define\" />\r\n      <recent name=\"F:\\rust\\project\\tools\\sys_tool\\cmd\\opt\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Go Build.go build sys_tool\">\r\n    <configuration name=\"go build sys_tool\" type=\"GoApplicationRunConfiguration\" factoryName=\"Go Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"sys_tool\" />\r\n      <working_directory value=\"$PROJECT_DIR$\" />\r\n      <useCustomBuildTags value=\"true\" />\r\n      <parameters value=\"ps -m\" />\r\n      <kind value=\"PACKAGE\" />\r\n      <package value=\"sys_tool\" />\r\n      <directory value=\"$PROJECT_DIR$\" />\r\n      <filePath value=\"$PROJECT_DIR$/main.go\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"go test sys_tool\" type=\"GoTestRunConfiguration\" factoryName=\"Go Test\" singleton=\"false\" nameIsGenerated=\"true\">\r\n      <module name=\"sys_tool\" />\r\n      <working_directory value=\"$PROJECT_DIR$\" />\r\n      <kind value=\"DIRECTORY\" />\r\n      <package value=\"sys_tool\" />\r\n      <directory value=\"$PROJECT_DIR$\" />\r\n      <filePath value=\"$PROJECT_DIR$\" />\r\n      <framework value=\"gotest\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Go Build.go build sys_tool\" />\r\n      <item itemvalue=\"Go Test.go test sys_tool\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Go Build.go build sys_tool\" />\r\n        <item itemvalue=\"Go Test.go test sys_tool\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VgoProject\">\r\n    <environment>\r\n      <map>\r\n        <entry key=\"GOPROXY\" value=\"direct\" />\r\n        <entry key=\"GOSUMDB\" value=\"off\" />\r\n      </map>\r\n    </environment>\r\n    <settings-migrated>true</settings-migrated>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision b6c9c1e8efbf197e08bd681060843b1bbd75b58b)
+++ b/.idea/workspace.xml	(date 1660786625283)
@@ -5,618 +5,97 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="f1e9e18b-d6ba-4e27-8034-261af48be9f0" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/sys_tool.iml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/cmd/define/const.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/cmd/opt/systeminfo.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/cmd/param_test.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/cmd/run.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/cmd/util/common.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/cmd/util/show.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
       <change afterPath="$PROJECT_DIR$/main.exe" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/main.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/.travis.yml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/ChangeLog.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/LICENSE" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/README.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/appveyor.yml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/com.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/com_func.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/connect.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/constants.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/error.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/error_func.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/error_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/guid.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iconnectionpoint.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iconnectionpoint_func.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iconnectionpoint_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iconnectionpointcontainer.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iconnectionpointcontainer_func.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iconnectionpointcontainer_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/idispatch.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/idispatch_func.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/idispatch_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/ienumvariant.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/ienumvariant_func.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/ienumvariant_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iinspectable.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iinspectable_func.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iinspectable_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iprovideclassinfo.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iprovideclassinfo_func.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iprovideclassinfo_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/itypeinfo.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/itypeinfo_func.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/itypeinfo_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iunknown.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iunknown_func.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/iunknown_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/ole.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/oleutil/connection.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/oleutil/connection_func.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/oleutil/connection_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/oleutil/go-get.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/oleutil/oleutil.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/safearray.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/safearray_func.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/safearray_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/safearrayconversion.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/safearrayslices.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/utility.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/variables.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/variant.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/variant_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/variant_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/variant_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/variant_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/variant_date_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/variant_date_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/variant_date_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/variant_date_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/variant_ppc64le.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/variant_s390x.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/vt_string.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/winrt.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-ole/go-ole/winrt_doc.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/inconshreveable/mousetrap/LICENSE" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/inconshreveable/mousetrap/README.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/inconshreveable/mousetrap/trap_others.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/inconshreveable/mousetrap/trap_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/inconshreveable/mousetrap/trap_windows_1.4.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/LICENSE" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/table/README.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/table/config.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/table/render.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/table/render_csv.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/table/render_html.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/table/render_markdown.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/table/sort.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/table/style.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/table/table.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/table/util.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/table/writer.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/align.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/ansi.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/ansi_unix.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/ansi_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/color.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/color_html.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/cursor.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/filter.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/format.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/string.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/transformer.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/valign.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/jedib0t/go-pretty/v6/text/wrap.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/lufia/plan9stats/.gitignore" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/lufia/plan9stats/LICENSE" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/lufia/plan9stats/README.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/lufia/plan9stats/cpu.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/lufia/plan9stats/disk.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/lufia/plan9stats/doc.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/lufia/plan9stats/host.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/lufia/plan9stats/int.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/lufia/plan9stats/opts.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/lufia/plan9stats/stats.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/mattn/go-runewidth/.travis.yml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/mattn/go-runewidth/LICENSE" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/mattn/go-runewidth/README.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/mattn/go-runewidth/go.test.sh" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/mattn/go-runewidth/runewidth.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/mattn/go-runewidth/runewidth_appengine.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/mattn/go-runewidth/runewidth_js.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/mattn/go-runewidth/runewidth_posix.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/mattn/go-runewidth/runewidth_table.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/mattn/go-runewidth/runewidth_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/LICENSE" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/c_helpers.c" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/c_helpers.h" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/config.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/cpustat.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/diskstat.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/doc.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/fsstat.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/helpers.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/lparstat.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/lvmstat.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/memstat.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/netstat.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/procstat.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/sysconf.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/systemcfg.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/types_cpu.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/types_disk.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/types_fs.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/types_lpar.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/types_lvm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/types_memory.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/types_network.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/types_process.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/power-devops/perfstat/uptime.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/rivo/uniseg/LICENSE.txt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/rivo/uniseg/README.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/rivo/uniseg/doc.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/rivo/uniseg/eastasianwidth.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/rivo/uniseg/gen_breaktest.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/rivo/uniseg/gen_properties.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/rivo/uniseg/grapheme.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/rivo/uniseg/graphemeproperties.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/rivo/uniseg/graphemerules.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/rivo/uniseg/line.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/rivo/uniseg/lineproperties.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/rivo/uniseg/linerules.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/rivo/uniseg/properties.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/rivo/uniseg/sentence.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/rivo/uniseg/sentenceproperties.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/rivo/uniseg/sentencerules.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/rivo/uniseg/step.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/rivo/uniseg/word.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/rivo/uniseg/wordproperties.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/rivo/uniseg/wordrules.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/LICENSE" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/internal/common/binary.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/internal/common/common.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/internal/common/common_darwin.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/internal/common/common_freebsd.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/internal/common/common_linux.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/internal/common/common_openbsd.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/internal/common/common_unix.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/internal/common/common_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/internal/common/endian.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/internal/common/sleep.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_aix.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_aix_cgo.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_aix_nocgo.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_bsd.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_darwin.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_darwin_cgo.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_darwin_nocgo.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_fallback.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_freebsd.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_linux.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_openbsd.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_openbsd_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_openbsd_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_openbsd_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_openbsd_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_plan9.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_solaris.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/mem/mem_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cast/.gitignore" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cast/LICENSE" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cast/Makefile" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cast/README.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cast/cast.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cast/caste.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cast/timeformattype_string.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/.gitignore" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/.golangci.yml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/.mailmap" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/CONDUCT.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/CONTRIBUTING.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/LICENSE.txt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/MAINTAINERS" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/Makefile" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/README.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/active_help.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/active_help.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/args.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/bash_completions.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/bash_completions.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/bash_completionsV2.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/cobra.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/command.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/command_notwin.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/command_win.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/completions.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/fish_completions.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/fish_completions.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/flag_groups.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/powershell_completions.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/powershell_completions.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/projects_using_cobra.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/shell_completions.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/shell_completions.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/user_guide.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/zsh_completions.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/cobra/zsh_completions.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/.gitignore" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/.travis.yml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/LICENSE" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/README.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/bool.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/bool_slice.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/bytes.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/count.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/duration.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/duration_slice.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/flag.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/float32.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/float32_slice.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/float64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/float64_slice.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/golangflag.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/int.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/int16.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/int32.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/int32_slice.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/int64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/int64_slice.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/int8.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/int_slice.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/ip.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/ip_slice.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/ipmask.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/ipnet.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/string.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/string_array.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/string_slice.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/string_to_int.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/string_to_int64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/string_to_string.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/uint.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/uint16.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/uint32.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/uint64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/uint8.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/spf13/pflag/uint_slice.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/yusufpapurcu/wmi/LICENSE" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/yusufpapurcu/wmi/README.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/yusufpapurcu/wmi/swbemservices.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/github.com/yusufpapurcu/wmi/wmi.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/LICENSE" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/PATENTS" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/internal/unsafeheader/unsafeheader.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/.gitignore" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/README.md" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/affinity_linux.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/aliases.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_aix_ppc64.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_bsd_386.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_bsd_amd64.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_bsd_arm.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_bsd_arm64.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_bsd_riscv64.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_linux_386.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_linux_amd64.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_linux_arm.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_linux_arm64.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_linux_loong64.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_linux_mips64x.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_linux_mipsx.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_linux_ppc64x.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_linux_riscv64.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_linux_s390x.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_openbsd_mips64.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_solaris_amd64.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/asm_zos_s390x.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/bluetooth_linux.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/cap_freebsd.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/constants.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/dev_aix_ppc.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/dev_aix_ppc64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/dev_darwin.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/dev_dragonfly.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/dev_freebsd.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/dev_linux.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/dev_netbsd.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/dev_openbsd.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/dev_zos.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/dirent.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/endian_big.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/endian_little.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/env_unix.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/epoll_zos.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/fcntl.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/fcntl_darwin.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/fcntl_linux_32bit.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/fdset.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/fstatfs_zos.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/gccgo.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/gccgo_c.c" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/gccgo_linux_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ifreq_linux.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ioctl.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ioctl_linux.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ioctl_zos.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/mkall.sh" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/mkerrors.sh" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/pagesize_unix.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/pledge_openbsd.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ptrace_darwin.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ptrace_ios.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/race.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/race0.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/readdirent_getdents.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/readdirent_getdirentries.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/sockcmsg_dragonfly.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/sockcmsg_linux.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/sockcmsg_unix.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/sockcmsg_unix_other.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/str.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_aix.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_aix_ppc.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_aix_ppc64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_bsd.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_darwin.1_12.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_darwin.1_13.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_darwin.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_darwin_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_darwin_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_darwin_libSystem.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_dragonfly.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_dragonfly_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_freebsd.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_freebsd_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_freebsd_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_freebsd_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_freebsd_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_freebsd_riscv64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_illumos.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_alarm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_amd64_gc.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_gc.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_gc_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_gc_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_gccgo_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_gccgo_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_loong64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_mips64x.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_mipsx.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_ppc.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_ppc64x.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_riscv64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_s390x.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_linux_sparc64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_netbsd.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_netbsd_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_netbsd_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_netbsd_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_netbsd_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_openbsd.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_openbsd_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_openbsd_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_openbsd_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_openbsd_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_openbsd_libc.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_openbsd_mips64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_solaris.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_solaris_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_unix.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_unix_gc.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_unix_gc_ppc64x.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/syscall_zos_s390x.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/sysvshm_linux.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/sysvshm_unix.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/sysvshm_unix_other.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/timestruct.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/unveil_openbsd.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/xattr_bsd.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_aix_ppc.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_aix_ppc64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_darwin_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_darwin_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_dragonfly_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_freebsd_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_freebsd_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_freebsd_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_freebsd_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_freebsd_riscv64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_loong64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_mips.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_mips64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_mips64le.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_mipsle.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_ppc.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_ppc64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_ppc64le.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_riscv64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_s390x.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_linux_sparc64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_netbsd_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_netbsd_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_netbsd_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_netbsd_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_openbsd_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_openbsd_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_openbsd_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_openbsd_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_openbsd_mips64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_solaris_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zerrors_zos_s390x.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zptrace_armnn_linux.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zptrace_linux_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zptrace_mipsnn_linux.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zptrace_mipsnnle_linux.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zptrace_x86_linux.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc64_gc.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc64_gccgo.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_darwin_amd64.1_13.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_darwin_amd64.1_13.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_darwin_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_darwin_amd64.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_darwin_arm64.1_13.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_darwin_arm64.1_13.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_darwin_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_darwin_arm64.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_dragonfly_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_freebsd_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_freebsd_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_freebsd_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_freebsd_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_freebsd_riscv64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_illumos_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_loong64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_mips.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_mips64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_mips64le.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_mipsle.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_ppc.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_ppc64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_ppc64le.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_riscv64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_s390x.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_linux_sparc64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_netbsd_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_netbsd_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_netbsd_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_netbsd_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_openbsd_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_openbsd_386.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_openbsd_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_openbsd_amd64.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_openbsd_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_openbsd_arm.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_openbsd_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_openbsd_arm64.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_openbsd_mips64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_solaris_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsyscall_zos_s390x.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysctl_openbsd_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysctl_openbsd_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysctl_openbsd_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysctl_openbsd_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysctl_openbsd_mips64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_darwin_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_darwin_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_dragonfly_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_freebsd_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_freebsd_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_freebsd_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_freebsd_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_freebsd_riscv64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_loong64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_mips.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_mips64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_mips64le.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_mipsle.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_ppc.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_ppc64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_ppc64le.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_riscv64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_s390x.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_linux_sparc64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_netbsd_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_netbsd_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_netbsd_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_netbsd_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_openbsd_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_openbsd_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_openbsd_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_openbsd_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_openbsd_mips64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/zsysnum_zos_s390x.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_aix_ppc.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_aix_ppc64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_darwin_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_darwin_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_dragonfly_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_freebsd_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_freebsd_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_freebsd_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_freebsd_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_freebsd_riscv64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_illumos_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_loong64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_mips.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_mips64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_mips64le.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_mipsle.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_ppc.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_ppc64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_ppc64le.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_riscv64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_s390x.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_linux_sparc64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_netbsd_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_netbsd_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_netbsd_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_netbsd_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_openbsd_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_openbsd_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_openbsd_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_openbsd_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_openbsd_mips64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_solaris_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/unix/ztypes_zos_s390x.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/aliases.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/dll_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/empty.s" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/env_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/eventlog.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/exec_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/memory_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/mkerrors.bash" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/mkknownfolderids.bash" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/mksyscall.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/race.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/race0.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/security_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/service.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/setupapi_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/str.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/syscall.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/syscall_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/types_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/types_windows_386.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/types_windows_amd64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/types_windows_arm.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/types_windows_arm64.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/zerrors_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/zknownfolderids_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/golang.org/x/sys/windows/zsyscall_windows.go" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/vendor/modules.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/cpu/cpu.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_aix.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_aix_cgo.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_aix_nocgo.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_darwin.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_darwin_cgo.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_darwin_nocgo.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_dragonfly.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_dragonfly_amd64.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_fallback.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd_386.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd_amd64.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd_arm.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd_arm64.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_linux.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd_386.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd_amd64.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd_arm.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd_arm64.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_plan9.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_solaris.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_windows.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/.cirrus.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/.gitignore" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/LICENSE" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/README.md" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/sysconf.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/sysconf_bsd.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/sysconf_darwin.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/sysconf_dragonfly.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/sysconf_freebsd.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/sysconf_generic.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/sysconf_linux.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/sysconf_netbsd.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/sysconf_openbsd.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/sysconf_posix.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/sysconf_solaris.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/sysconf_unsupported.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_darwin.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_dragonfly.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_freebsd.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_linux.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_netbsd.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_openbsd.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_defs_solaris.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_values_freebsd_386.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_values_freebsd_amd64.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_values_freebsd_arm.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_values_freebsd_arm64.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_386.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_amd64.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_arm.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_arm64.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_loong64.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_mips.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_mips64.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_mips64le.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_mipsle.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_ppc64.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_ppc64le.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_riscv64.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_values_linux_s390x.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_values_netbsd_386.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_values_netbsd_amd64.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_values_netbsd_arm.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/go-sysconf/zsysconf_values_netbsd_arm64.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/numcpus/.cirrus.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/numcpus/LICENSE" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/numcpus/README.md" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/numcpus/numcpus.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/numcpus/numcpus_bsd.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/numcpus/numcpus_linux.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/numcpus/numcpus_solaris.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/numcpus/numcpus_unsupported.go" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/vendor/github.com/tklauser/numcpus/numcpus_windows.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/cmd/opt/systeminfo.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/opt/systeminfo.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/cmd/util/show.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/util/show.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/github.com/spf13/cast/.gitignore" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/github.com/spf13/cast/LICENSE" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/github.com/spf13/cast/Makefile" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/github.com/spf13/cast/README.md" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/github.com/spf13/cast/cast.go" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/github.com/spf13/cast/caste.go" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/github.com/spf13/cast/timeformattype_string.go" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/vendor/modules.txt" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/modules.txt" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -648,27 +127,27 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "ASKED_ADD_EXTERNAL_FILES": "true",
-    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "DefaultGoTemplateProperty": "Go File",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "RunOnceActivity.go.format.on.save.advertiser.fired": "true",
-    "RunOnceActivity.go.formatter.settings.were.checked": "true",
-    "RunOnceActivity.go.migrated.go.modules.settings": "true",
-    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
-    "RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "go.import.settings.migrated": "true",
-    "last_opened_file_path": "F:/rust/project/tools/sys_tool",
-    "node.js.detected.package.eslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "settings.editor.selected.configurable": "go.vgo"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
+    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.go.format.on.save.advertiser.fired&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;F:/rust/project/tools/sys_tool&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;go.vgo&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="F:\rust\project\tools\sys_tool" />
@@ -684,7 +163,7 @@
       <module name="sys_tool" />
       <working_directory value="$PROJECT_DIR$" />
       <useCustomBuildTags value="true" />
-      <parameters value="ps -m" />
+      <parameters value="ps -c" />
       <kind value="PACKAGE" />
       <package value="sys_tool" />
       <directory value="$PROJECT_DIR$" />
Index: vendor/github.com/shirou/gopsutil/v3/cpu/cpu.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/shirou/gopsutil/v3/cpu/cpu.go b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu.go
new file mode 100644
--- /dev/null	(date 1660734983506)
+++ b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu.go	(date 1660734983506)
@@ -0,0 +1,200 @@
+package cpu
+
+import (
+	"context"
+	"encoding/json"
+	"fmt"
+	"math"
+	"runtime"
+	"strconv"
+	"strings"
+	"sync"
+	"time"
+
+	"github.com/shirou/gopsutil/v3/internal/common"
+)
+
+// TimesStat contains the amounts of time the CPU has spent performing different
+// kinds of work. Time units are in seconds. It is based on linux /proc/stat file.
+type TimesStat struct {
+	CPU       string  `json:"cpu"`
+	User      float64 `json:"user"`
+	System    float64 `json:"system"`
+	Idle      float64 `json:"idle"`
+	Nice      float64 `json:"nice"`
+	Iowait    float64 `json:"iowait"`
+	Irq       float64 `json:"irq"`
+	Softirq   float64 `json:"softirq"`
+	Steal     float64 `json:"steal"`
+	Guest     float64 `json:"guest"`
+	GuestNice float64 `json:"guestNice"`
+}
+
+type InfoStat struct {
+	CPU        int32    `json:"cpu"`
+	VendorID   string   `json:"vendorId"`
+	Family     string   `json:"family"`
+	Model      string   `json:"model"`
+	Stepping   int32    `json:"stepping"`
+	PhysicalID string   `json:"physicalId"`
+	CoreID     string   `json:"coreId"`
+	Cores      int32    `json:"cores"`
+	ModelName  string   `json:"modelName"`
+	Mhz        float64  `json:"mhz"`
+	CacheSize  int32    `json:"cacheSize"`
+	Flags      []string `json:"flags"`
+	Microcode  string   `json:"microcode"`
+}
+
+type lastPercent struct {
+	sync.Mutex
+	lastCPUTimes    []TimesStat
+	lastPerCPUTimes []TimesStat
+}
+
+var (
+	lastCPUPercent lastPercent
+	invoke         common.Invoker = common.Invoke{}
+)
+
+func init() {
+	lastCPUPercent.Lock()
+	lastCPUPercent.lastCPUTimes, _ = Times(false)
+	lastCPUPercent.lastPerCPUTimes, _ = Times(true)
+	lastCPUPercent.Unlock()
+}
+
+// Counts returns the number of physical or logical cores in the system
+func Counts(logical bool) (int, error) {
+	return CountsWithContext(context.Background(), logical)
+}
+
+func (c TimesStat) String() string {
+	v := []string{
+		`"cpu":"` + c.CPU + `"`,
+		`"user":` + strconv.FormatFloat(c.User, 'f', 1, 64),
+		`"system":` + strconv.FormatFloat(c.System, 'f', 1, 64),
+		`"idle":` + strconv.FormatFloat(c.Idle, 'f', 1, 64),
+		`"nice":` + strconv.FormatFloat(c.Nice, 'f', 1, 64),
+		`"iowait":` + strconv.FormatFloat(c.Iowait, 'f', 1, 64),
+		`"irq":` + strconv.FormatFloat(c.Irq, 'f', 1, 64),
+		`"softirq":` + strconv.FormatFloat(c.Softirq, 'f', 1, 64),
+		`"steal":` + strconv.FormatFloat(c.Steal, 'f', 1, 64),
+		`"guest":` + strconv.FormatFloat(c.Guest, 'f', 1, 64),
+		`"guestNice":` + strconv.FormatFloat(c.GuestNice, 'f', 1, 64),
+	}
+
+	return `{` + strings.Join(v, ",") + `}`
+}
+
+// Deprecated: Total returns the total number of seconds in a CPUTimesStat
+// Please do not use this internal function.
+func (c TimesStat) Total() float64 {
+	total := c.User + c.System + c.Idle + c.Nice + c.Iowait + c.Irq +
+		c.Softirq + c.Steal + c.Guest + c.GuestNice
+
+	return total
+}
+
+func (c InfoStat) String() string {
+	s, _ := json.Marshal(c)
+	return string(s)
+}
+
+func getAllBusy(t TimesStat) (float64, float64) {
+	tot := t.Total()
+	if runtime.GOOS == "linux" {
+		tot -= t.Guest     // Linux 2.6.24+
+		tot -= t.GuestNice // Linux 3.2.0+
+	}
+
+	busy := tot - t.Idle - t.Iowait
+
+	return tot, busy
+}
+
+func calculateBusy(t1, t2 TimesStat) float64 {
+	t1All, t1Busy := getAllBusy(t1)
+	t2All, t2Busy := getAllBusy(t2)
+
+	if t2Busy <= t1Busy {
+		return 0
+	}
+	if t2All <= t1All {
+		return 100
+	}
+	return math.Min(100, math.Max(0, (t2Busy-t1Busy)/(t2All-t1All)*100))
+}
+
+func calculateAllBusy(t1, t2 []TimesStat) ([]float64, error) {
+	// Make sure the CPU measurements have the same length.
+	if len(t1) != len(t2) {
+		return nil, fmt.Errorf(
+			"received two CPU counts: %d != %d",
+			len(t1), len(t2),
+		)
+	}
+
+	ret := make([]float64, len(t1))
+	for i, t := range t2 {
+		ret[i] = calculateBusy(t1[i], t)
+	}
+	return ret, nil
+}
+
+// Percent calculates the percentage of cpu used either per CPU or combined.
+// If an interval of 0 is given it will compare the current cpu times against the last call.
+// Returns one value per cpu, or a single value if percpu is set to false.
+func Percent(interval time.Duration, percpu bool) ([]float64, error) {
+	return PercentWithContext(context.Background(), interval, percpu)
+}
+
+func PercentWithContext(ctx context.Context, interval time.Duration, percpu bool) ([]float64, error) {
+	if interval <= 0 {
+		return percentUsedFromLastCallWithContext(ctx, percpu)
+	}
+
+	// Get CPU usage at the start of the interval.
+	cpuTimes1, err := TimesWithContext(ctx, percpu)
+	if err != nil {
+		return nil, err
+	}
+
+	if err := common.Sleep(ctx, interval); err != nil {
+		return nil, err
+	}
+
+	// And at the end of the interval.
+	cpuTimes2, err := TimesWithContext(ctx, percpu)
+	if err != nil {
+		return nil, err
+	}
+
+	return calculateAllBusy(cpuTimes1, cpuTimes2)
+}
+
+func percentUsedFromLastCall(percpu bool) ([]float64, error) {
+	return percentUsedFromLastCallWithContext(context.Background(), percpu)
+}
+
+func percentUsedFromLastCallWithContext(ctx context.Context, percpu bool) ([]float64, error) {
+	cpuTimes, err := TimesWithContext(ctx, percpu)
+	if err != nil {
+		return nil, err
+	}
+	lastCPUPercent.Lock()
+	defer lastCPUPercent.Unlock()
+	var lastTimes []TimesStat
+	if percpu {
+		lastTimes = lastCPUPercent.lastPerCPUTimes
+		lastCPUPercent.lastPerCPUTimes = cpuTimes
+	} else {
+		lastTimes = lastCPUPercent.lastCPUTimes
+		lastCPUPercent.lastCPUTimes = cpuTimes
+	}
+
+	if lastTimes == nil {
+		return nil, fmt.Errorf("error getting times for cpu percent. lastTimes was nil")
+	}
+	return calculateAllBusy(lastTimes, cpuTimes)
+}
Index: vendor/github.com/shirou/gopsutil/v3/cpu/cpu_aix.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_aix.go b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_aix.go
new file mode 100644
--- /dev/null	(date 1660734983507)
+++ b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_aix.go	(date 1660734983507)
@@ -0,0 +1,16 @@
+//go:build aix
+// +build aix
+
+package cpu
+
+import (
+	"context"
+)
+
+func Times(percpu bool) ([]TimesStat, error) {
+	return TimesWithContext(context.Background(), percpu)
+}
+
+func Info() ([]InfoStat, error) {
+	return InfoWithContext(context.Background())
+}
Index: vendor/github.com/shirou/gopsutil/v3/cpu/cpu_aix_cgo.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_aix_cgo.go b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_aix_cgo.go
new file mode 100644
--- /dev/null	(date 1660734983508)
+++ b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_aix_cgo.go	(date 1660734983508)
@@ -0,0 +1,66 @@
+//go:build aix && cgo
+// +build aix,cgo
+
+package cpu
+
+import (
+	"context"
+
+	"github.com/power-devops/perfstat"
+)
+
+func TimesWithContext(ctx context.Context, percpu bool) ([]TimesStat, error) {
+	var ret []TimesStat
+	if percpu {
+		cpus, err := perfstat.CpuStat()
+		if err != nil {
+			return nil, err
+		}
+		for _, c := range cpus {
+			ct := &TimesStat{
+				CPU:    c.Name,
+				Idle:   float64(c.Idle),
+				User:   float64(c.User),
+				System: float64(c.Sys),
+				Iowait: float64(c.Wait),
+			}
+			ret = append(ret, *ct)
+		}
+	} else {
+		c, err := perfstat.CpuUtilTotalStat()
+		if err != nil {
+			return nil, err
+		}
+		ct := &TimesStat{
+			CPU:    "cpu-total",
+			Idle:   float64(c.IdlePct),
+			User:   float64(c.UserPct),
+			System: float64(c.KernPct),
+			Iowait: float64(c.WaitPct),
+		}
+		ret = append(ret, *ct)
+	}
+	return ret, nil
+}
+
+func InfoWithContext(ctx context.Context) ([]InfoStat, error) {
+	c, err := perfstat.CpuTotalStat()
+	if err != nil {
+		return nil, err
+	}
+	info := InfoStat{
+		CPU:   0,
+		Mhz:   float64(c.ProcessorHz / 1000000),
+		Cores: int32(c.NCpusCfg),
+	}
+	result := []InfoStat{info}
+	return result, nil
+}
+
+func CountsWithContext(ctx context.Context, logical bool) (int, error) {
+	c, err := perfstat.CpuTotalStat()
+	if err != nil {
+		return 0, err
+	}
+	return c.NCpusCfg, nil
+}
Index: vendor/github.com/shirou/gopsutil/v3/cpu/cpu_aix_nocgo.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_aix_nocgo.go b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_aix_nocgo.go
new file mode 100644
--- /dev/null	(date 1660734983509)
+++ b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_aix_nocgo.go	(date 1660734983509)
@@ -0,0 +1,95 @@
+//go:build aix && !cgo
+// +build aix,!cgo
+
+package cpu
+
+import (
+	"context"
+	"regexp"
+	"strings"
+	"strconv"
+
+	"github.com/shirou/gopsutil/v3/internal/common"
+)
+
+var whiteSpaces = regexp.MustCompile(`\s+`)
+
+func TimesWithContext(ctx context.Context, percpu bool) ([]TimesStat, error) {
+	if percpu {
+		return []TimesStat{}, common.ErrNotImplementedError
+	} else {
+		out, err := invoke.CommandWithContext(ctx, "sar", "-u", "10", "1")
+		if err != nil {
+			return nil, err
+		}
+		lines := strings.Split(string(out), "\n")
+		if len(lines) < 5 {
+			return []TimesStat{}, common.ErrNotImplementedError
+		}
+
+		ret := TimesStat{CPU: "cpu-total"}
+		h := whiteSpaces.Split(lines[len(lines)-3], -1)	// headers
+		v := whiteSpaces.Split(lines[len(lines)-2], -1)	// values
+		for i, header := range h {
+			if t, err := strconv.ParseFloat(v[i], 64); err == nil {
+				switch header {
+					case `%usr`:
+						ret.User = t
+					case `%sys`:
+						ret.System = t
+					case `%wio`:
+						ret.Iowait = t
+					case `%idle`:
+						ret.Idle = t
+				}
+			}
+		}
+
+		return []TimesStat{ret}, nil
+	}
+}
+
+func InfoWithContext(ctx context.Context) ([]InfoStat, error) {
+	out, err := invoke.CommandWithContext(ctx, "prtconf")
+	if err != nil {
+		return nil, err
+	}
+
+	ret := InfoStat{}
+	for _, line := range strings.Split(string(out), "\n") {
+		if strings.HasPrefix(line, "Number Of Processors:") {
+			p := whiteSpaces.Split(line, 4)
+			if len(p) > 3 {
+				if t, err := strconv.ParseUint(p[3], 10, 64); err == nil {
+					ret.Cores = int32(t)
+				}
+			}
+		} else if strings.HasPrefix(line, "Processor Clock Speed:") {
+			p := whiteSpaces.Split(line, 5)
+			if len(p) > 4 {
+				if t, err := strconv.ParseFloat(p[3], 64); err == nil {
+					switch strings.ToUpper(p[4]) {
+					case "MHZ":
+						ret.Mhz = t
+					case "GHZ":
+						ret.Mhz = t * 1000.0
+					case "KHZ":
+						ret.Mhz = t / 1000.0
+					default:
+						ret.Mhz = t
+					}
+				}
+			}
+			break
+		}
+	}
+	return []InfoStat{ret}, nil
+}
+
+func CountsWithContext(ctx context.Context, logical bool) (int, error) {
+	info, err := InfoWithContext(ctx)
+	if err == nil {
+		return int(info[0].Cores), nil
+	}
+	return 0, err
+}
Index: vendor/github.com/shirou/gopsutil/v3/cpu/cpu_darwin.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_darwin.go b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_darwin.go
new file mode 100644
--- /dev/null	(date 1660734983510)
+++ b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_darwin.go	(date 1660734983510)
@@ -0,0 +1,112 @@
+//go:build darwin
+// +build darwin
+
+package cpu
+
+import (
+	"context"
+	"strconv"
+	"strings"
+
+	"github.com/tklauser/go-sysconf"
+	"golang.org/x/sys/unix"
+)
+
+// sys/resource.h
+const (
+	CPUser    = 0
+	cpNice    = 1
+	cpSys     = 2
+	cpIntr    = 3
+	cpIdle    = 4
+	cpUStates = 5
+)
+
+// default value. from time.h
+var ClocksPerSec = float64(128)
+
+func init() {
+	clkTck, err := sysconf.Sysconf(sysconf.SC_CLK_TCK)
+	// ignore errors
+	if err == nil {
+		ClocksPerSec = float64(clkTck)
+	}
+}
+
+func Times(percpu bool) ([]TimesStat, error) {
+	return TimesWithContext(context.Background(), percpu)
+}
+
+func TimesWithContext(ctx context.Context, percpu bool) ([]TimesStat, error) {
+	if percpu {
+		return perCPUTimes()
+	}
+
+	return allCPUTimes()
+}
+
+// Returns only one CPUInfoStat on FreeBSD
+func Info() ([]InfoStat, error) {
+	return InfoWithContext(context.Background())
+}
+
+func InfoWithContext(ctx context.Context) ([]InfoStat, error) {
+	var ret []InfoStat
+
+	c := InfoStat{}
+	c.ModelName, _ = unix.Sysctl("machdep.cpu.brand_string")
+	family, _ := unix.SysctlUint32("machdep.cpu.family")
+	c.Family = strconv.FormatUint(uint64(family), 10)
+	model, _ := unix.SysctlUint32("machdep.cpu.model")
+	c.Model = strconv.FormatUint(uint64(model), 10)
+	stepping, _ := unix.SysctlUint32("machdep.cpu.stepping")
+	c.Stepping = int32(stepping)
+	features, err := unix.Sysctl("machdep.cpu.features")
+	if err == nil {
+		for _, v := range strings.Fields(features) {
+			c.Flags = append(c.Flags, strings.ToLower(v))
+		}
+	}
+	leaf7Features, err := unix.Sysctl("machdep.cpu.leaf7_features")
+	if err == nil {
+		for _, v := range strings.Fields(leaf7Features) {
+			c.Flags = append(c.Flags, strings.ToLower(v))
+		}
+	}
+	extfeatures, err := unix.Sysctl("machdep.cpu.extfeatures")
+	if err == nil {
+		for _, v := range strings.Fields(extfeatures) {
+			c.Flags = append(c.Flags, strings.ToLower(v))
+		}
+	}
+	cores, _ := unix.SysctlUint32("machdep.cpu.core_count")
+	c.Cores = int32(cores)
+	cacheSize, _ := unix.SysctlUint32("machdep.cpu.cache.size")
+	c.CacheSize = int32(cacheSize)
+	c.VendorID, _ = unix.Sysctl("machdep.cpu.vendor")
+
+	// Use the rated frequency of the CPU. This is a static value and does not
+	// account for low power or Turbo Boost modes.
+	cpuFrequency, err := unix.SysctlUint64("hw.cpufrequency")
+	if err == nil {
+		c.Mhz = float64(cpuFrequency) / 1000000.0
+	}
+
+	return append(ret, c), nil
+}
+
+func CountsWithContext(ctx context.Context, logical bool) (int, error) {
+	var cpuArgument string
+	if logical {
+		cpuArgument = "hw.logicalcpu"
+	} else {
+		cpuArgument = "hw.physicalcpu"
+	}
+
+	count, err := unix.SysctlUint32(cpuArgument)
+	if err != nil {
+		return 0, err
+	}
+
+	return int(count), nil
+}
Index: vendor/github.com/shirou/gopsutil/v3/cpu/cpu_darwin_cgo.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_darwin_cgo.go b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_darwin_cgo.go
new file mode 100644
--- /dev/null	(date 1660734983511)
+++ b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_darwin_cgo.go	(date 1660734983511)
@@ -0,0 +1,111 @@
+//go:build darwin && cgo
+// +build darwin,cgo
+
+package cpu
+
+/*
+#include <stdlib.h>
+#include <sys/sysctl.h>
+#include <sys/mount.h>
+#include <mach/mach_init.h>
+#include <mach/mach_host.h>
+#include <mach/host_info.h>
+#include <TargetConditionals.h>
+#if TARGET_OS_MAC
+#include <libproc.h>
+#endif
+#include <mach/processor_info.h>
+#include <mach/vm_map.h>
+*/
+import "C"
+
+import (
+	"bytes"
+	"encoding/binary"
+	"fmt"
+	"unsafe"
+)
+
+// these CPU times for darwin is borrowed from influxdb/telegraf.
+
+func perCPUTimes() ([]TimesStat, error) {
+	var (
+		count   C.mach_msg_type_number_t
+		cpuload *C.processor_cpu_load_info_data_t
+		ncpu    C.natural_t
+	)
+
+	status := C.host_processor_info(C.host_t(C.mach_host_self()),
+		C.PROCESSOR_CPU_LOAD_INFO,
+		&ncpu,
+		(*C.processor_info_array_t)(unsafe.Pointer(&cpuload)),
+		&count)
+
+	if status != C.KERN_SUCCESS {
+		return nil, fmt.Errorf("host_processor_info error=%d", status)
+	}
+
+	// jump through some cgo casting hoops and ensure we properly free
+	// the memory that cpuload points to
+	target := C.vm_map_t(C.mach_task_self_)
+	address := C.vm_address_t(uintptr(unsafe.Pointer(cpuload)))
+	defer C.vm_deallocate(target, address, C.vm_size_t(ncpu))
+
+	// the body of struct processor_cpu_load_info
+	// aka processor_cpu_load_info_data_t
+	var cpu_ticks [C.CPU_STATE_MAX]uint32
+
+	// copy the cpuload array to a []byte buffer
+	// where we can binary.Read the data
+	size := int(ncpu) * binary.Size(cpu_ticks)
+	buf := (*[1 << 30]byte)(unsafe.Pointer(cpuload))[:size:size]
+
+	bbuf := bytes.NewBuffer(buf)
+
+	var ret []TimesStat
+
+	for i := 0; i < int(ncpu); i++ {
+		err := binary.Read(bbuf, binary.LittleEndian, &cpu_ticks)
+		if err != nil {
+			return nil, err
+		}
+
+		c := TimesStat{
+			CPU:    fmt.Sprintf("cpu%d", i),
+			User:   float64(cpu_ticks[C.CPU_STATE_USER]) / ClocksPerSec,
+			System: float64(cpu_ticks[C.CPU_STATE_SYSTEM]) / ClocksPerSec,
+			Nice:   float64(cpu_ticks[C.CPU_STATE_NICE]) / ClocksPerSec,
+			Idle:   float64(cpu_ticks[C.CPU_STATE_IDLE]) / ClocksPerSec,
+		}
+
+		ret = append(ret, c)
+	}
+
+	return ret, nil
+}
+
+func allCPUTimes() ([]TimesStat, error) {
+	var count C.mach_msg_type_number_t
+	var cpuload C.host_cpu_load_info_data_t
+
+	count = C.HOST_CPU_LOAD_INFO_COUNT
+
+	status := C.host_statistics(C.host_t(C.mach_host_self()),
+		C.HOST_CPU_LOAD_INFO,
+		C.host_info_t(unsafe.Pointer(&cpuload)),
+		&count)
+
+	if status != C.KERN_SUCCESS {
+		return nil, fmt.Errorf("host_statistics error=%d", status)
+	}
+
+	c := TimesStat{
+		CPU:    "cpu-total",
+		User:   float64(cpuload.cpu_ticks[C.CPU_STATE_USER]) / ClocksPerSec,
+		System: float64(cpuload.cpu_ticks[C.CPU_STATE_SYSTEM]) / ClocksPerSec,
+		Nice:   float64(cpuload.cpu_ticks[C.CPU_STATE_NICE]) / ClocksPerSec,
+		Idle:   float64(cpuload.cpu_ticks[C.CPU_STATE_IDLE]) / ClocksPerSec,
+	}
+
+	return []TimesStat{c}, nil
+}
Index: vendor/github.com/shirou/gopsutil/v3/cpu/cpu_darwin_nocgo.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_darwin_nocgo.go b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_darwin_nocgo.go
new file mode 100644
--- /dev/null	(date 1660734983513)
+++ b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_darwin_nocgo.go	(date 1660734983513)
@@ -0,0 +1,14 @@
+//go:build darwin && !cgo
+// +build darwin,!cgo
+
+package cpu
+
+import "github.com/shirou/gopsutil/v3/internal/common"
+
+func perCPUTimes() ([]TimesStat, error) {
+	return []TimesStat{}, common.ErrNotImplementedError
+}
+
+func allCPUTimes() ([]TimesStat, error) {
+	return []TimesStat{}, common.ErrNotImplementedError
+}
Index: vendor/github.com/shirou/gopsutil/v3/cpu/cpu_dragonfly.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_dragonfly.go b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_dragonfly.go
new file mode 100644
--- /dev/null	(date 1660734983515)
+++ b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_dragonfly.go	(date 1660734983515)
@@ -0,0 +1,156 @@
+package cpu
+
+import (
+	"context"
+	"fmt"
+	"reflect"
+	"regexp"
+	"runtime"
+	"strconv"
+	"strings"
+	"unsafe"
+
+	"github.com/shirou/gopsutil/v3/internal/common"
+	"github.com/tklauser/go-sysconf"
+	"golang.org/x/sys/unix"
+)
+
+var (
+	ClocksPerSec   = float64(128)
+	cpuMatch       = regexp.MustCompile(`^CPU:`)
+	originMatch    = regexp.MustCompile(`Origin\s*=\s*"(.+)"\s+Id\s*=\s*(.+)\s+Stepping\s*=\s*(.+)`)
+	featuresMatch  = regexp.MustCompile(`Features=.+<(.+)>`)
+	featuresMatch2 = regexp.MustCompile(`Features2=[a-f\dx]+<(.+)>`)
+	cpuEnd         = regexp.MustCompile(`^Trying to mount root`)
+	cpuTimesSize   int
+	emptyTimes     cpuTimes
+)
+
+func init() {
+	clkTck, err := sysconf.Sysconf(sysconf.SC_CLK_TCK)
+	// ignore errors
+	if err == nil {
+		ClocksPerSec = float64(clkTck)
+	}
+}
+
+func timeStat(name string, t *cpuTimes) *TimesStat {
+	return &TimesStat{
+		User:   float64(t.User) / ClocksPerSec,
+		Nice:   float64(t.Nice) / ClocksPerSec,
+		System: float64(t.Sys) / ClocksPerSec,
+		Idle:   float64(t.Idle) / ClocksPerSec,
+		Irq:    float64(t.Intr) / ClocksPerSec,
+		CPU:    name,
+	}
+}
+
+func Times(percpu bool) ([]TimesStat, error) {
+	return TimesWithContext(context.Background(), percpu)
+}
+
+func TimesWithContext(ctx context.Context, percpu bool) ([]TimesStat, error) {
+	if percpu {
+		buf, err := unix.SysctlRaw("kern.cp_times")
+		if err != nil {
+			return nil, err
+		}
+
+		// We can't do this in init due to the conflict with cpu.init()
+		if cpuTimesSize == 0 {
+			cpuTimesSize = int(reflect.TypeOf(cpuTimes{}).Size())
+		}
+
+		ncpus := len(buf) / cpuTimesSize
+		ret := make([]TimesStat, 0, ncpus)
+		for i := 0; i < ncpus; i++ {
+			times := (*cpuTimes)(unsafe.Pointer(&buf[i*cpuTimesSize]))
+			if *times == emptyTimes {
+				// CPU not present
+				continue
+			}
+			ret = append(ret, *timeStat(fmt.Sprintf("cpu%d", len(ret)), times))
+		}
+		return ret, nil
+	}
+
+	buf, err := unix.SysctlRaw("kern.cp_time")
+	if err != nil {
+		return nil, err
+	}
+
+	times := (*cpuTimes)(unsafe.Pointer(&buf[0]))
+	return []TimesStat{*timeStat("cpu-total", times)}, nil
+}
+
+// Returns only one InfoStat on DragonflyBSD.  The information regarding core
+// count, however is accurate and it is assumed that all InfoStat attributes
+// are the same across CPUs.
+func Info() ([]InfoStat, error) {
+	return InfoWithContext(context.Background())
+}
+
+func InfoWithContext(ctx context.Context) ([]InfoStat, error) {
+	const dmesgBoot = "/var/run/dmesg.boot"
+
+	c, err := parseDmesgBoot(dmesgBoot)
+	if err != nil {
+		return nil, err
+	}
+
+	var u32 uint32
+	if u32, err = unix.SysctlUint32("hw.clockrate"); err != nil {
+		return nil, err
+	}
+	c.Mhz = float64(u32)
+
+	var num int
+	var buf string
+	if buf, err = unix.Sysctl("hw.cpu_topology.tree"); err != nil {
+		return nil, err
+	}
+	num = strings.Count(buf, "CHIP")
+	c.Cores = int32(strings.Count(string(buf), "CORE") / num)
+
+	if c.ModelName, err = unix.Sysctl("hw.model"); err != nil {
+		return nil, err
+	}
+
+	ret := make([]InfoStat, num)
+	for i := 0; i < num; i++ {
+		ret[i] = c
+	}
+
+	return ret, nil
+}
+
+func parseDmesgBoot(fileName string) (InfoStat, error) {
+	c := InfoStat{}
+	lines, _ := common.ReadLines(fileName)
+	for _, line := range lines {
+		if matches := cpuEnd.FindStringSubmatch(line); matches != nil {
+			break
+		} else if matches := originMatch.FindStringSubmatch(line); matches != nil {
+			c.VendorID = matches[1]
+			t, err := strconv.ParseInt(matches[2], 10, 32)
+			if err != nil {
+				return c, fmt.Errorf("unable to parse DragonflyBSD CPU stepping information from %q: %v", line, err)
+			}
+			c.Stepping = int32(t)
+		} else if matches := featuresMatch.FindStringSubmatch(line); matches != nil {
+			for _, v := range strings.Split(matches[1], ",") {
+				c.Flags = append(c.Flags, strings.ToLower(v))
+			}
+		} else if matches := featuresMatch2.FindStringSubmatch(line); matches != nil {
+			for _, v := range strings.Split(matches[1], ",") {
+				c.Flags = append(c.Flags, strings.ToLower(v))
+			}
+		}
+	}
+
+	return c, nil
+}
+
+func CountsWithContext(ctx context.Context, logical bool) (int, error) {
+	return runtime.NumCPU(), nil
+}
Index: vendor/github.com/shirou/gopsutil/v3/cpu/cpu_dragonfly_amd64.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_dragonfly_amd64.go b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_dragonfly_amd64.go
new file mode 100644
--- /dev/null	(date 1660734983516)
+++ b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_dragonfly_amd64.go	(date 1660734983516)
@@ -0,0 +1,9 @@
+package cpu
+
+type cpuTimes struct {
+	User uint64
+	Nice uint64
+	Sys  uint64
+	Intr uint64
+	Idle uint64
+}
Index: vendor/github.com/shirou/gopsutil/v3/cpu/cpu_fallback.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_fallback.go b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_fallback.go
new file mode 100644
--- /dev/null	(date 1660734983517)
+++ b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_fallback.go	(date 1660734983517)
@@ -0,0 +1,31 @@
+//go:build !darwin && !linux && !freebsd && !openbsd && !solaris && !windows && !dragonfly && !plan9 && !aix
+// +build !darwin,!linux,!freebsd,!openbsd,!solaris,!windows,!dragonfly,!plan9,!aix
+
+package cpu
+
+import (
+	"context"
+	"runtime"
+
+	"github.com/shirou/gopsutil/v3/internal/common"
+)
+
+func Times(percpu bool) ([]TimesStat, error) {
+	return TimesWithContext(context.Background(), percpu)
+}
+
+func TimesWithContext(ctx context.Context, percpu bool) ([]TimesStat, error) {
+	return []TimesStat{}, common.ErrNotImplementedError
+}
+
+func Info() ([]InfoStat, error) {
+	return InfoWithContext(context.Background())
+}
+
+func InfoWithContext(ctx context.Context) ([]InfoStat, error) {
+	return []InfoStat{}, common.ErrNotImplementedError
+}
+
+func CountsWithContext(ctx context.Context, logical bool) (int, error) {
+	return runtime.NumCPU(), nil
+}
Index: vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd.go b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd.go
new file mode 100644
--- /dev/null	(date 1660734983518)
+++ b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd.go	(date 1660734983518)
@@ -0,0 +1,168 @@
+package cpu
+
+import (
+	"context"
+	"fmt"
+	"reflect"
+	"regexp"
+	"runtime"
+	"strconv"
+	"strings"
+	"unsafe"
+
+	"github.com/shirou/gopsutil/v3/internal/common"
+	"github.com/tklauser/go-sysconf"
+	"golang.org/x/sys/unix"
+)
+
+var (
+	ClocksPerSec   = float64(128)
+	cpuMatch       = regexp.MustCompile(`^CPU:`)
+	originMatch    = regexp.MustCompile(`Origin\s*=\s*"(.+)"\s+Id\s*=\s*(.+)\s+Family\s*=\s*(.+)\s+Model\s*=\s*(.+)\s+Stepping\s*=\s*(.+)`)
+	featuresMatch  = regexp.MustCompile(`Features=.+<(.+)>`)
+	featuresMatch2 = regexp.MustCompile(`Features2=[a-f\dx]+<(.+)>`)
+	cpuEnd         = regexp.MustCompile(`^Trying to mount root`)
+	cpuCores       = regexp.MustCompile(`FreeBSD/SMP: (\d*) package\(s\) x (\d*) core\(s\)`)
+	cpuTimesSize   int
+	emptyTimes     cpuTimes
+)
+
+func init() {
+	clkTck, err := sysconf.Sysconf(sysconf.SC_CLK_TCK)
+	// ignore errors
+	if err == nil {
+		ClocksPerSec = float64(clkTck)
+	}
+}
+
+func timeStat(name string, t *cpuTimes) *TimesStat {
+	return &TimesStat{
+		User:   float64(t.User) / ClocksPerSec,
+		Nice:   float64(t.Nice) / ClocksPerSec,
+		System: float64(t.Sys) / ClocksPerSec,
+		Idle:   float64(t.Idle) / ClocksPerSec,
+		Irq:    float64(t.Intr) / ClocksPerSec,
+		CPU:    name,
+	}
+}
+
+func Times(percpu bool) ([]TimesStat, error) {
+	return TimesWithContext(context.Background(), percpu)
+}
+
+func TimesWithContext(ctx context.Context, percpu bool) ([]TimesStat, error) {
+	if percpu {
+		buf, err := unix.SysctlRaw("kern.cp_times")
+		if err != nil {
+			return nil, err
+		}
+
+		// We can't do this in init due to the conflict with cpu.init()
+		if cpuTimesSize == 0 {
+			cpuTimesSize = int(reflect.TypeOf(cpuTimes{}).Size())
+		}
+
+		ncpus := len(buf) / cpuTimesSize
+		ret := make([]TimesStat, 0, ncpus)
+		for i := 0; i < ncpus; i++ {
+			times := (*cpuTimes)(unsafe.Pointer(&buf[i*cpuTimesSize]))
+			if *times == emptyTimes {
+				// CPU not present
+				continue
+			}
+			ret = append(ret, *timeStat(fmt.Sprintf("cpu%d", len(ret)), times))
+		}
+		return ret, nil
+	}
+
+	buf, err := unix.SysctlRaw("kern.cp_time")
+	if err != nil {
+		return nil, err
+	}
+
+	times := (*cpuTimes)(unsafe.Pointer(&buf[0]))
+	return []TimesStat{*timeStat("cpu-total", times)}, nil
+}
+
+// Returns only one InfoStat on FreeBSD.  The information regarding core
+// count, however is accurate and it is assumed that all InfoStat attributes
+// are the same across CPUs.
+func Info() ([]InfoStat, error) {
+	return InfoWithContext(context.Background())
+}
+
+func InfoWithContext(ctx context.Context) ([]InfoStat, error) {
+	const dmesgBoot = "/var/run/dmesg.boot"
+
+	c, num, err := parseDmesgBoot(dmesgBoot)
+	if err != nil {
+		return nil, err
+	}
+
+	var u32 uint32
+	if u32, err = unix.SysctlUint32("hw.clockrate"); err != nil {
+		return nil, err
+	}
+	c.Mhz = float64(u32)
+
+	if u32, err = unix.SysctlUint32("hw.ncpu"); err != nil {
+		return nil, err
+	}
+	c.Cores = int32(u32)
+
+	if c.ModelName, err = unix.Sysctl("hw.model"); err != nil {
+		return nil, err
+	}
+
+	ret := make([]InfoStat, num)
+	for i := 0; i < num; i++ {
+		ret[i] = c
+	}
+
+	return ret, nil
+}
+
+func parseDmesgBoot(fileName string) (InfoStat, int, error) {
+	c := InfoStat{}
+	lines, _ := common.ReadLines(fileName)
+	cpuNum := 1 // default cpu num is 1
+	for _, line := range lines {
+		if matches := cpuEnd.FindStringSubmatch(line); matches != nil {
+			break
+		} else if matches := originMatch.FindStringSubmatch(line); matches != nil {
+			c.VendorID = matches[1]
+			c.Family = matches[3]
+			c.Model = matches[4]
+			t, err := strconv.ParseInt(matches[5], 10, 32)
+			if err != nil {
+				return c, 0, fmt.Errorf("unable to parse FreeBSD CPU stepping information from %q: %v", line, err)
+			}
+			c.Stepping = int32(t)
+		} else if matches := featuresMatch.FindStringSubmatch(line); matches != nil {
+			for _, v := range strings.Split(matches[1], ",") {
+				c.Flags = append(c.Flags, strings.ToLower(v))
+			}
+		} else if matches := featuresMatch2.FindStringSubmatch(line); matches != nil {
+			for _, v := range strings.Split(matches[1], ",") {
+				c.Flags = append(c.Flags, strings.ToLower(v))
+			}
+		} else if matches := cpuCores.FindStringSubmatch(line); matches != nil {
+			t, err := strconv.ParseInt(matches[1], 10, 32)
+			if err != nil {
+				return c, 0, fmt.Errorf("unable to parse FreeBSD CPU Nums from %q: %v", line, err)
+			}
+			cpuNum = int(t)
+			t2, err := strconv.ParseInt(matches[2], 10, 32)
+			if err != nil {
+				return c, 0, fmt.Errorf("unable to parse FreeBSD CPU cores from %q: %v", line, err)
+			}
+			c.Cores = int32(t2)
+		}
+	}
+
+	return c, cpuNum, nil
+}
+
+func CountsWithContext(ctx context.Context, logical bool) (int, error) {
+	return runtime.NumCPU(), nil
+}
Index: vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd_386.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd_386.go b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd_386.go
new file mode 100644
--- /dev/null	(date 1660734983520)
+++ b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd_386.go	(date 1660734983520)
@@ -0,0 +1,9 @@
+package cpu
+
+type cpuTimes struct {
+	User uint32
+	Nice uint32
+	Sys  uint32
+	Intr uint32
+	Idle uint32
+}
Index: vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd_amd64.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd_amd64.go b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd_amd64.go
new file mode 100644
--- /dev/null	(date 1660734983521)
+++ b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd_amd64.go	(date 1660734983521)
@@ -0,0 +1,9 @@
+package cpu
+
+type cpuTimes struct {
+	User uint64
+	Nice uint64
+	Sys  uint64
+	Intr uint64
+	Idle uint64
+}
Index: vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd_arm.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd_arm.go b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd_arm.go
new file mode 100644
--- /dev/null	(date 1660734983522)
+++ b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd_arm.go	(date 1660734983522)
@@ -0,0 +1,9 @@
+package cpu
+
+type cpuTimes struct {
+	User uint32
+	Nice uint32
+	Sys  uint32
+	Intr uint32
+	Idle uint32
+}
Index: vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd_arm64.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd_arm64.go b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd_arm64.go
new file mode 100644
--- /dev/null	(date 1660734983523)
+++ b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_freebsd_arm64.go	(date 1660734983523)
@@ -0,0 +1,9 @@
+package cpu
+
+type cpuTimes struct {
+	User uint64
+	Nice uint64
+	Sys  uint64
+	Intr uint64
+	Idle uint64
+}
Index: vendor/github.com/shirou/gopsutil/v3/cpu/cpu_linux.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_linux.go b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_linux.go
new file mode 100644
--- /dev/null	(date 1660734983524)
+++ b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_linux.go	(date 1660734983524)
@@ -0,0 +1,400 @@
+//go:build linux
+// +build linux
+
+package cpu
+
+import (
+	"context"
+	"errors"
+	"fmt"
+	"path/filepath"
+	"strconv"
+	"strings"
+
+	"github.com/shirou/gopsutil/v3/internal/common"
+	"github.com/tklauser/go-sysconf"
+)
+
+var ClocksPerSec = float64(100)
+
+func init() {
+	clkTck, err := sysconf.Sysconf(sysconf.SC_CLK_TCK)
+	// ignore errors
+	if err == nil {
+		ClocksPerSec = float64(clkTck)
+	}
+}
+
+func Times(percpu bool) ([]TimesStat, error) {
+	return TimesWithContext(context.Background(), percpu)
+}
+
+func TimesWithContext(ctx context.Context, percpu bool) ([]TimesStat, error) {
+	filename := common.HostProc("stat")
+	lines := []string{}
+	if percpu {
+		statlines, err := common.ReadLines(filename)
+		if err != nil || len(statlines) < 2 {
+			return []TimesStat{}, nil
+		}
+		for _, line := range statlines[1:] {
+			if !strings.HasPrefix(line, "cpu") {
+				break
+			}
+			lines = append(lines, line)
+		}
+	} else {
+		lines, _ = common.ReadLinesOffsetN(filename, 0, 1)
+	}
+
+	ret := make([]TimesStat, 0, len(lines))
+
+	for _, line := range lines {
+		ct, err := parseStatLine(line)
+		if err != nil {
+			continue
+		}
+		ret = append(ret, *ct)
+
+	}
+	return ret, nil
+}
+
+func sysCPUPath(cpu int32, relPath string) string {
+	return common.HostSys(fmt.Sprintf("devices/system/cpu/cpu%d", cpu), relPath)
+}
+
+func finishCPUInfo(c *InfoStat) {
+	var lines []string
+	var err error
+	var value float64
+
+	if len(c.CoreID) == 0 {
+		lines, err = common.ReadLines(sysCPUPath(c.CPU, "topology/core_id"))
+		if err == nil {
+			c.CoreID = lines[0]
+		}
+	}
+
+	// override the value of c.Mhz with cpufreq/cpuinfo_max_freq regardless
+	// of the value from /proc/cpuinfo because we want to report the maximum
+	// clock-speed of the CPU for c.Mhz, matching the behaviour of Windows
+	lines, err = common.ReadLines(sysCPUPath(c.CPU, "cpufreq/cpuinfo_max_freq"))
+	// if we encounter errors below such as there are no cpuinfo_max_freq file,
+	// we just ignore. so let Mhz is 0.
+	if err != nil || len(lines) == 0 {
+		return
+	}
+	value, err = strconv.ParseFloat(lines[0], 64)
+	if err != nil {
+		return
+	}
+	c.Mhz = value / 1000.0 // value is in kHz
+	if c.Mhz > 9999 {
+		c.Mhz = c.Mhz / 1000.0 // value in Hz
+	}
+}
+
+// CPUInfo on linux will return 1 item per physical thread.
+//
+// CPUs have three levels of counting: sockets, cores, threads.
+// Cores with HyperThreading count as having 2 threads per core.
+// Sockets often come with many physical CPU cores.
+// For example a single socket board with two cores each with HT will
+// return 4 CPUInfoStat structs on Linux and the "Cores" field set to 1.
+func Info() ([]InfoStat, error) {
+	return InfoWithContext(context.Background())
+}
+
+func InfoWithContext(ctx context.Context) ([]InfoStat, error) {
+	filename := common.HostProc("cpuinfo")
+	lines, _ := common.ReadLines(filename)
+
+	var ret []InfoStat
+	var processorName string
+
+	c := InfoStat{CPU: -1, Cores: 1}
+	for _, line := range lines {
+		fields := strings.Split(line, ":")
+		if len(fields) < 2 {
+			continue
+		}
+		key := strings.TrimSpace(fields[0])
+		value := strings.TrimSpace(fields[1])
+
+		switch key {
+		case "Processor":
+			processorName = value
+		case "processor":
+			if c.CPU >= 0 {
+				finishCPUInfo(&c)
+				ret = append(ret, c)
+			}
+			c = InfoStat{Cores: 1, ModelName: processorName}
+			t, err := strconv.ParseInt(value, 10, 64)
+			if err != nil {
+				return ret, err
+			}
+			c.CPU = int32(t)
+		case "vendorId", "vendor_id":
+			c.VendorID = value
+		case "CPU implementer":
+			if v, err := strconv.ParseUint(value, 0, 8); err == nil {
+				switch v {
+				case 0x41:
+					c.VendorID = "ARM"
+				case 0x42:
+					c.VendorID = "Broadcom"
+				case 0x43:
+					c.VendorID = "Cavium"
+				case 0x44:
+					c.VendorID = "DEC"
+				case 0x46:
+					c.VendorID = "Fujitsu"
+				case 0x48:
+					c.VendorID = "HiSilicon"
+				case 0x49:
+					c.VendorID = "Infineon"
+				case 0x4d:
+					c.VendorID = "Motorola/Freescale"
+				case 0x4e:
+					c.VendorID = "NVIDIA"
+				case 0x50:
+					c.VendorID = "APM"
+				case 0x51:
+					c.VendorID = "Qualcomm"
+				case 0x56:
+					c.VendorID = "Marvell"
+				case 0x61:
+					c.VendorID = "Apple"
+				case 0x69:
+					c.VendorID = "Intel"
+				case 0xc0:
+					c.VendorID = "Ampere"
+				}
+			}
+		case "cpu family":
+			c.Family = value
+		case "model", "CPU part":
+			c.Model = value
+		case "model name", "cpu":
+			c.ModelName = value
+			if strings.Contains(value, "POWER8") ||
+				strings.Contains(value, "POWER7") {
+				c.Model = strings.Split(value, " ")[0]
+				c.Family = "POWER"
+				c.VendorID = "IBM"
+			}
+		case "stepping", "revision", "CPU revision":
+			val := value
+
+			if key == "revision" {
+				val = strings.Split(value, ".")[0]
+			}
+
+			t, err := strconv.ParseInt(val, 10, 64)
+			if err != nil {
+				return ret, err
+			}
+			c.Stepping = int32(t)
+		case "cpu MHz", "clock":
+			// treat this as the fallback value, thus we ignore error
+			if t, err := strconv.ParseFloat(strings.Replace(value, "MHz", "", 1), 64); err == nil {
+				c.Mhz = t
+			}
+		case "cache size":
+			t, err := strconv.ParseInt(strings.Replace(value, " KB", "", 1), 10, 64)
+			if err != nil {
+				return ret, err
+			}
+			c.CacheSize = int32(t)
+		case "physical id":
+			c.PhysicalID = value
+		case "core id":
+			c.CoreID = value
+		case "flags", "Features":
+			c.Flags = strings.FieldsFunc(value, func(r rune) bool {
+				return r == ',' || r == ' '
+			})
+		case "microcode":
+			c.Microcode = value
+		}
+	}
+	if c.CPU >= 0 {
+		finishCPUInfo(&c)
+		ret = append(ret, c)
+	}
+	return ret, nil
+}
+
+func parseStatLine(line string) (*TimesStat, error) {
+	fields := strings.Fields(line)
+
+	if len(fields) == 0 {
+		return nil, errors.New("stat does not contain cpu info")
+	}
+
+	if !strings.HasPrefix(fields[0], "cpu") {
+		return nil, errors.New("not contain cpu")
+	}
+
+	cpu := fields[0]
+	if cpu == "cpu" {
+		cpu = "cpu-total"
+	}
+	user, err := strconv.ParseFloat(fields[1], 64)
+	if err != nil {
+		return nil, err
+	}
+	nice, err := strconv.ParseFloat(fields[2], 64)
+	if err != nil {
+		return nil, err
+	}
+	system, err := strconv.ParseFloat(fields[3], 64)
+	if err != nil {
+		return nil, err
+	}
+	idle, err := strconv.ParseFloat(fields[4], 64)
+	if err != nil {
+		return nil, err
+	}
+	iowait, err := strconv.ParseFloat(fields[5], 64)
+	if err != nil {
+		return nil, err
+	}
+	irq, err := strconv.ParseFloat(fields[6], 64)
+	if err != nil {
+		return nil, err
+	}
+	softirq, err := strconv.ParseFloat(fields[7], 64)
+	if err != nil {
+		return nil, err
+	}
+
+	ct := &TimesStat{
+		CPU:     cpu,
+		User:    user / ClocksPerSec,
+		Nice:    nice / ClocksPerSec,
+		System:  system / ClocksPerSec,
+		Idle:    idle / ClocksPerSec,
+		Iowait:  iowait / ClocksPerSec,
+		Irq:     irq / ClocksPerSec,
+		Softirq: softirq / ClocksPerSec,
+	}
+	if len(fields) > 8 { // Linux >= 2.6.11
+		steal, err := strconv.ParseFloat(fields[8], 64)
+		if err != nil {
+			return nil, err
+		}
+		ct.Steal = steal / ClocksPerSec
+	}
+	if len(fields) > 9 { // Linux >= 2.6.24
+		guest, err := strconv.ParseFloat(fields[9], 64)
+		if err != nil {
+			return nil, err
+		}
+		ct.Guest = guest / ClocksPerSec
+	}
+	if len(fields) > 10 { // Linux >= 3.2.0
+		guestNice, err := strconv.ParseFloat(fields[10], 64)
+		if err != nil {
+			return nil, err
+		}
+		ct.GuestNice = guestNice / ClocksPerSec
+	}
+
+	return ct, nil
+}
+
+func CountsWithContext(ctx context.Context, logical bool) (int, error) {
+	if logical {
+		ret := 0
+		// https://github.com/giampaolo/psutil/blob/d01a9eaa35a8aadf6c519839e987a49d8be2d891/psutil/_pslinux.py#L599
+		procCpuinfo := common.HostProc("cpuinfo")
+		lines, err := common.ReadLines(procCpuinfo)
+		if err == nil {
+			for _, line := range lines {
+				line = strings.ToLower(line)
+				if strings.HasPrefix(line, "processor") {
+					_, err = strconv.Atoi(strings.TrimSpace(line[strings.IndexByte(line, ':')+1:]))
+					if err == nil {
+						ret++
+					}
+				}
+			}
+		}
+		if ret == 0 {
+			procStat := common.HostProc("stat")
+			lines, err = common.ReadLines(procStat)
+			if err != nil {
+				return 0, err
+			}
+			for _, line := range lines {
+				if len(line) >= 4 && strings.HasPrefix(line, "cpu") && '0' <= line[3] && line[3] <= '9' { // `^cpu\d` regexp matching
+					ret++
+				}
+			}
+		}
+		return ret, nil
+	}
+	// physical cores
+	// https://github.com/giampaolo/psutil/blob/8415355c8badc9c94418b19bdf26e622f06f0cce/psutil/_pslinux.py#L615-L628
+	threadSiblingsLists := make(map[string]bool)
+	// These 2 files are the same but */core_cpus_list is newer while */thread_siblings_list is deprecated and may disappear in the future.
+	// https://www.kernel.org/doc/Documentation/admin-guide/cputopology.rst
+	// https://github.com/giampaolo/psutil/pull/1727#issuecomment-707624964
+	// https://lkml.org/lkml/2019/2/26/41
+	for _, glob := range []string{"devices/system/cpu/cpu[0-9]*/topology/core_cpus_list", "devices/system/cpu/cpu[0-9]*/topology/thread_siblings_list"} {
+		if files, err := filepath.Glob(common.HostSys(glob)); err == nil {
+			for _, file := range files {
+				lines, err := common.ReadLines(file)
+				if err != nil || len(lines) != 1 {
+					continue
+				}
+				threadSiblingsLists[lines[0]] = true
+			}
+			ret := len(threadSiblingsLists)
+			if ret != 0 {
+				return ret, nil
+			}
+		}
+	}
+	// https://github.com/giampaolo/psutil/blob/122174a10b75c9beebe15f6c07dcf3afbe3b120d/psutil/_pslinux.py#L631-L652
+	filename := common.HostProc("cpuinfo")
+	lines, err := common.ReadLines(filename)
+	if err != nil {
+		return 0, err
+	}
+	mapping := make(map[int]int)
+	currentInfo := make(map[string]int)
+	for _, line := range lines {
+		line = strings.ToLower(strings.TrimSpace(line))
+		if line == "" {
+			// new section
+			id, okID := currentInfo["physical id"]
+			cores, okCores := currentInfo["cpu cores"]
+			if okID && okCores {
+				mapping[id] = cores
+			}
+			currentInfo = make(map[string]int)
+			continue
+		}
+		fields := strings.Split(line, ":")
+		if len(fields) < 2 {
+			continue
+		}
+		fields[0] = strings.TrimSpace(fields[0])
+		if fields[0] == "physical id" || fields[0] == "cpu cores" {
+			val, err := strconv.Atoi(strings.TrimSpace(fields[1]))
+			if err != nil {
+				continue
+			}
+			currentInfo[fields[0]] = val
+		}
+	}
+	ret := 0
+	for _, v := range mapping {
+		ret += v
+	}
+	return ret, nil
+}
Index: vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd.go b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd.go
new file mode 100644
--- /dev/null	(date 1660734983525)
+++ b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd.go	(date 1660734983525)
@@ -0,0 +1,137 @@
+//go:build openbsd
+// +build openbsd
+
+package cpu
+
+import (
+	"context"
+	"fmt"
+	"runtime"
+	"unsafe"
+
+	"github.com/shirou/gopsutil/v3/internal/common"
+	"github.com/tklauser/go-sysconf"
+	"golang.org/x/sys/unix"
+)
+
+const (
+	// sys/sched.h
+	cpuOnline = 0x0001 // CPUSTATS_ONLINE
+
+	// sys/sysctl.h
+	ctlKern      = 1  // "high kernel": proc, limits
+	ctlHw        = 6  // CTL_HW
+	smt          = 24 // HW_SMT
+	kernCpTime   = 40 // KERN_CPTIME
+	kernCPUStats = 85 // KERN_CPUSTATS
+)
+
+var ClocksPerSec = float64(128)
+
+type cpuStats struct {
+	// cs_time[CPUSTATES]
+	User uint64
+	Nice uint64
+	Sys  uint64
+	Spin uint64
+	Intr uint64
+	Idle uint64
+
+	// cs_flags
+	Flags uint64
+}
+
+func init() {
+	clkTck, err := sysconf.Sysconf(sysconf.SC_CLK_TCK)
+	// ignore errors
+	if err == nil {
+		ClocksPerSec = float64(clkTck)
+	}
+}
+
+func Times(percpu bool) ([]TimesStat, error) {
+	return TimesWithContext(context.Background(), percpu)
+}
+
+func TimesWithContext(ctx context.Context, percpu bool) (ret []TimesStat, err error) {
+	if !percpu {
+		mib := []int32{ctlKern, kernCpTime}
+		buf, _, err := common.CallSyscall(mib)
+		if err != nil {
+			return ret, err
+		}
+		times := (*cpuTimes)(unsafe.Pointer(&buf[0]))
+		stat := TimesStat{
+			CPU:    "cpu-total",
+			User:   float64(times.User) / ClocksPerSec,
+			Nice:   float64(times.Nice) / ClocksPerSec,
+			System: float64(times.Sys) / ClocksPerSec,
+			Idle:   float64(times.Idle) / ClocksPerSec,
+			Irq:    float64(times.Intr) / ClocksPerSec,
+		}
+		return []TimesStat{stat}, nil
+	}
+
+	ncpu, err := unix.SysctlUint32("hw.ncpu")
+	if err != nil {
+		return
+	}
+
+	var i uint32
+	for i = 0; i < ncpu; i++ {
+		mib := []int32{ctlKern, kernCPUStats, int32(i)}
+		buf, _, err := common.CallSyscall(mib)
+		if err != nil {
+			return ret, err
+		}
+
+		stats := (*cpuStats)(unsafe.Pointer(&buf[0]))
+		if (stats.Flags & cpuOnline) == 0 {
+			continue
+		}
+		ret = append(ret, TimesStat{
+			CPU:    fmt.Sprintf("cpu%d", i),
+			User:   float64(stats.User) / ClocksPerSec,
+			Nice:   float64(stats.Nice) / ClocksPerSec,
+			System: float64(stats.Sys) / ClocksPerSec,
+			Idle:   float64(stats.Idle) / ClocksPerSec,
+			Irq:    float64(stats.Intr) / ClocksPerSec,
+		})
+	}
+
+	return ret, nil
+}
+
+// Returns only one (minimal) CPUInfoStat on OpenBSD
+func Info() ([]InfoStat, error) {
+	return InfoWithContext(context.Background())
+}
+
+func InfoWithContext(ctx context.Context) ([]InfoStat, error) {
+	var ret []InfoStat
+	var err error
+
+	c := InfoStat{}
+
+	mhz, err := unix.SysctlUint32("hw.cpuspeed")
+	if err != nil {
+		return nil, err
+	}
+	c.Mhz = float64(mhz)
+
+	ncpu, err := unix.SysctlUint32("hw.ncpuonline")
+	if err != nil {
+		return nil, err
+	}
+	c.Cores = int32(ncpu)
+
+	if c.ModelName, err = unix.Sysctl("hw.model"); err != nil {
+		return nil, err
+	}
+
+	return append(ret, c), nil
+}
+
+func CountsWithContext(ctx context.Context, logical bool) (int, error) {
+	return runtime.NumCPU(), nil
+}
Index: vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd_386.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd_386.go b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd_386.go
new file mode 100644
--- /dev/null	(date 1660734983526)
+++ b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd_386.go	(date 1660734983526)
@@ -0,0 +1,10 @@
+package cpu
+
+type cpuTimes struct {
+	User uint32
+	Nice uint32
+	Sys  uint32
+	Spin uint32
+	Intr uint32
+	Idle uint32
+}
Index: vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd_amd64.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd_amd64.go b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd_amd64.go
new file mode 100644
--- /dev/null	(date 1660734983527)
+++ b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd_amd64.go	(date 1660734983527)
@@ -0,0 +1,10 @@
+package cpu
+
+type cpuTimes struct {
+	User uint64
+	Nice uint64
+	Sys  uint64
+	Spin uint64
+	Intr uint64
+	Idle uint64
+}
Index: vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd_arm.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd_arm.go b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd_arm.go
new file mode 100644
--- /dev/null	(date 1660734983528)
+++ b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd_arm.go	(date 1660734983528)
@@ -0,0 +1,10 @@
+package cpu
+
+type cpuTimes struct {
+	User uint32
+	Nice uint32
+	Sys  uint32
+	Spin uint32
+	Intr uint32
+	Idle uint32
+}
Index: vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd_arm64.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd_arm64.go b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd_arm64.go
new file mode 100644
--- /dev/null	(date 1660734983530)
+++ b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_openbsd_arm64.go	(date 1660734983530)
@@ -0,0 +1,10 @@
+package cpu
+
+type cpuTimes struct {
+	User uint64
+	Nice uint64
+	Sys  uint64
+	Spin uint64
+	Intr uint64
+	Idle uint64
+}
Index: vendor/github.com/shirou/gopsutil/v3/cpu/cpu_plan9.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_plan9.go b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_plan9.go
new file mode 100644
--- /dev/null	(date 1660734983531)
+++ b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_plan9.go	(date 1660734983531)
@@ -0,0 +1,50 @@
+//go:build plan9
+// +build plan9
+
+package cpu
+
+import (
+	"context"
+	"os"
+	"runtime"
+
+	stats "github.com/lufia/plan9stats"
+	"github.com/shirou/gopsutil/v3/internal/common"
+)
+
+func Times(percpu bool) ([]TimesStat, error) {
+	return TimesWithContext(context.Background(), percpu)
+}
+
+func TimesWithContext(ctx context.Context, percpu bool) ([]TimesStat, error) {
+	// BUG: percpu flag is not supported yet.
+	root := os.Getenv("HOST_ROOT")
+	c, err := stats.ReadCPUType(ctx, stats.WithRootDir(root))
+	if err != nil {
+		return nil, err
+	}
+	s, err := stats.ReadCPUStats(ctx, stats.WithRootDir(root))
+	if err != nil {
+		return nil, err
+	}
+	return []TimesStat{
+		{
+			CPU:    c.Name,
+			User:   s.User.Seconds(),
+			System: s.Sys.Seconds(),
+			Idle:   s.Idle.Seconds(),
+		},
+	}, nil
+}
+
+func Info() ([]InfoStat, error) {
+	return InfoWithContext(context.Background())
+}
+
+func InfoWithContext(ctx context.Context) ([]InfoStat, error) {
+	return []InfoStat{}, common.ErrNotImplementedError
+}
+
+func CountsWithContext(ctx context.Context, logical bool) (int, error) {
+	return runtime.NumCPU(), nil
+}
Index: vendor/github.com/shirou/gopsutil/v3/cpu/cpu_solaris.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_solaris.go b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_solaris.go
new file mode 100644
--- /dev/null	(date 1660734983533)
+++ b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_solaris.go	(date 1660734983533)
@@ -0,0 +1,268 @@
+package cpu
+
+import (
+	"context"
+	"errors"
+	"fmt"
+	"regexp"
+	"runtime"
+	"sort"
+	"strconv"
+	"strings"
+
+	"github.com/tklauser/go-sysconf"
+)
+
+var ClocksPerSec = float64(128)
+
+func init() {
+	clkTck, err := sysconf.Sysconf(sysconf.SC_CLK_TCK)
+	// ignore errors
+	if err == nil {
+		ClocksPerSec = float64(clkTck)
+	}
+}
+
+// sum all values in a float64 map with float64 keys
+func msum(x map[float64]float64) float64 {
+	total := 0.0
+	for _, y := range x {
+		total += y
+	}
+	return total
+}
+
+func Times(percpu bool) ([]TimesStat, error) {
+	return TimesWithContext(context.Background(), percpu)
+}
+
+func TimesWithContext(ctx context.Context, percpu bool) ([]TimesStat, error) {
+	kstatSysOut, err := invoke.CommandWithContext(ctx, "kstat", "-p", "cpu_stat:*:*:/^idle$|^user$|^kernel$|^iowait$|^swap$/")
+	if err != nil {
+		return nil, fmt.Errorf("cannot execute kstat: %s", err)
+	}
+	cpu := make(map[float64]float64)
+	idle := make(map[float64]float64)
+	user := make(map[float64]float64)
+	kern := make(map[float64]float64)
+	iowt := make(map[float64]float64)
+	// swap := make(map[float64]float64)
+	re := regexp.MustCompile(`[:\s]+`)
+	for _, line := range strings.Split(string(kstatSysOut), "\n") {
+		fields := re.Split(line, -1)
+		if fields[0] != "cpu_stat" {
+			continue
+		}
+		cpuNumber, err := strconv.ParseFloat(fields[1], 64)
+		if err != nil {
+			return nil, fmt.Errorf("cannot parse cpu number: %s", err)
+		}
+		cpu[cpuNumber] = cpuNumber
+		switch fields[3] {
+		case "idle":
+			idle[cpuNumber], err = strconv.ParseFloat(fields[4], 64)
+			if err != nil {
+				return nil, fmt.Errorf("cannot parse idle: %s", err)
+			}
+		case "user":
+			user[cpuNumber], err = strconv.ParseFloat(fields[4], 64)
+			if err != nil {
+				return nil, fmt.Errorf("cannot parse user: %s", err)
+			}
+		case "kernel":
+			kern[cpuNumber], err = strconv.ParseFloat(fields[4], 64)
+			if err != nil {
+				return nil, fmt.Errorf("cannot parse kernel: %s", err)
+			}
+		case "iowait":
+			iowt[cpuNumber], err = strconv.ParseFloat(fields[4], 64)
+			if err != nil {
+				return nil, fmt.Errorf("cannot parse iowait: %s", err)
+			}
+			//not sure how this translates, don't report, add to kernel, something else?
+			/*case "swap":
+			swap[cpuNumber], err = strconv.ParseFloat(fields[4], 64)
+			if err != nil {
+				return nil, fmt.Errorf("cannot parse swap: %s", err)
+			} */
+		}
+	}
+	ret := make([]TimesStat, 0, len(cpu))
+	if percpu {
+		for _, c := range cpu {
+			ct := &TimesStat{
+				CPU:    fmt.Sprintf("cpu%d", int(cpu[c])),
+				Idle:   idle[c] / ClocksPerSec,
+				User:   user[c] / ClocksPerSec,
+				System: kern[c] / ClocksPerSec,
+				Iowait: iowt[c] / ClocksPerSec,
+			}
+			ret = append(ret, *ct)
+		}
+	} else {
+		ct := &TimesStat{
+			CPU:    "cpu-total",
+			Idle:   msum(idle) / ClocksPerSec,
+			User:   msum(user) / ClocksPerSec,
+			System: msum(kern) / ClocksPerSec,
+			Iowait: msum(iowt) / ClocksPerSec,
+		}
+		ret = append(ret, *ct)
+	}
+	return ret, nil
+}
+
+func Info() ([]InfoStat, error) {
+	return InfoWithContext(context.Background())
+}
+
+func InfoWithContext(ctx context.Context) ([]InfoStat, error) {
+	psrInfoOut, err := invoke.CommandWithContext(ctx, "psrinfo", "-p", "-v")
+	if err != nil {
+		return nil, fmt.Errorf("cannot execute psrinfo: %s", err)
+	}
+
+	procs, err := parseProcessorInfo(string(psrInfoOut))
+	if err != nil {
+		return nil, fmt.Errorf("error parsing psrinfo output: %s", err)
+	}
+
+	isaInfoOut, err := invoke.CommandWithContext(ctx, "isainfo", "-b", "-v")
+	if err != nil {
+		return nil, fmt.Errorf("cannot execute isainfo: %s", err)
+	}
+
+	flags, err := parseISAInfo(string(isaInfoOut))
+	if err != nil {
+		return nil, fmt.Errorf("error parsing isainfo output: %s", err)
+	}
+
+	result := make([]InfoStat, 0, len(flags))
+	for _, proc := range procs {
+		procWithFlags := proc
+		procWithFlags.Flags = flags
+		result = append(result, procWithFlags)
+	}
+
+	return result, nil
+}
+
+var flagsMatch = regexp.MustCompile(`[\w\.]+`)
+
+func parseISAInfo(cmdOutput string) ([]string, error) {
+	words := flagsMatch.FindAllString(cmdOutput, -1)
+
+	// Sanity check the output
+	if len(words) < 4 || words[1] != "bit" || words[3] != "applications" {
+		return nil, errors.New("attempted to parse invalid isainfo output")
+	}
+
+	flags := make([]string, len(words)-4)
+	for i, val := range words[4:] {
+		flags[i] = val
+	}
+	sort.Strings(flags)
+
+	return flags, nil
+}
+
+var psrInfoMatch = regexp.MustCompile(`The physical processor has (?:([\d]+) virtual processors? \(([\d-]+)\)|([\d]+) cores and ([\d]+) virtual processors[^\n]+)\n(?:\s+ The core has.+\n)*\s+.+ \((\w+) ([\S]+) family (.+) model (.+) step (.+) clock (.+) MHz\)\n[\s]*(.*)`)
+
+const (
+	psrNumCoresOffset   = 1
+	psrNumCoresHTOffset = 3
+	psrNumHTOffset      = 4
+	psrVendorIDOffset   = 5
+	psrFamilyOffset     = 7
+	psrModelOffset      = 8
+	psrStepOffset       = 9
+	psrClockOffset      = 10
+	psrModelNameOffset  = 11
+)
+
+func parseProcessorInfo(cmdOutput string) ([]InfoStat, error) {
+	matches := psrInfoMatch.FindAllStringSubmatch(cmdOutput, -1)
+
+	var infoStatCount int32
+	result := make([]InfoStat, 0, len(matches))
+	for physicalIndex, physicalCPU := range matches {
+		var step int32
+		var clock float64
+
+		if physicalCPU[psrStepOffset] != "" {
+			stepParsed, err := strconv.ParseInt(physicalCPU[psrStepOffset], 10, 32)
+			if err != nil {
+				return nil, fmt.Errorf("cannot parse value %q for step as 32-bit integer: %s", physicalCPU[9], err)
+			}
+			step = int32(stepParsed)
+		}
+
+		if physicalCPU[psrClockOffset] != "" {
+			clockParsed, err := strconv.ParseInt(physicalCPU[psrClockOffset], 10, 64)
+			if err != nil {
+				return nil, fmt.Errorf("cannot parse value %q for clock as 32-bit integer: %s", physicalCPU[10], err)
+			}
+			clock = float64(clockParsed)
+		}
+
+		var err error
+		var numCores int64
+		var numHT int64
+		switch {
+		case physicalCPU[psrNumCoresOffset] != "":
+			numCores, err = strconv.ParseInt(physicalCPU[psrNumCoresOffset], 10, 32)
+			if err != nil {
+				return nil, fmt.Errorf("cannot parse value %q for core count as 32-bit integer: %s", physicalCPU[1], err)
+			}
+
+			for i := 0; i < int(numCores); i++ {
+				result = append(result, InfoStat{
+					CPU:        infoStatCount,
+					PhysicalID: strconv.Itoa(physicalIndex),
+					CoreID:     strconv.Itoa(i),
+					Cores:      1,
+					VendorID:   physicalCPU[psrVendorIDOffset],
+					ModelName:  physicalCPU[psrModelNameOffset],
+					Family:     physicalCPU[psrFamilyOffset],
+					Model:      physicalCPU[psrModelOffset],
+					Stepping:   step,
+					Mhz:        clock,
+				})
+				infoStatCount++
+			}
+		case physicalCPU[psrNumCoresHTOffset] != "":
+			numCores, err = strconv.ParseInt(physicalCPU[psrNumCoresHTOffset], 10, 32)
+			if err != nil {
+				return nil, fmt.Errorf("cannot parse value %q for core count as 32-bit integer: %s", physicalCPU[3], err)
+			}
+
+			numHT, err = strconv.ParseInt(physicalCPU[psrNumHTOffset], 10, 32)
+			if err != nil {
+				return nil, fmt.Errorf("cannot parse value %q for hyperthread count as 32-bit integer: %s", physicalCPU[4], err)
+			}
+
+			for i := 0; i < int(numCores); i++ {
+				result = append(result, InfoStat{
+					CPU:        infoStatCount,
+					PhysicalID: strconv.Itoa(physicalIndex),
+					CoreID:     strconv.Itoa(i),
+					Cores:      int32(numHT) / int32(numCores),
+					VendorID:   physicalCPU[psrVendorIDOffset],
+					ModelName:  physicalCPU[psrModelNameOffset],
+					Family:     physicalCPU[psrFamilyOffset],
+					Model:      physicalCPU[psrModelOffset],
+					Stepping:   step,
+					Mhz:        clock,
+				})
+				infoStatCount++
+			}
+		default:
+			return nil, errors.New("values for cores with and without hyperthreading are both set")
+		}
+	}
+	return result, nil
+}
+
+func CountsWithContext(ctx context.Context, logical bool) (int, error) {
+	return runtime.NumCPU(), nil
+}
Index: vendor/github.com/shirou/gopsutil/v3/cpu/cpu_windows.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_windows.go b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_windows.go
new file mode 100644
--- /dev/null	(date 1660734983534)
+++ b/vendor/github.com/shirou/gopsutil/v3/cpu/cpu_windows.go	(date 1660734983534)
@@ -0,0 +1,233 @@
+//go:build windows
+// +build windows
+
+package cpu
+
+import (
+	"context"
+	"fmt"
+	"unsafe"
+
+	"github.com/shirou/gopsutil/v3/internal/common"
+	"github.com/yusufpapurcu/wmi"
+	"golang.org/x/sys/windows"
+)
+
+var (
+	procGetActiveProcessorCount = common.Modkernel32.NewProc("GetActiveProcessorCount")
+	procGetNativeSystemInfo     = common.Modkernel32.NewProc("GetNativeSystemInfo")
+)
+
+type win32_Processor struct {
+	Family                    uint16
+	Manufacturer              string
+	Name                      string
+	NumberOfLogicalProcessors uint32
+	NumberOfCores             uint32
+	ProcessorID               *string
+	Stepping                  *string
+	MaxClockSpeed             uint32
+}
+
+// SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION
+// defined in windows api doc with the following
+// https://docs.microsoft.com/en-us/windows/desktop/api/winternl/nf-winternl-ntquerysysteminformation#system_processor_performance_information
+// additional fields documented here
+// https://www.geoffchappell.com/studies/windows/km/ntoskrnl/api/ex/sysinfo/processor_performance.htm
+type win32_SystemProcessorPerformanceInformation struct {
+	IdleTime       int64 // idle time in 100ns (this is not a filetime).
+	KernelTime     int64 // kernel time in 100ns.  kernel time includes idle time. (this is not a filetime).
+	UserTime       int64 // usertime in 100ns (this is not a filetime).
+	DpcTime        int64 // dpc time in 100ns (this is not a filetime).
+	InterruptTime  int64 // interrupt time in 100ns
+	InterruptCount uint32
+}
+
+const (
+	ClocksPerSec = 10000000.0
+
+	// systemProcessorPerformanceInformationClass information class to query with NTQuerySystemInformation
+	// https://processhacker.sourceforge.io/doc/ntexapi_8h.html#ad5d815b48e8f4da1ef2eb7a2f18a54e0
+	win32_SystemProcessorPerformanceInformationClass = 8
+
+	// size of systemProcessorPerformanceInfoSize in memory
+	win32_SystemProcessorPerformanceInfoSize = uint32(unsafe.Sizeof(win32_SystemProcessorPerformanceInformation{}))
+)
+
+// Times returns times stat per cpu and combined for all CPUs
+func Times(percpu bool) ([]TimesStat, error) {
+	return TimesWithContext(context.Background(), percpu)
+}
+
+func TimesWithContext(ctx context.Context, percpu bool) ([]TimesStat, error) {
+	if percpu {
+		return perCPUTimes()
+	}
+
+	var ret []TimesStat
+	var lpIdleTime common.FILETIME
+	var lpKernelTime common.FILETIME
+	var lpUserTime common.FILETIME
+	r, _, _ := common.ProcGetSystemTimes.Call(
+		uintptr(unsafe.Pointer(&lpIdleTime)),
+		uintptr(unsafe.Pointer(&lpKernelTime)),
+		uintptr(unsafe.Pointer(&lpUserTime)))
+	if r == 0 {
+		return ret, windows.GetLastError()
+	}
+
+	LOT := float64(0.0000001)
+	HIT := (LOT * 4294967296.0)
+	idle := ((HIT * float64(lpIdleTime.DwHighDateTime)) + (LOT * float64(lpIdleTime.DwLowDateTime)))
+	user := ((HIT * float64(lpUserTime.DwHighDateTime)) + (LOT * float64(lpUserTime.DwLowDateTime)))
+	kernel := ((HIT * float64(lpKernelTime.DwHighDateTime)) + (LOT * float64(lpKernelTime.DwLowDateTime)))
+	system := (kernel - idle)
+
+	ret = append(ret, TimesStat{
+		CPU:    "cpu-total",
+		Idle:   float64(idle),
+		User:   float64(user),
+		System: float64(system),
+	})
+	return ret, nil
+}
+
+func Info() ([]InfoStat, error) {
+	return InfoWithContext(context.Background())
+}
+
+func InfoWithContext(ctx context.Context) ([]InfoStat, error) {
+	var ret []InfoStat
+	var dst []win32_Processor
+	q := wmi.CreateQuery(&dst, "")
+	if err := common.WMIQueryWithContext(ctx, q, &dst); err != nil {
+		return ret, err
+	}
+
+	var procID string
+	for i, l := range dst {
+		procID = ""
+		if l.ProcessorID != nil {
+			procID = *l.ProcessorID
+		}
+
+		cpu := InfoStat{
+			CPU:        int32(i),
+			Family:     fmt.Sprintf("%d", l.Family),
+			VendorID:   l.Manufacturer,
+			ModelName:  l.Name,
+			Cores:      int32(l.NumberOfLogicalProcessors),
+			PhysicalID: procID,
+			Mhz:        float64(l.MaxClockSpeed),
+			Flags:      []string{},
+		}
+		ret = append(ret, cpu)
+	}
+
+	return ret, nil
+}
+
+// perCPUTimes returns times stat per cpu, per core and overall for all CPUs
+func perCPUTimes() ([]TimesStat, error) {
+	var ret []TimesStat
+	stats, err := perfInfo()
+	if err != nil {
+		return nil, err
+	}
+	for core, v := range stats {
+		c := TimesStat{
+			CPU:    fmt.Sprintf("cpu%d", core),
+			User:   float64(v.UserTime) / ClocksPerSec,
+			System: float64(v.KernelTime-v.IdleTime) / ClocksPerSec,
+			Idle:   float64(v.IdleTime) / ClocksPerSec,
+			Irq:    float64(v.InterruptTime) / ClocksPerSec,
+		}
+		ret = append(ret, c)
+	}
+	return ret, nil
+}
+
+// makes call to Windows API function to retrieve performance information for each core
+func perfInfo() ([]win32_SystemProcessorPerformanceInformation, error) {
+	// Make maxResults large for safety.
+	// We can't invoke the api call with a results array that's too small.
+	// If we have more than 2056 cores on a single host, then it's probably the future.
+	maxBuffer := 2056
+	// buffer for results from the windows proc
+	resultBuffer := make([]win32_SystemProcessorPerformanceInformation, maxBuffer)
+	// size of the buffer in memory
+	bufferSize := uintptr(win32_SystemProcessorPerformanceInfoSize) * uintptr(maxBuffer)
+	// size of the returned response
+	var retSize uint32
+
+	// Invoke windows api proc.
+	// The returned err from the windows dll proc will always be non-nil even when successful.
+	// See https://godoc.org/golang.org/x/sys/windows#LazyProc.Call for more information
+	retCode, _, err := common.ProcNtQuerySystemInformation.Call(
+		win32_SystemProcessorPerformanceInformationClass, // System Information Class -> SystemProcessorPerformanceInformation
+		uintptr(unsafe.Pointer(&resultBuffer[0])),        // pointer to first element in result buffer
+		bufferSize,                        // size of the buffer in memory
+		uintptr(unsafe.Pointer(&retSize)), // pointer to the size of the returned results the windows proc will set this
+	)
+
+	// check return code for errors
+	if retCode != 0 {
+		return nil, fmt.Errorf("call to NtQuerySystemInformation returned %d. err: %s", retCode, err.Error())
+	}
+
+	// calculate the number of returned elements based on the returned size
+	numReturnedElements := retSize / win32_SystemProcessorPerformanceInfoSize
+
+	// trim results to the number of returned elements
+	resultBuffer = resultBuffer[:numReturnedElements]
+
+	return resultBuffer, nil
+}
+
+// SystemInfo is an equivalent representation of SYSTEM_INFO in the Windows API.
+// https://msdn.microsoft.com/en-us/library/ms724958%28VS.85%29.aspx?f=255&MSPPError=-2147217396
+// https://github.com/elastic/go-windows/blob/bb1581babc04d5cb29a2bfa7a9ac6781c730c8dd/kernel32.go#L43
+type systemInfo struct {
+	wProcessorArchitecture      uint16
+	wReserved                   uint16
+	dwPageSize                  uint32
+	lpMinimumApplicationAddress uintptr
+	lpMaximumApplicationAddress uintptr
+	dwActiveProcessorMask       uintptr
+	dwNumberOfProcessors        uint32
+	dwProcessorType             uint32
+	dwAllocationGranularity     uint32
+	wProcessorLevel             uint16
+	wProcessorRevision          uint16
+}
+
+func CountsWithContext(ctx context.Context, logical bool) (int, error) {
+	if logical {
+		// https://github.com/giampaolo/psutil/blob/d01a9eaa35a8aadf6c519839e987a49d8be2d891/psutil/_psutil_windows.c#L97
+		err := procGetActiveProcessorCount.Find()
+		if err == nil { // Win7+
+			ret, _, _ := procGetActiveProcessorCount.Call(uintptr(0xffff)) // ALL_PROCESSOR_GROUPS is 0xffff according to Rust's winapi lib https://docs.rs/winapi/*/x86_64-pc-windows-msvc/src/winapi/shared/ntdef.rs.html#120
+			if ret != 0 {
+				return int(ret), nil
+			}
+		}
+		var systemInfo systemInfo
+		_, _, err = procGetNativeSystemInfo.Call(uintptr(unsafe.Pointer(&systemInfo)))
+		if systemInfo.dwNumberOfProcessors == 0 {
+			return 0, err
+		}
+		return int(systemInfo.dwNumberOfProcessors), nil
+	}
+	// physical cores https://github.com/giampaolo/psutil/blob/d01a9eaa35a8aadf6c519839e987a49d8be2d891/psutil/_psutil_windows.c#L499
+	// for the time being, try with unreliable and slow WMI call…
+	var dst []win32_Processor
+	q := wmi.CreateQuery(&dst, "")
+	if err := common.WMIQueryWithContext(ctx, q, &dst); err != nil {
+		return 0, err
+	}
+	var count uint32
+	for _, d := range dst {
+		count += d.NumberOfCores
+	}
+	return int(count), nil
+}
Index: go.sum
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>github.com/cpuguy83/go-md2man/v2 v2.0.2/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\r\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\r\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\r\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\r\ngithub.com/frankban/quicktest v1.14.3 h1:FJKSZTDHjyhriyC81FLQ0LY93eSai0ZyR/ZIkd3ZUKE=\r\ngithub.com/go-ole/go-ole v1.2.6 h1:/Fpf6oFPoeFik9ty7siob0G6Ke8QvQEuVcuChpwXzpY=\r\ngithub.com/go-ole/go-ole v1.2.6/go.mod h1:pprOEPIfldk/42T2oK7lQ4v4JSDwmV0As9GaiUsvbm0=\r\ngithub.com/google/go-cmp v0.5.6/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\r\ngithub.com/google/go-cmp v0.5.8 h1:e6P7q2lk1O+qJJb4BtCQXlK8vWEO8V1ZeuEdJNOqZyg=\r\ngithub.com/google/go-cmp v0.5.8/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\r\ngithub.com/inconshreveable/mousetrap v1.0.0 h1:Z8tu5sraLXCXIcARxBp/8cbvlwVa7Z1NHg9XEKhtSvM=\r\ngithub.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\r\ngithub.com/jedib0t/go-pretty/v6 v6.3.6 h1:A6w2BuyPMtf7M82BGRBys9bAba2C26ZX9lrlrZ7uH6U=\r\ngithub.com/jedib0t/go-pretty/v6 v6.3.6/go.mod h1:MgmISkTWDSFu0xOqiZ0mKNntMQ2mDgOcwOkwBEkMDJI=\r\ngithub.com/kr/pretty v0.3.0 h1:WgNl7dwNpEZ6jJ9k1snq4pZsg7DOEN8hP9Xw0Tsjwk0=\r\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\r\ngithub.com/lufia/plan9stats v0.0.0-20211012122336-39d0f177ccd0/go.mod h1:zJYVVT2jmtg6P3p1VtQj7WsuWi/y4VnjVBn7F8KPB3I=\r\ngithub.com/lufia/plan9stats v0.0.0-20220517141722-cf486979b281 h1:aczX6NMOtt6L4YT0fQvKkDK6LZEtdOso9sUH89V1+P0=\r\ngithub.com/lufia/plan9stats v0.0.0-20220517141722-cf486979b281/go.mod h1:lc+czkgO/8F7puNki5jk8QyujbfK1LOT7Wl0ON2hxyk=\r\ngithub.com/mattn/go-runewidth v0.0.13 h1:lTGmDsbAYt5DmK6OnoV7EuIF1wEIFAcxld6ypU4OSgU=\r\ngithub.com/mattn/go-runewidth v0.0.13/go.mod h1:Jdepj2loyihRzMpdS35Xk/zdY8IAYHsh153qUoGf23w=\r\ngithub.com/pkg/profile v1.6.0/go.mod h1:qBsxPvzyUincmltOk6iyRVxHYg4adc0OFOv72ZdLa18=\r\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\r\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\r\ngithub.com/power-devops/perfstat v0.0.0-20210106213030-5aafc221ea8c/go.mod h1:OmDBASR4679mdNQnz2pUhc2G8CO2JrUAVFDRBDP/hJE=\r\ngithub.com/power-devops/perfstat v0.0.0-20220216144756-c35f1ee13d7c h1:NRoLoZvkBTKvR5gQLgA3e0hqjkY9u1wm+iOL45VN/qI=\r\ngithub.com/power-devops/perfstat v0.0.0-20220216144756-c35f1ee13d7c/go.mod h1:OmDBASR4679mdNQnz2pUhc2G8CO2JrUAVFDRBDP/hJE=\r\ngithub.com/rivo/uniseg v0.2.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\r\ngithub.com/rivo/uniseg v0.3.4 h1:3Z3Eu6FGHZWSfNKJTOUiPatWwfc7DzJRU04jFUqJODw=\r\ngithub.com/rivo/uniseg v0.3.4/go.mod h1:FN3SvrM+Zdj16jyLfmOkMNblXMcoc8DfTHruCPUcx88=\r\ngithub.com/rogpeppe/go-internal v1.6.1 h1:/FiVV8dS/e+YqF2JvO3yXRFbBLTIuSDkuC7aBOAvL+k=\r\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\r\ngithub.com/shirou/gopsutil/v3 v3.22.7 h1:flKnuCMfUUrO+oAvwAd6GKZgnPzr098VA/UJ14nhJd4=\r\ngithub.com/shirou/gopsutil/v3 v3.22.7/go.mod h1:s648gW4IywYzUfE/KjXxUsqrqx/T2xO5VqOXxONeRfI=\r\ngithub.com/spf13/cast v1.5.0 h1:rj3WzYc11XZaIZMPKmwP96zkFEnnAmV8s6XbB2aY32w=\r\ngithub.com/spf13/cast v1.5.0/go.mod h1:SpXXQ5YoyJw6s3/6cMTQuxvgRl3PCJiyaX9p6b155UU=\r\ngithub.com/spf13/cobra v1.5.0 h1:X+jTBEBqF0bHN+9cSMgmfuvv2VHJ9ezmFNf9Y/XstYU=\r\ngithub.com/spf13/cobra v1.5.0/go.mod h1:dWXEIy2H428czQCjInthrTRUg7yKbok+2Qi/yBIJoUM=\r\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\r\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\r\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\r\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\r\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\r\ngithub.com/stretchr/testify v1.7.4/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\r\ngithub.com/stretchr/testify v1.8.0 h1:pSgiaMZlXftHpm5L7V1+rVB+AZJydKsMxsQBIJw4PKk=\r\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\r\ngithub.com/tklauser/go-sysconf v0.3.10/go.mod h1:C8XykCvCb+Gn0oNCWPIlcb0RuglQTYaQ2hGm7jmxEFk=\r\ngithub.com/tklauser/numcpus v0.4.0/go.mod h1:1+UI3pD8NW14VMwdgJNJ1ESk2UnwhAnz5hMwiKKqXCQ=\r\ngithub.com/yusufpapurcu/wmi v1.2.2 h1:KBNDSne4vP5mbSWnJbO+51IMOXJB67QiYCSBrubbPRg=\r\ngithub.com/yusufpapurcu/wmi v1.2.2/go.mod h1:SBZ9tNy3G9/m5Oi98Zks0QjeHVDvuK0qfxQmPyzfmi0=\r\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\r\ngolang.org/x/sys v0.0.0-20190916202348-b4ddaad3f8a3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\r\ngolang.org/x/sys v0.0.0-20201204225414-ed752295db88/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\r\ngolang.org/x/sys v0.0.0-20220128215802-99c3d69c2c27/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\r\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\r\ngolang.org/x/sys v0.0.0-20220817070843-5a390386f1f2 h1:fqTvyMIIj+HRzMmnzr9NtpHP6uVpvB5fkHcgPDC4nu8=\r\ngolang.org/x/sys v0.0.0-20220817070843-5a390386f1f2/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\r\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\r\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\r\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\r\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\r\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\r\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/go.sum b/go.sum
--- a/go.sum	(revision b6c9c1e8efbf197e08bd681060843b1bbd75b58b)
+++ b/go.sum	(date 1660734912689)
@@ -2,7 +2,6 @@
 github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=
 github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=
 github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=
-github.com/frankban/quicktest v1.14.3 h1:FJKSZTDHjyhriyC81FLQ0LY93eSai0ZyR/ZIkd3ZUKE=
 github.com/go-ole/go-ole v1.2.6 h1:/Fpf6oFPoeFik9ty7siob0G6Ke8QvQEuVcuChpwXzpY=
 github.com/go-ole/go-ole v1.2.6/go.mod h1:pprOEPIfldk/42T2oK7lQ4v4JSDwmV0As9GaiUsvbm0=
 github.com/google/go-cmp v0.5.6/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
@@ -12,8 +11,6 @@
 github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=
 github.com/jedib0t/go-pretty/v6 v6.3.6 h1:A6w2BuyPMtf7M82BGRBys9bAba2C26ZX9lrlrZ7uH6U=
 github.com/jedib0t/go-pretty/v6 v6.3.6/go.mod h1:MgmISkTWDSFu0xOqiZ0mKNntMQ2mDgOcwOkwBEkMDJI=
-github.com/kr/pretty v0.3.0 h1:WgNl7dwNpEZ6jJ9k1snq4pZsg7DOEN8hP9Xw0Tsjwk0=
-github.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=
 github.com/lufia/plan9stats v0.0.0-20211012122336-39d0f177ccd0/go.mod h1:zJYVVT2jmtg6P3p1VtQj7WsuWi/y4VnjVBn7F8KPB3I=
 github.com/lufia/plan9stats v0.0.0-20220517141722-cf486979b281 h1:aczX6NMOtt6L4YT0fQvKkDK6LZEtdOso9sUH89V1+P0=
 github.com/lufia/plan9stats v0.0.0-20220517141722-cf486979b281/go.mod h1:lc+czkgO/8F7puNki5jk8QyujbfK1LOT7Wl0ON2hxyk=
@@ -28,12 +25,9 @@
 github.com/rivo/uniseg v0.2.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=
 github.com/rivo/uniseg v0.3.4 h1:3Z3Eu6FGHZWSfNKJTOUiPatWwfc7DzJRU04jFUqJODw=
 github.com/rivo/uniseg v0.3.4/go.mod h1:FN3SvrM+Zdj16jyLfmOkMNblXMcoc8DfTHruCPUcx88=
-github.com/rogpeppe/go-internal v1.6.1 h1:/FiVV8dS/e+YqF2JvO3yXRFbBLTIuSDkuC7aBOAvL+k=
 github.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=
 github.com/shirou/gopsutil/v3 v3.22.7 h1:flKnuCMfUUrO+oAvwAd6GKZgnPzr098VA/UJ14nhJd4=
 github.com/shirou/gopsutil/v3 v3.22.7/go.mod h1:s648gW4IywYzUfE/KjXxUsqrqx/T2xO5VqOXxONeRfI=
-github.com/spf13/cast v1.5.0 h1:rj3WzYc11XZaIZMPKmwP96zkFEnnAmV8s6XbB2aY32w=
-github.com/spf13/cast v1.5.0/go.mod h1:SpXXQ5YoyJw6s3/6cMTQuxvgRl3PCJiyaX9p6b155UU=
 github.com/spf13/cobra v1.5.0 h1:X+jTBEBqF0bHN+9cSMgmfuvv2VHJ9ezmFNf9Y/XstYU=
 github.com/spf13/cobra v1.5.0/go.mod h1:dWXEIy2H428czQCjInthrTRUg7yKbok+2Qi/yBIJoUM=
 github.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=
@@ -44,7 +38,9 @@
 github.com/stretchr/testify v1.7.4/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=
 github.com/stretchr/testify v1.8.0 h1:pSgiaMZlXftHpm5L7V1+rVB+AZJydKsMxsQBIJw4PKk=
 github.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=
+github.com/tklauser/go-sysconf v0.3.10 h1:IJ1AZGZRWbY8T5Vfk04D9WOA5WSejdflXxP03OUqALw=
 github.com/tklauser/go-sysconf v0.3.10/go.mod h1:C8XykCvCb+Gn0oNCWPIlcb0RuglQTYaQ2hGm7jmxEFk=
+github.com/tklauser/numcpus v0.4.0 h1:E53Dm1HjH1/R2/aoCtXtPgzmElmn51aOkhCFSuZq//o=
 github.com/tklauser/numcpus v0.4.0/go.mod h1:1+UI3pD8NW14VMwdgJNJ1ESk2UnwhAnz5hMwiKKqXCQ=
 github.com/yusufpapurcu/wmi v1.2.2 h1:KBNDSne4vP5mbSWnJbO+51IMOXJB67QiYCSBrubbPRg=
 github.com/yusufpapurcu/wmi v1.2.2/go.mod h1:SBZ9tNy3G9/m5Oi98Zks0QjeHVDvuK0qfxQmPyzfmi0=
Index: vendor/modules.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># github.com/go-ole/go-ole v1.2.6\r\n## explicit; go 1.12\r\ngithub.com/go-ole/go-ole\r\ngithub.com/go-ole/go-ole/oleutil\r\n# github.com/inconshreveable/mousetrap v1.0.0\r\n## explicit\r\ngithub.com/inconshreveable/mousetrap\r\n# github.com/jedib0t/go-pretty/v6 v6.3.6\r\n## explicit; go 1.16\r\ngithub.com/jedib0t/go-pretty/v6/table\r\ngithub.com/jedib0t/go-pretty/v6/text\r\n# github.com/lufia/plan9stats v0.0.0-20220517141722-cf486979b281\r\n## explicit; go 1.16\r\ngithub.com/lufia/plan9stats\r\n# github.com/mattn/go-runewidth v0.0.13\r\n## explicit; go 1.9\r\ngithub.com/mattn/go-runewidth\r\n# github.com/power-devops/perfstat v0.0.0-20220216144756-c35f1ee13d7c\r\n## explicit; go 1.14\r\ngithub.com/power-devops/perfstat\r\n# github.com/rivo/uniseg v0.3.4\r\n## explicit; go 1.18\r\ngithub.com/rivo/uniseg\r\n# github.com/shirou/gopsutil/v3 v3.22.7\r\n## explicit; go 1.15\r\ngithub.com/shirou/gopsutil/v3/internal/common\r\ngithub.com/shirou/gopsutil/v3/mem\r\n# github.com/spf13/cast v1.5.0\r\n## explicit; go 1.18\r\ngithub.com/spf13/cast\r\n# github.com/spf13/cobra v1.5.0\r\n## explicit; go 1.15\r\ngithub.com/spf13/cobra\r\n# github.com/spf13/pflag v1.0.5\r\n## explicit; go 1.12\r\ngithub.com/spf13/pflag\r\n# github.com/yusufpapurcu/wmi v1.2.2\r\n## explicit; go 1.16\r\ngithub.com/yusufpapurcu/wmi\r\n# golang.org/x/sys v0.0.0-20220817070843-5a390386f1f2\r\n## explicit; go 1.17\r\ngolang.org/x/sys/internal/unsafeheader\r\ngolang.org/x/sys/unix\r\ngolang.org/x/sys/windows\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/modules.txt b/vendor/modules.txt
--- a/vendor/modules.txt	(revision b6c9c1e8efbf197e08bd681060843b1bbd75b58b)
+++ b/vendor/modules.txt	(date 1660734984221)
@@ -23,17 +23,21 @@
 github.com/rivo/uniseg
 # github.com/shirou/gopsutil/v3 v3.22.7
 ## explicit; go 1.15
+github.com/shirou/gopsutil/v3/cpu
 github.com/shirou/gopsutil/v3/internal/common
 github.com/shirou/gopsutil/v3/mem
-# github.com/spf13/cast v1.5.0
-## explicit; go 1.18
-github.com/spf13/cast
 # github.com/spf13/cobra v1.5.0
 ## explicit; go 1.15
 github.com/spf13/cobra
 # github.com/spf13/pflag v1.0.5
 ## explicit; go 1.12
 github.com/spf13/pflag
+# github.com/tklauser/go-sysconf v0.3.10
+## explicit; go 1.13
+github.com/tklauser/go-sysconf
+# github.com/tklauser/numcpus v0.4.0
+## explicit; go 1.11
+github.com/tklauser/numcpus
 # github.com/yusufpapurcu/wmi v1.2.2
 ## explicit; go 1.16
 github.com/yusufpapurcu/wmi
Index: vendor/github.com/tklauser/numcpus/.cirrus.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/numcpus/.cirrus.yml b/vendor/github.com/tklauser/numcpus/.cirrus.yml
new file mode 100644
--- /dev/null	(date 1660734983820)
+++ b/vendor/github.com/tklauser/numcpus/.cirrus.yml	(date 1660734983820)
@@ -0,0 +1,12 @@
+env:
+  CIRRUS_CLONE_DEPTH: 1
+
+freebsd_12_task:
+  freebsd_instance:
+    image_family: freebsd-12-3
+  install_script: |
+    pkg install -y git go
+    GOBIN=$PWD/bin go install golang.org/dl/go1.17.6@latest
+    bin/go1.17.6 download
+  build_script: bin/go1.17.6 build -v ./...
+  test_script: bin/go1.17.6 test -race ./...
Index: vendor/github.com/tklauser/numcpus/LICENSE
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/numcpus/LICENSE b/vendor/github.com/tklauser/numcpus/LICENSE
new file mode 100644
--- /dev/null	(date 1660734983821)
+++ b/vendor/github.com/tklauser/numcpus/LICENSE	(date 1660734983821)
@@ -0,0 +1,202 @@
+
+                                 Apache License
+                           Version 2.0, January 2004
+                        http://www.apache.org/licenses/
+
+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
+
+   1. Definitions.
+
+      "License" shall mean the terms and conditions for use, reproduction,
+      and distribution as defined by Sections 1 through 9 of this document.
+
+      "Licensor" shall mean the copyright owner or entity authorized by
+      the copyright owner that is granting the License.
+
+      "Legal Entity" shall mean the union of the acting entity and all
+      other entities that control, are controlled by, or are under common
+      control with that entity. For the purposes of this definition,
+      "control" means (i) the power, direct or indirect, to cause the
+      direction or management of such entity, whether by contract or
+      otherwise, or (ii) ownership of fifty percent (50%) or more of the
+      outstanding shares, or (iii) beneficial ownership of such entity.
+
+      "You" (or "Your") shall mean an individual or Legal Entity
+      exercising permissions granted by this License.
+
+      "Source" form shall mean the preferred form for making modifications,
+      including but not limited to software source code, documentation
+      source, and configuration files.
+
+      "Object" form shall mean any form resulting from mechanical
+      transformation or translation of a Source form, including but
+      not limited to compiled object code, generated documentation,
+      and conversions to other media types.
+
+      "Work" shall mean the work of authorship, whether in Source or
+      Object form, made available under the License, as indicated by a
+      copyright notice that is included in or attached to the work
+      (an example is provided in the Appendix below).
+
+      "Derivative Works" shall mean any work, whether in Source or Object
+      form, that is based on (or derived from) the Work and for which the
+      editorial revisions, annotations, elaborations, or other modifications
+      represent, as a whole, an original work of authorship. For the purposes
+      of this License, Derivative Works shall not include works that remain
+      separable from, or merely link (or bind by name) to the interfaces of,
+      the Work and Derivative Works thereof.
+
+      "Contribution" shall mean any work of authorship, including
+      the original version of the Work and any modifications or additions
+      to that Work or Derivative Works thereof, that is intentionally
+      submitted to Licensor for inclusion in the Work by the copyright owner
+      or by an individual or Legal Entity authorized to submit on behalf of
+      the copyright owner. For the purposes of this definition, "submitted"
+      means any form of electronic, verbal, or written communication sent
+      to the Licensor or its representatives, including but not limited to
+      communication on electronic mailing lists, source code control systems,
+      and issue tracking systems that are managed by, or on behalf of, the
+      Licensor for the purpose of discussing and improving the Work, but
+      excluding communication that is conspicuously marked or otherwise
+      designated in writing by the copyright owner as "Not a Contribution."
+
+      "Contributor" shall mean Licensor and any individual or Legal Entity
+      on behalf of whom a Contribution has been received by Licensor and
+      subsequently incorporated within the Work.
+
+   2. Grant of Copyright License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      copyright license to reproduce, prepare Derivative Works of,
+      publicly display, publicly perform, sublicense, and distribute the
+      Work and such Derivative Works in Source or Object form.
+
+   3. Grant of Patent License. Subject to the terms and conditions of
+      this License, each Contributor hereby grants to You a perpetual,
+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
+      (except as stated in this section) patent license to make, have made,
+      use, offer to sell, sell, import, and otherwise transfer the Work,
+      where such license applies only to those patent claims licensable
+      by such Contributor that are necessarily infringed by their
+      Contribution(s) alone or by combination of their Contribution(s)
+      with the Work to which such Contribution(s) was submitted. If You
+      institute patent litigation against any entity (including a
+      cross-claim or counterclaim in a lawsuit) alleging that the Work
+      or a Contribution incorporated within the Work constitutes direct
+      or contributory patent infringement, then any patent licenses
+      granted to You under this License for that Work shall terminate
+      as of the date such litigation is filed.
+
+   4. Redistribution. You may reproduce and distribute copies of the
+      Work or Derivative Works thereof in any medium, with or without
+      modifications, and in Source or Object form, provided that You
+      meet the following conditions:
+
+      (a) You must give any other recipients of the Work or
+          Derivative Works a copy of this License; and
+
+      (b) You must cause any modified files to carry prominent notices
+          stating that You changed the files; and
+
+      (c) You must retain, in the Source form of any Derivative Works
+          that You distribute, all copyright, patent, trademark, and
+          attribution notices from the Source form of the Work,
+          excluding those notices that do not pertain to any part of
+          the Derivative Works; and
+
+      (d) If the Work includes a "NOTICE" text file as part of its
+          distribution, then any Derivative Works that You distribute must
+          include a readable copy of the attribution notices contained
+          within such NOTICE file, excluding those notices that do not
+          pertain to any part of the Derivative Works, in at least one
+          of the following places: within a NOTICE text file distributed
+          as part of the Derivative Works; within the Source form or
+          documentation, if provided along with the Derivative Works; or,
+          within a display generated by the Derivative Works, if and
+          wherever such third-party notices normally appear. The contents
+          of the NOTICE file are for informational purposes only and
+          do not modify the License. You may add Your own attribution
+          notices within Derivative Works that You distribute, alongside
+          or as an addendum to the NOTICE text from the Work, provided
+          that such additional attribution notices cannot be construed
+          as modifying the License.
+
+      You may add Your own copyright statement to Your modifications and
+      may provide additional or different license terms and conditions
+      for use, reproduction, or distribution of Your modifications, or
+      for any such Derivative Works as a whole, provided Your use,
+      reproduction, and distribution of the Work otherwise complies with
+      the conditions stated in this License.
+
+   5. Submission of Contributions. Unless You explicitly state otherwise,
+      any Contribution intentionally submitted for inclusion in the Work
+      by You to the Licensor shall be under the terms and conditions of
+      this License, without any additional terms or conditions.
+      Notwithstanding the above, nothing herein shall supersede or modify
+      the terms of any separate license agreement you may have executed
+      with Licensor regarding such Contributions.
+
+   6. Trademarks. This License does not grant permission to use the trade
+      names, trademarks, service marks, or product names of the Licensor,
+      except as required for reasonable and customary use in describing the
+      origin of the Work and reproducing the content of the NOTICE file.
+
+   7. Disclaimer of Warranty. Unless required by applicable law or
+      agreed to in writing, Licensor provides the Work (and each
+      Contributor provides its Contributions) on an "AS IS" BASIS,
+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+      implied, including, without limitation, any warranties or conditions
+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
+      PARTICULAR PURPOSE. You are solely responsible for determining the
+      appropriateness of using or redistributing the Work and assume any
+      risks associated with Your exercise of permissions under this License.
+
+   8. Limitation of Liability. In no event and under no legal theory,
+      whether in tort (including negligence), contract, or otherwise,
+      unless required by applicable law (such as deliberate and grossly
+      negligent acts) or agreed to in writing, shall any Contributor be
+      liable to You for damages, including any direct, indirect, special,
+      incidental, or consequential damages of any character arising as a
+      result of this License or out of the use or inability to use the
+      Work (including but not limited to damages for loss of goodwill,
+      work stoppage, computer failure or malfunction, or any and all
+      other commercial damages or losses), even if such Contributor
+      has been advised of the possibility of such damages.
+
+   9. Accepting Warranty or Additional Liability. While redistributing
+      the Work or Derivative Works thereof, You may choose to offer,
+      and charge a fee for, acceptance of support, warranty, indemnity,
+      or other liability obligations and/or rights consistent with this
+      License. However, in accepting such obligations, You may act only
+      on Your own behalf and on Your sole responsibility, not on behalf
+      of any other Contributor, and only if You agree to indemnify,
+      defend, and hold each Contributor harmless for any liability
+      incurred by, or claims asserted against, such Contributor by reason
+      of your accepting any such warranty or additional liability.
+
+   END OF TERMS AND CONDITIONS
+
+   APPENDIX: How to apply the Apache License to your work.
+
+      To apply the Apache License to your work, attach the following
+      boilerplate notice, with the fields enclosed by brackets "[]"
+      replaced with your own identifying information. (Don't include
+      the brackets!)  The text should be enclosed in the appropriate
+      comment syntax for the file format. We also recommend that a
+      file or class name and description of purpose be included on the
+      same "printed page" as the copyright notice for easier
+      identification within third-party archives.
+
+   Copyright [yyyy] [name of copyright owner]
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
Index: vendor/github.com/tklauser/numcpus/numcpus.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/numcpus/numcpus.go b/vendor/github.com/tklauser/numcpus/numcpus.go
new file mode 100644
--- /dev/null	(date 1660734983823)
+++ b/vendor/github.com/tklauser/numcpus/numcpus.go	(date 1660734983823)
@@ -0,0 +1,75 @@
+// Copyright 2018-2022 Tobias Klauser
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+// Package numcpus provides information about the number of CPUs in the system.
+//
+// It gets the number of CPUs (online, offline, present, possible or kernel
+// maximum) on Linux, Darwin, FreeBSD, NetBSD, OpenBSD, DragonflyBSD,
+// Solaris/Illumos or Windows systems.
+//
+// On Linux, the information is retrieved by reading the corresponding CPU
+// topology files in /sys/devices/system/cpu.
+//
+// On BSD systems, the information is retrieved using the hw.ncpu and
+// hw.ncpuonline sysctls, if supported.
+//
+// On Windows systems, the information is retrieved using the
+// GetActiveProcessorCount and GetMaximumProcessorCount functions, respectively.
+//
+// Not all functions are supported on Darwin, FreeBSD, NetBSD, OpenBSD,
+// DragonflyBSD, Solaris/Illumos and Windows. ErrNotSupported is returned in
+// case a function is not supported on a particular platform.
+package numcpus
+
+import "errors"
+
+// ErrNotSupported is the error returned when the function is not supported.
+var ErrNotSupported = errors.New("function not supported")
+
+// GetConfigured returns the number of CPUs configured on the system. This
+// function should return the same value as `getconf _SC_NPROCESSORS_CONF` on a
+// unix system.
+func GetConfigured() (int, error) {
+	return getConfigured()
+}
+
+// GetKernelMax returns the maximum number of CPUs allowed by the kernel
+// configuration. This function is only supported on Linux and Windows systems.
+func GetKernelMax() (int, error) {
+	return getKernelMax()
+}
+
+// GetOffline returns the number of offline CPUs, i.e. CPUs that are not online
+// because they have been hotplugged off or exceed the limit of CPUs allowed by
+// the kernel configuration (see GetKernelMax). This function is only supported
+// on Linux systems.
+func GetOffline() (int, error) {
+	return getOffline()
+}
+
+// GetOnline returns the number of CPUs that are online and being scheduled.
+func GetOnline() (int, error) {
+	return getOnline()
+}
+
+// GetPossible returns the number of possible CPUs, i.e. CPUs that
+// have been allocated resources and can be brought online if they are present.
+func GetPossible() (int, error) {
+	return getPossible()
+}
+
+// GetPresent returns the number of CPUs present in the system.
+func GetPresent() (int, error) {
+	return getPresent()
+}
Index: vendor/github.com/tklauser/numcpus/numcpus_bsd.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/numcpus/numcpus_bsd.go b/vendor/github.com/tklauser/numcpus/numcpus_bsd.go
new file mode 100644
--- /dev/null	(date 1660734983823)
+++ b/vendor/github.com/tklauser/numcpus/numcpus_bsd.go	(date 1660734983823)
@@ -0,0 +1,66 @@
+// Copyright 2018 Tobias Klauser
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+//go:build darwin || dragonfly || freebsd || netbsd || openbsd
+// +build darwin dragonfly freebsd netbsd openbsd
+
+package numcpus
+
+import (
+	"runtime"
+
+	"golang.org/x/sys/unix"
+)
+
+func getConfigured() (int, error) {
+	n, err := unix.SysctlUint32("hw.ncpu")
+	return int(n), err
+}
+
+func getKernelMax() (int, error) {
+	if runtime.GOOS == "freebsd" {
+		n, err := unix.SysctlUint32("kern.smp.maxcpus")
+		return int(n), err
+	}
+	return 0, ErrNotSupported
+}
+
+func getOffline() (int, error) {
+	return 0, ErrNotSupported
+}
+
+func getOnline() (int, error) {
+	var n uint32
+	var err error
+	switch runtime.GOOS {
+	case "netbsd", "openbsd":
+		n, err = unix.SysctlUint32("hw.ncpuonline")
+		if err != nil {
+			n, err = unix.SysctlUint32("hw.ncpu")
+		}
+	default:
+		n, err = unix.SysctlUint32("hw.ncpu")
+	}
+	return int(n), err
+}
+
+func getPossible() (int, error) {
+	n, err := unix.SysctlUint32("hw.ncpu")
+	return int(n), err
+}
+
+func getPresent() (int, error) {
+	n, err := unix.SysctlUint32("hw.ncpu")
+	return int(n), err
+}
Index: vendor/github.com/tklauser/numcpus/numcpus_linux.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/numcpus/numcpus_linux.go b/vendor/github.com/tklauser/numcpus/numcpus_linux.go
new file mode 100644
--- /dev/null	(date 1660734983824)
+++ b/vendor/github.com/tklauser/numcpus/numcpus_linux.go	(date 1660734983824)
@@ -0,0 +1,120 @@
+// Copyright 2018 Tobias Klauser
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package numcpus
+
+import (
+	"io/ioutil"
+	"os"
+	"path/filepath"
+	"strconv"
+	"strings"
+
+	"golang.org/x/sys/unix"
+)
+
+const sysfsCPUBasePath = "/sys/devices/system/cpu"
+
+func getFromCPUAffinity() (int, error) {
+	var cpuSet unix.CPUSet
+	if err := unix.SchedGetaffinity(0, &cpuSet); err != nil {
+		return 0, err
+	}
+	return cpuSet.Count(), nil
+}
+
+func readCPURange(file string) (int, error) {
+	buf, err := ioutil.ReadFile(filepath.Join(sysfsCPUBasePath, file))
+	if err != nil {
+		return 0, err
+	}
+	return parseCPURange(strings.Trim(string(buf), "\n "))
+}
+
+func parseCPURange(cpus string) (int, error) {
+	n := int(0)
+	for _, cpuRange := range strings.Split(cpus, ",") {
+		if len(cpuRange) == 0 {
+			continue
+		}
+		rangeOp := strings.SplitN(cpuRange, "-", 2)
+		first, err := strconv.ParseUint(rangeOp[0], 10, 32)
+		if err != nil {
+			return 0, err
+		}
+		if len(rangeOp) == 1 {
+			n++
+			continue
+		}
+		last, err := strconv.ParseUint(rangeOp[1], 10, 32)
+		if err != nil {
+			return 0, err
+		}
+		n += int(last - first + 1)
+	}
+	return n, nil
+}
+
+func getConfigured() (int, error) {
+	d, err := os.Open(sysfsCPUBasePath)
+	if err != nil {
+		return 0, err
+	}
+	defer d.Close()
+	fis, err := d.Readdir(-1)
+	if err != nil {
+		return 0, err
+	}
+	count := 0
+	for _, fi := range fis {
+		if name := fi.Name(); fi.IsDir() && strings.HasPrefix(name, "cpu") {
+			_, err := strconv.ParseInt(name[3:], 10, 64)
+			if err == nil {
+				count++
+			}
+		}
+	}
+	return count, nil
+}
+
+func getKernelMax() (int, error) {
+	buf, err := ioutil.ReadFile(filepath.Join(sysfsCPUBasePath, "kernel_max"))
+	if err != nil {
+		return 0, err
+	}
+	n, err := strconv.ParseInt(strings.Trim(string(buf), "\n "), 10, 32)
+	if err != nil {
+		return 0, err
+	}
+	return int(n), nil
+}
+
+func getOffline() (int, error) {
+	return readCPURange("offline")
+}
+
+func getOnline() (int, error) {
+	if n, err := getFromCPUAffinity(); err == nil {
+		return n, nil
+	}
+	return readCPURange("online")
+}
+
+func getPossible() (int, error) {
+	return readCPURange("possible")
+}
+
+func getPresent() (int, error) {
+	return readCPURange("present")
+}
Index: vendor/github.com/tklauser/numcpus/numcpus_solaris.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/numcpus/numcpus_solaris.go b/vendor/github.com/tklauser/numcpus/numcpus_solaris.go
new file mode 100644
--- /dev/null	(date 1660734983825)
+++ b/vendor/github.com/tklauser/numcpus/numcpus_solaris.go	(date 1660734983825)
@@ -0,0 +1,56 @@
+// Copyright 2021 Tobias Klauser
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+//go:build solaris
+// +build solaris
+
+package numcpus
+
+import "golang.org/x/sys/unix"
+
+// taken from /usr/include/sys/unistd.h
+const (
+	_SC_NPROCESSORS_CONF = 14
+	_SC_NPROCESSORS_ONLN = 15
+	_SC_NPROCESSORS_MAX  = 516
+)
+
+func getConfigured() (int, error) {
+	n, err := unix.Sysconf(_SC_NPROCESSORS_CONF)
+	return int(n), err
+}
+
+func getKernelMax() (int, error) {
+	n, err := unix.Sysconf(_SC_NPROCESSORS_MAX)
+	return int(n), err
+}
+
+func getOffline() (int, error) {
+	return 0, ErrNotSupported
+}
+
+func getOnline() (int, error) {
+	n, err := unix.Sysconf(_SC_NPROCESSORS_ONLN)
+	return int(n), err
+}
+
+func getPossible() (int, error) {
+	n, err := unix.Sysconf(_SC_NPROCESSORS_CONF)
+	return int(n), err
+}
+
+func getPresent() (int, error) {
+	n, err := unix.Sysconf(_SC_NPROCESSORS_CONF)
+	return int(n), err
+}
Index: vendor/github.com/tklauser/numcpus/numcpus_unsupported.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/numcpus/numcpus_unsupported.go b/vendor/github.com/tklauser/numcpus/numcpus_unsupported.go
new file mode 100644
--- /dev/null	(date 1660734983826)
+++ b/vendor/github.com/tklauser/numcpus/numcpus_unsupported.go	(date 1660734983826)
@@ -0,0 +1,42 @@
+// Copyright 2021 Tobias Klauser
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+//go:build !darwin && !dragonfly && !freebsd && !linux && !netbsd && !openbsd && !solaris && !windows
+// +build !darwin,!dragonfly,!freebsd,!linux,!netbsd,!openbsd,!solaris,!windows
+
+package numcpus
+
+func getConfigured() (int, error) {
+	return 0, ErrNotSupported
+}
+
+func getKernelMax() (int, error) {
+	return 0, ErrNotSupported
+}
+
+func getOffline() (int, error) {
+	return 0, ErrNotSupported
+}
+
+func getOnline() (int, error) {
+	return 0, ErrNotSupported
+}
+
+func getPossible() (int, error) {
+	return 0, ErrNotSupported
+}
+
+func getPresent() (int, error) {
+	return 0, ErrNotSupported
+}
Index: vendor/github.com/tklauser/numcpus/numcpus_windows.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/numcpus/numcpus_windows.go b/vendor/github.com/tklauser/numcpus/numcpus_windows.go
new file mode 100644
--- /dev/null	(date 1660734983827)
+++ b/vendor/github.com/tklauser/numcpus/numcpus_windows.go	(date 1660734983827)
@@ -0,0 +1,41 @@
+// Copyright 2022 Tobias Klauser
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//     http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+package numcpus
+
+import "golang.org/x/sys/windows"
+
+func getConfigured() (int, error) {
+	return int(windows.GetActiveProcessorCount(windows.ALL_PROCESSOR_GROUPS)), nil
+}
+
+func getKernelMax() (int, error) {
+	return int(windows.GetMaximumProcessorCount(windows.ALL_PROCESSOR_GROUPS)), nil
+}
+
+func getOffline() (int, error) {
+	return 0, ErrNotSupported
+}
+
+func getOnline() (int, error) {
+	return int(windows.GetActiveProcessorCount(windows.ALL_PROCESSOR_GROUPS)), nil
+}
+
+func getPossible() (int, error) {
+	return int(windows.GetActiveProcessorCount(windows.ALL_PROCESSOR_GROUPS)), nil
+}
+
+func getPresent() (int, error) {
+	return int(windows.GetActiveProcessorCount(windows.ALL_PROCESSOR_GROUPS)), nil
+}
Index: vendor/github.com/tklauser/numcpus/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/numcpus/README.md b/vendor/github.com/tklauser/numcpus/README.md
new file mode 100644
--- /dev/null	(date 1660734983822)
+++ b/vendor/github.com/tklauser/numcpus/README.md	(date 1660734983822)
@@ -0,0 +1,52 @@
+# numcpus
+
+[![Go Reference](https://pkg.go.dev/badge/github.com/tklauser/numcpus.svg)](https://pkg.go.dev/github.com/tklauser/numcpus)
+[![GitHub Action Status](https://github.com/tklauser/numcpus/workflows/Tests/badge.svg)](https://github.com/tklauser/numcpus/actions?query=workflow%3ATests)
+
+Package numcpus provides information about the number of CPUs in the system.
+
+It gets the number of CPUs (online, offline, present, possible, configured or
+kernel maximum) on Linux, Darwin, FreeBSD, NetBSD, OpenBSD, DragonflyBSD or
+Solaris/Illumos systems.
+
+On Linux, the information is retrieved by reading the corresponding CPU
+topology files in `/sys/devices/system/cpu`.
+
+On BSD systems, the information is retrieved using the `hw.ncpu` and
+`hw.ncpuonline` sysctls, if supported.
+
+Not all functions are supported on Darwin, FreeBSD, NetBSD, OpenBSD,
+DragonflyBSD and Solaris/Illumos. ErrNotSupported is returned in case a
+function is not supported on a particular platform.
+
+## Usage
+
+```Go
+package main
+
+import (
+	"fmt"
+	"os"
+
+	"github.com/tklauser/numcpus"
+)
+
+func main() {
+	online, err := numcpus.GetOnline()
+	if err != nil {
+		fmt.Fprintf(os.Stderr, "GetOnline: %v\n", err)
+	}
+	fmt.Printf("online CPUs: %v\n", online)
+
+	possible, err := numcpus.GetPossible()
+	if err != nil {
+		fmt.Fprintf(os.Stderr, "GetPossible: %v\n", err)
+	}
+	fmt.Printf("possible CPUs: %v\n", possible)
+}
+```
+
+## References
+
+* [Linux kernel sysfs documentation for CPU attributes](https://www.kernel.org/doc/Documentation/ABI/testing/sysfs-devices-system-cpu)
+* [Linux kernel CPU topology documentation](https://www.kernel.org/doc/Documentation/cputopology.txt)
Index: vendor/github.com/tklauser/go-sysconf/.cirrus.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/.cirrus.yml b/vendor/github.com/tklauser/go-sysconf/.cirrus.yml
new file mode 100644
--- /dev/null	(date 1660734983765)
+++ b/vendor/github.com/tklauser/go-sysconf/.cirrus.yml	(date 1660734983765)
@@ -0,0 +1,22 @@
+env:
+  CIRRUS_CLONE_DEPTH: 1
+
+freebsd_12_task:
+  freebsd_instance:
+    image_family: freebsd-12-3
+  install_script: |
+    pkg install -y git go
+    GOBIN=$PWD/bin go install golang.org/dl/go1.17.7@latest
+    bin/go1.17.7 download
+  build_script: bin/go1.17.7 build -v ./...
+  test_script: bin/go1.17.7 test -race ./...
+
+freebsd_13_task:
+  freebsd_instance:
+    image_family: freebsd-13-0
+  install_script: |
+    pkg install -y git go
+    GOBIN=$PWD/bin go install golang.org/dl/go1.17.7@latest
+    bin/go1.17.7 download
+  build_script: bin/go1.17.7 build -v ./...
+  test_script: bin/go1.17.7 test -race ./...
Index: vendor/github.com/tklauser/go-sysconf/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/.gitignore b/vendor/github.com/tklauser/go-sysconf/.gitignore
new file mode 100644
--- /dev/null	(date 1660734983766)
+++ b/vendor/github.com/tklauser/go-sysconf/.gitignore	(date 1660734983766)
@@ -0,0 +1,1 @@
+_obj/
Index: vendor/github.com/tklauser/go-sysconf/LICENSE
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/LICENSE b/vendor/github.com/tklauser/go-sysconf/LICENSE
new file mode 100644
--- /dev/null	(date 1660734983767)
+++ b/vendor/github.com/tklauser/go-sysconf/LICENSE	(date 1660734983767)
@@ -0,0 +1,29 @@
+BSD 3-Clause License
+
+Copyright (c) 2018-2021, Tobias Klauser
+All rights reserved.
+
+Redistribution and use in source and binary forms, with or without
+modification, are permitted provided that the following conditions are met:
+
+* Redistributions of source code must retain the above copyright notice, this
+  list of conditions and the following disclaimer.
+
+* Redistributions in binary form must reproduce the above copyright notice,
+  this list of conditions and the following disclaimer in the documentation
+  and/or other materials provided with the distribution.
+
+* Neither the name of the copyright holder nor the names of its
+  contributors may be used to endorse or promote products derived from
+  this software without specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
+FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
+SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
+CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
+OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
Index: vendor/github.com/tklauser/go-sysconf/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/README.md b/vendor/github.com/tklauser/go-sysconf/README.md
new file mode 100644
--- /dev/null	(date 1660734983767)
+++ b/vendor/github.com/tklauser/go-sysconf/README.md	(date 1660734983767)
@@ -0,0 +1,46 @@
+# go-sysconf
+
+[![Go Reference](https://pkg.go.dev/badge/github.com/tklauser/go-sysconf.svg)](https://pkg.go.dev/github.com/tklauser/go-sysconf)
+[![GitHub Action Status](https://github.com/tklauser/go-sysconf/workflows/Tests/badge.svg)](https://github.com/tklauser/go-sysconf/actions?query=workflow%3ATests)
+
+`sysconf` for Go, without using cgo or external binaries (e.g. getconf).
+
+Supported operating systems: Linux, macOS, DragonflyBSD, FreeBSD, NetBSD, OpenBSD, Solaris/Illumos.
+
+All POSIX.1 and POSIX.2 variables are supported, see [References](#references) for a complete list.
+
+Additionally, the following non-standard variables are supported on some operating systems:
+
+| Variable | Supported on |
+|---|---|
+| `SC_PHYS_PAGES`       | Linux, macOS, FreeBSD, NetBSD, OpenBSD, Solaris/Illumos |
+| `SC_AVPHYS_PAGES`     | Linux, OpenBSD, Solaris/Illumos |
+| `SC_NPROCESSORS_CONF` | Linux, macOS, FreeBSD, NetBSD, OpenBSD, Solaris/Illumos |
+| `SC_NPROCESSORS_ONLN` | Linux, macOS, FreeBSD, NetBSD, OpenBSD, Solaris/Illumos |
+| `SC_UIO_MAXIOV`       | Linux |
+
+## Usage
+
+```Go
+package main
+
+import (
+	"fmt"
+
+	"github.com/tklauser/go-sysconf"
+)
+
+func main() {
+	// get clock ticks, this will return the same as C.sysconf(C._SC_CLK_TCK)
+	clktck, err := sysconf.Sysconf(sysconf.SC_CLK_TCK)
+	if err == nil {
+		fmt.Printf("SC_CLK_TCK: %v\n", clktck)
+	}
+}
+```
+
+## References
+
+* [POSIX documenation for `sysconf`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/sysconf.html)
+* [Linux manpage for `sysconf(3)`](http://man7.org/linux/man-pages/man3/sysconf.3.html)
+* [glibc constants for `sysconf` parameters](https://www.gnu.org/software/libc/manual/html_node/Constants-for-Sysconf.html)
Index: vendor/github.com/tklauser/go-sysconf/sysconf.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/sysconf.go b/vendor/github.com/tklauser/go-sysconf/sysconf.go
new file mode 100644
--- /dev/null	(date 1660734983769)
+++ b/vendor/github.com/tklauser/go-sysconf/sysconf.go	(date 1660734983769)
@@ -0,0 +1,21 @@
+// Copyright 2018 Tobias Klauser. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+// Package sysconf implements the sysconf(3) function and provides the
+// associated SC_* constants to query system configuration values.
+package sysconf
+
+import "errors"
+
+//go:generate go run mksysconf.go
+
+var errInvalid = errors.New("invalid parameter value")
+
+// Sysconf returns the value of a sysconf(3) runtime system parameter.
+// The name parameter should be a SC_* constant define in this package. The
+// implementation is GOOS-specific and certain SC_* constants might not be
+// defined for all GOOSes.
+func Sysconf(name int) (int64, error) {
+	return sysconf(name)
+}
Index: vendor/github.com/tklauser/go-sysconf/sysconf_bsd.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vendor/github.com/tklauser/go-sysconf/sysconf_bsd.go b/vendor/github.com/tklauser/go-sysconf/sysconf_bsd.go
new file mode 100644
--- /dev/null	(date 1660734983769)
+++ b/vendor/github.com/tklauser/go-sysconf/sysconf_bsd.go	(date 1660734983769)
@@ -0,0 +1,38 @@
+// Copyright 2018 Tobias Klauser. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+//go:build darwin || dragonfly || freebsd || netbsd || openbsd
+// +build darwin dragonfly freebsd netbsd openbsd
+
+package sysconf
+
+import "golang.org/x/sys/unix"
+
+func pathconf(path string, name int) int64 {
+	if val, err := unix.Pathconf(path, name); err == nil {
+		return int64(val)
+	}
+	return -1
+}
+
+func sysctl32(name string) int64 {
+	if val, err := unix.SysctlUint32(name); err == nil {
+		return int64(val)
+	}
+	return -1
+}
+
+func sysctl64(name string) int64 {
+	if val, err := unix.SysctlUint64(name); err == nil {
+		return int64(val)
+	}
+	return -1
+}
+
+func yesno(val int64) int64 {
+	if val == 0 {
+		return -1
+	}
+	return val
+}
